[
    {
        "id": "53da84f3cc85beb9",
        "type": "tab",
        "label": "Start-up",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e725212955cd3791",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "Create table \"balances\"",
        "func": "let acct = \"balances\"\nmsg.query = \"create table IF NOT EXISTS \" +acct+ \" (account VARCHAR(10), unixtime BIGINT, balance FLOAT)\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 20,
        "wires": [
            [
                "c7cdaf32fdd5022c"
            ]
        ]
    },
    {
        "id": "121a79c4a207a7f6",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "Create  \"balances_daily\"",
        "func": "let acct = \"balances_daily\"\nmsg.query= \"create table IF NOT EXISTS \" +acct+ \" (account VARCHAR(10), unixtime BIGINT, balance FLOAT)\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 60,
        "wires": [
            [
                "125ae9f65892c1e5"
            ]
        ]
    },
    {
        "id": "c7cdaf32fdd5022c",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 700,
        "y": 20,
        "wires": [
            [
                "6ed9d99f5ca192c5"
            ]
        ]
    },
    {
        "id": "367809645c9712e2",
        "type": "inject",
        "z": "53da84f3cc85beb9",
        "name": "Create tables on start up",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "e725212955cd3791",
                "121a79c4a207a7f6",
                "dbdfba6933a39e49",
                "a6c27ca9a4c00e7d",
                "461192f9bbea445e",
                "32cad398f2146035",
                "af08860315eb3da9",
                "90adbcbd269d5ed2",
                "3803d15ef7693f37",
                "5dd048df643dd165",
                "2190476322fb9230",
                "a5137e0af4e64ce2",
                "7879abfcb69cb145",
                "ddd9833eede2ceab",
                "0ea2b51186f02f03",
                "c4ca720f412db945",
                "d1cf061fbf560a7f",
                "6ff675cc56b06217",
                "41816b64f25dce8c",
                "300fd17e8fc92573",
                "535849288d07aaf5",
                "6bcc8cc133dd3ac0",
                "8b4439d1bad8d0c9",
                "9f4f055be0b40f73",
                "7dd4b24a2f3f6432"
            ]
        ]
    },
    {
        "id": "125ae9f65892c1e5",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 700,
        "y": 60,
        "wires": [
            [
                "562092859b07de77"
            ]
        ]
    },
    {
        "id": "0fab22cb35781ea6",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c136b30481afa917",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "dbdfba6933a39e49",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "Drop markets table",
        "func": "//msg.query = \"create table IF NOT EXISTS markets (symbol VARCHAR(10) PRIMARY KEY,name VARCHAR(100),polygon_symbol VARCHAR(10), alpaca_symbol VARCHAR(10), closing FLOAT,price24h FLOAT,price7d FLOAT, change24h FLOAT,change7d FLOAT,pct24 FLOAT,pct7d FLOAT)\"\nmsg.query = \"drop table markets\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 100,
        "wires": [
            [
                "0fab22cb35781ea6"
            ]
        ]
    },
    {
        "id": "b7a4b4e14219f57f",
        "type": "comment",
        "z": "53da84f3cc85beb9",
        "name": "RUN ONCE AT START: ",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "a6c27ca9a4c00e7d",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "drop portfolio table",
        "func": "msg.query = \"drop table portfolio\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 340,
        "wires": [
            [
                "5ab3e8825c93247a"
            ]
        ]
    },
    {
        "id": "461192f9bbea445e",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "drop algos table",
        "func": "msg.query = \"drop table algos\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 420,
        "wires": [
            [
                "61be241f9b0d95d3"
            ]
        ]
    },
    {
        "id": "92fe5a17e750c4a6",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "32cad398f2146035",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "drop positions table",
        "func": "msg.query = \"drop table positions\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 500,
        "wires": [
            [
                "92fe5a17e750c4a6"
            ]
        ]
    },
    {
        "id": "5ab3e8825c93247a",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "61be241f9b0d95d3",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "b629fab37e9eaf32",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "market tickers",
        "func": "msg.payload = \"SPY,QQQ,TSLA,VXX,BTCUSD,ETHUSD\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 180,
        "wires": [
            [
                "be9fd38754a6406a"
            ]
        ]
    },
    {
        "id": "af08860315eb3da9",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 180,
        "wires": [
            [
                "b629fab37e9eaf32"
            ]
        ]
    },
    {
        "id": "be9fd38754a6406a",
        "type": "split",
        "z": "53da84f3cc85beb9",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 830,
        "y": 180,
        "wires": [
            [
                "abc08045e04ea855"
            ]
        ]
    },
    {
        "id": "abc08045e04ea855",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "insert markets query",
        "func": "let symbol = msg.payload\nmsg.query = \"insert into markets (symbol) values ('\" +symbol+ \"');\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 180,
        "wires": [
            [
                "b0ec60d339c2412d"
            ]
        ]
    },
    {
        "id": "b0ec60d339c2412d",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1200,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "13da9df2a39d5120",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "watchlist tickers",
        "func": "msg.payload = \"AAPL,JPM,BAC,GLD\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 300,
        "wires": [
            [
                "f409479f272c5f24"
            ]
        ]
    },
    {
        "id": "90adbcbd269d5ed2",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 300,
        "wires": [
            [
                "13da9df2a39d5120"
            ]
        ]
    },
    {
        "id": "f409479f272c5f24",
        "type": "split",
        "z": "53da84f3cc85beb9",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 810,
        "y": 300,
        "wires": [
            [
                "7dd5f49b0f657b7d"
            ]
        ]
    },
    {
        "id": "fc57f007e92d774b",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1180,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "820617e383e9f296",
        "type": "comment",
        "z": "53da84f3cc85beb9",
        "name": "RUN ONCE AT START: Create alpaca_assets table",
        "info": "",
        "x": 230,
        "y": 1200,
        "wires": []
    },
    {
        "id": "1c263ffd3829adda",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "get crypto symbols from alpaca_assets",
        "func": "msg.query = \"select symbol from alpaca_assets where exchange = 'FTXU'\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1360,
        "wires": [
            [
                "48c0fa94c0f3b7b6"
            ]
        ]
    },
    {
        "id": "c07fea97a34dacd8",
        "type": "split",
        "z": "53da84f3cc85beb9",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 910,
        "y": 1360,
        "wires": [
            [
                "782d1b1b111f5b2a"
            ]
        ]
    },
    {
        "id": "48c0fa94c0f3b7b6",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 1360,
        "wires": [
            [
                "c07fea97a34dacd8"
            ]
        ]
    },
    {
        "id": "7dd5f49b0f657b7d",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "insert watchlist query",
        "func": "let symbol = msg.payload\nmsg.query = \"insert into watchlist (symbol) values ('\" +symbol+ \"');\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 300,
        "wires": [
            [
                "fc57f007e92d774b"
            ]
        ]
    },
    {
        "id": "3803d15ef7693f37",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "Drop watchlist table",
        "func": "//msg.query = \"create table IF NOT EXISTS watchlist (symbol VARCHAR(10) PRIMARY KEY,name VARCHAR(100),polygon_symbol VARCHAR(10), alpaca_symbol VARCHAR(10), closing FLOAT,price24h FLOAT,price7d FLOAT, change24h FLOAT,change7d FLOAT,pct24 FLOAT,pct7d FLOAT)\"\n//msg.query = \"delete from watchlist\"\nmsg.query = \"drop table watchlist\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 220,
        "wires": [
            [
                "c136b30481afa917"
            ]
        ]
    },
    {
        "id": "786dc8fc6506a162",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "update markets from alpaca_assets",
        "func": "msg.query = \"UPDATE markets SET name = alpaca_assets.name, polygon_symbol = alpaca_assets.polygon_symbol, alpaca_symbol = alpaca_assets.alpaca_symbol  FROM alpaca_assets where markets.symbol = alpaca_assets.symbol\"\n//node.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1400,
        "wires": [
            [
                "6b18d69bc4243c98"
            ]
        ]
    },
    {
        "id": "6b18d69bc4243c98",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "b9ad19e38cd9b0a7",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "613f5abf31104b9b",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "update watchlist from alpaca_assets",
        "func": "msg.query = \"UPDATE watchlist SET name = alpaca_assets.name, polygon_symbol = alpaca_assets.polygon_symbol, alpaca_symbol = alpaca_assets.alpaca_symbol  FROM alpaca_assets where watchlist.symbol = alpaca_assets.symbol\"\n//node.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1440,
        "wires": [
            [
                "b9ad19e38cd9b0a7"
            ]
        ]
    },
    {
        "id": "54ef7f236492d0c6",
        "type": "comment",
        "z": "53da84f3cc85beb9",
        "name": "Orders Table",
        "info": "",
        "x": 90,
        "y": 1620,
        "wires": []
    },
    {
        "id": "7b5552e050f8be21",
        "type": "split",
        "z": "53da84f3cc85beb9",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 1820,
        "wires": [
            [
                "bc5f19736e81775a"
            ]
        ]
    },
    {
        "id": "2eec17c79ef2854c",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1140,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "facce7cc8ff0a73a",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "get closed orders - live",
        "func": "/* Get Flow variables */\n\nlet ordertype = flow.get(\"orders\")\n//let limit  = flow.get(\"cnt\")\nordertype = \"closed\"\n\n/* Setup alpaca request arguments */\n\nmsg.payload = {\n    status: ordertype, // \"open or closed\"\n    limit: \"500\", // default is 500\n\tdirection: \"desc\" //  \"asc or desc\"\n\n}\n\n//node.warn(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1820,
        "wires": [
            [
                "30b5bc6baee951af"
            ]
        ]
    },
    {
        "id": "30b5bc6baee951af",
        "type": "alpaca-query-order",
        "z": "53da84f3cc85beb9",
        "conf": "0c86a5f06a42b505",
        "x": 620,
        "y": 1820,
        "wires": [
            [
                "7b5552e050f8be21"
            ]
        ]
    },
    {
        "id": "bc5f19736e81775a",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "insert into orders live",
        "func": "let id = msg.payload[\"id\"]\nlet client_order_id = msg.payload[\"client_order_id\"]\nlet created_at = msg.payload[\"created_at\"]\nlet updated_at = msg.payload[\"updated_at\"]\nlet submitted_at = msg.payload[\"submitted_at\"]\nlet filled_at = msg.payload[\"filled_at\"]\nlet expired_at = msg.payload[\"expired_at\"]\nlet canceled_at = msg.payload[\"canceled_at\"]\nlet failed_at = msg.payload[\"failed_at\"]\nlet replaced_at = msg.payload[\"replaced_at\"]\nlet replaced_by = msg.payload[\"replaced_by\"]\nlet replaces = msg.payload[\"replaces\"]\nlet asset_id = msg.payload[\"asset_id\"]\nlet symbol = msg.payload[\"symbol\"]\nlet asset_class = msg.payload[\"asset_class\"]\nlet notional = msg.payload[\"notional\"]\nlet qty = msg.payload[\"qty\"]\nif (qty === null) { qty = 0 }\n\n\nlet filled_qty = msg.payload[\"filled_qty\"]\nif (filled_qty === null) { filled_qty = 0 }\n\nlet filled_avg_price = msg.payload[\"filled_avg_price\"]\nif (filled_avg_price === null) { filled_avg_price = 0 }\n\n\nlet order_class = msg.payload[\"order_class\"]\nlet order_type = msg.payload[\"order_type\"]\nlet type = msg.payload[\"type\"]\nlet side = msg.payload[\"side\"]\nlet time_in_force = msg.payload[\"time_in_force\"]\n\nlet limit_price = msg.payload[\"limit_price\"]\nif (limit_price === null) { limit_price = 0 }\n\nlet stop_price = msg.payload[\"stop_price\"]\nif (stop_price === null ){ stop_price = 0}\n\nlet status = msg.payload[\"status\"]\nlet extended_hours = msg.payload[\"extended_hours\"]\nlet legs = msg.payload[\"legs\"]\n\nlet trail_percent = msg.payload[\"trail_percent\"]\nif (trail_percent === null) { trail_percent = 0 }\n\nlet trail_price = msg.payload[\"trail_price\"]\nif (trail_price === null) { trail_price = 0 }\n\nlet hwm = msg.payload[\"hwm\"]\nlet subtag = msg.payload[\"subtag\"]\nlet source = msg.payload[\"source\"]\n\nmsg.query = \"insert into orders (id,client_order_id,created_at,updated_at,submitted_at,filled_at,expired_at,canceled_at,failed_at,replaced_at,replaced_by,extended_hours,replaces,asset_id,symbol,asset_class,notional,qty,filled_qty,filled_avg_price,order_class,order_type,type,side,time_in_force,limit_price,stop_price,status,legs,trail_percent,trail_price,hwm,subtag,source, order_status, account) values ('\" + id + \"','\" + client_order_id + \"','\" + created_at + \"','\" + updated_at + \"','\" + submitted_at + \"','\" + filled_at + \"','\" + expired_at + \"','\" + canceled_at + \"','\" + failed_at + \"','\" + replaced_at + \"','\" + replaced_by + \"','\" + extended_hours + \"','\" + replaces + \"','\" + asset_id + \"','\" + symbol + \"','\" + asset_class + \"','\" + notional + \"','\" + qty + \"','\" + filled_qty + \"','\" + filled_avg_price + \"','\" + order_class + \"','\" + order_type + \"','\" + type + \"','\" + side + \"','\" + time_in_force + \"','\" + limit_price + \"','\" + stop_price + \"','\" + status + \"','\" + legs + \"','\" + trail_percent + \"','\" + trail_price + \"','\" + hwm + \"','\" + subtag + \"','\" + source+ \"', 'closed', 'live');\"\n//node.warn(symbol)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1820,
        "wires": [
            [
                "2eec17c79ef2854c"
            ]
        ]
    },
    {
        "id": "d58468da0c6e912d",
        "type": "split",
        "z": "53da84f3cc85beb9",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 1860,
        "wires": [
            [
                "e01cfee1ec2cf2dc"
            ]
        ]
    },
    {
        "id": "b220c9bafae9465b",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1140,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "57e9e87b8a959243",
        "type": "alpaca-query-order",
        "z": "53da84f3cc85beb9",
        "conf": "e535f42f1df1b25f",
        "x": 620,
        "y": 1860,
        "wires": [
            [
                "d58468da0c6e912d"
            ]
        ]
    },
    {
        "id": "1da1f1e92b3ade1b",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "truncate orders table",
        "func": "//msg.query = \"create table IF NOT EXISTS orders (id VARCHAR(100) PRIMARY KEY, client_order_id VARCHAR(100), created_at VARCHAR(100), updated_at VARCHAR(100), submitted_at VARCHAR(100), filled_at VARCHAR(100), expired_at VARCHAR(100), canceled_at VARCHAR(100), failed_at VARCHAR(100), replaced_at VARCHAR(100), replaced_by VARCHAR(100), replaces VARCHAR(100), asset_id VARCHAR(100), symbol VARCHAR(10), asset_class VARCHAR(10), notional VARCHAR(100), qty FLOAT, filled_qty FLOAT, filled_avg_price FLOAT, order_class VARCHAR(100), order_type VARCHAR(10), type VARCHAR(100), side VARCHAR(10), time_in_force VARCHAR(10), limit_price FLOAT, stop_price FLOAT, status VARCHAR(100), extended_hours BOOLEAN NOT NULL, legs VARCHAR(100), trail_percent FLOAT, trail_price FLOAT, hwm VARCHAR(100), subtag VARCHAR(100), source varchar(100), order_status VARCHAR(10), account VARCHAR(10)) \"\nmsg.query = \"truncate table orders\"\n//msg.query = \"select * from orders order by created_at desc limit 25 \"\n//msg.query = \"delete from orders\"\n//msg.query = \"update orders set id = 1671452659911, portfolioname = 'Buy Crypto Portfolio' where exchange = 'FTXU'\"\n//msg.query = \"update orders set id = 1671453742321, portfolioname = 'Buy/Short SPY on News Sentiment Daily' where symbol = 'SPY'\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1660,
        "wires": [
            [
                "2de287f17d370b4f"
            ]
        ]
    },
    {
        "id": "2de287f17d370b4f",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 480,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "91405cf41047fbef",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "get closed orders - paper",
        "func": "/* Get Flow variables */\n\nlet ordertype = flow.get(\"orders\")\n//let limit  = flow.get(\"cnt\")\nordertype = \"closed\"\n\n/* Setup alpaca request arguments */\n\nmsg.payload = {\n    status: ordertype, // \"open or closed\"\n    limit: \"500\", // default is 500\n\tdirection: \"desc\" //  \"asc or desc\"\n\n}\n\n//node.warn(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1860,
        "wires": [
            [
                "57e9e87b8a959243"
            ]
        ]
    },
    {
        "id": "e01cfee1ec2cf2dc",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "insert into orders paper",
        "func": "let id = msg.payload[\"id\"]\nlet client_order_id = msg.payload[\"client_order_id\"]\nlet created_at = msg.payload[\"created_at\"]\nlet updated_at = msg.payload[\"updated_at\"]\nlet submitted_at = msg.payload[\"submitted_at\"]\nlet filled_at = msg.payload[\"filled_at\"]\nlet expired_at = msg.payload[\"expired_at\"]\nlet canceled_at = msg.payload[\"canceled_at\"]\nlet failed_at = msg.payload[\"failed_at\"]\nlet replaced_at = msg.payload[\"replaced_at\"]\nlet replaced_by = msg.payload[\"replaced_by\"]\nlet replaces = msg.payload[\"replaces\"]\nlet asset_id = msg.payload[\"asset_id\"]\nlet symbol = msg.payload[\"symbol\"]\nlet asset_class = msg.payload[\"asset_class\"]\nlet notional = msg.payload[\"notional\"]\nlet qty = msg.payload[\"qty\"]\nif (qty === null) { qty = 0 }\n\n\nlet filled_qty = msg.payload[\"filled_qty\"]\nif (filled_qty === null) { filled_qty = 0 }\n\nlet filled_avg_price = msg.payload[\"filled_avg_price\"]\nif (filled_avg_price === null) { filled_avg_price = 0 }\n\n\nlet order_class = msg.payload[\"order_class\"]\nlet order_type = msg.payload[\"order_type\"]\nlet type = msg.payload[\"type\"]\nlet side = msg.payload[\"side\"]\nlet time_in_force = msg.payload[\"time_in_force\"]\n\nlet limit_price = msg.payload[\"limit_price\"]\nif (limit_price === null) { limit_price = 0 }\n\nlet stop_price = msg.payload[\"stop_price\"]\nif (stop_price === null ){ stop_price = 0}\n\nlet status = msg.payload[\"status\"]\nlet extended_hours = msg.payload[\"extended_hours\"]\nlet legs = msg.payload[\"legs\"]\n\nlet trail_percent = msg.payload[\"trail_percent\"]\nif (trail_percent === null) { trail_percent = 0 }\n\nlet trail_price = msg.payload[\"trail_price\"]\nif (trail_price === null) { trail_price = 0 }\n\nlet hwm = msg.payload[\"hwm\"]\nlet subtag = msg.payload[\"subtag\"]\nlet source = msg.payload[\"source\"]\n\nmsg.query = \"insert into orders (id,client_order_id,created_at,updated_at,submitted_at,filled_at,expired_at,canceled_at,failed_at,replaced_at,replaced_by,extended_hours,replaces,asset_id,symbol,asset_class,notional,qty,filled_qty,filled_avg_price,order_class,order_type,type,side,time_in_force,limit_price,stop_price,status,legs,trail_percent,trail_price,hwm,subtag,source, order_status, account) values ('\" + id + \"','\" + client_order_id + \"','\" + created_at + \"','\" + updated_at + \"','\" + submitted_at + \"','\" + filled_at + \"','\" + expired_at + \"','\" + canceled_at + \"','\" + failed_at + \"','\" + replaced_at + \"','\" + replaced_by + \"','\" + extended_hours + \"','\" + replaces + \"','\" + asset_id + \"','\" + symbol + \"','\" + asset_class + \"','\" + notional + \"','\" + qty + \"','\" + filled_qty + \"','\" + filled_avg_price + \"','\" + order_class + \"','\" + order_type + \"','\" + type + \"','\" + side + \"','\" + time_in_force + \"','\" + limit_price + \"','\" + stop_price + \"','\" + status + \"','\" + legs + \"','\" + trail_percent + \"','\" + trail_price + \"','\" + hwm + \"','\" + subtag + \"','\" + source+ \"', 'closed', 'paper');\"\n//node.warn(symbol)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1860,
        "wires": [
            [
                "b220c9bafae9465b"
            ]
        ]
    },
    {
        "id": "9f492c4492835b0a",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 660,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "cb058f7d4b645fdf",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "update symbol from alpaca_assets",
        "func": "msg.query = \"UPDATE orders SET symbol = alpaca_assets.symbol FROM alpaca_assets where orders.symbol = alpaca_assets.alpaca_symbol\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1900,
        "wires": [
            [
                "9f492c4492835b0a"
            ]
        ]
    },
    {
        "id": "160d753985141e06",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "Create portfolio table",
        "func": "msg.query = \"CREATE table IF NOT EXISTS portfolio (login VARCHAR(20), id BIGINT, account VARCHAR(10), portfolioname VARCHAR(100), asset_id VARCHAR(50), symbol VARCHAR(10), name VARCHAR(100), exchange VARCHAR(10), asset_class VARCHAR(10), asset_marginable VARCHAR(10), order_time VARCHAR(100), order_price FLOAT, order_qty FLOAT,order_value float, order_type VARCHAR(10), filled_at VARCHAR(100), qty FLOAT, avg_entry_price FLOAT, side VARCHAR(10), market_value FLOAT, market_value_today FLOAT,cost_basis FLOAT, unrealized_pl FLOAT, unrealized_plpc FLOAT, unrealized_intraday_pl FLOAT, unrealized_intraday_plpc FLOAT, current_price FLOAT, lastday_price FLOAT, change_today FLOAT, clientorderid VARCHAR(100), newqty FLOAT, newside VARCHAR(10), newfilled_at VARCHAR(100), newavg_entry_price FLOAT, newcost_basis FLOAT, newclient_order_id VARCHAR(100))\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 380,
        "wires": [
            [
                "87f9b5718e85bc9f"
            ]
        ]
    },
    {
        "id": "ada35bb96fbd4a1c",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "Create algos table",
        "func": "msg.query = \"create table IF NOT EXISTS algos (login varchar(20), id BIGINT, algo_name VARCHAR(100), algo_type VARCHAR(10), status VARCHAR(10), benchmark VARCHAR(10), benchmark_start FLOAT,portfolio_size FLOAT, gain_today FLOAT, pctgain_today FLOAT, gain_alltime FLOAT, pctgain_alltime FLOAT,pctbench_today FLOAT, pctbench_alltime FLOAT, info_ratio FLOAT, tickers VARCHAR(5000),asset_class VARCHAR(10), number INT );\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 460,
        "wires": [
            [
                "329838676826a73c"
            ]
        ]
    },
    {
        "id": "abf2ccc954864be3",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "create positions table",
        "func": "msg.query = \"create table IF NOT EXISTS positions (id BIGINT, asset_id VARCHAR(100), portfolioname VARCHAR(100), symbol VARCHAR(10) PRIMARY KEY, name VARCHAR(500), account VARCHAR(10), exchange VARCHAR(100), asset_class VARCHAR(100), asset_marginable VARCHAR(100), qty FLOAT, avg_entry_price FLOAT, side VARCHAR(100), market_value FLOAT, cost_basis FLOAT, unrealized_pl FLOAT, unrealized_plpc FLOAT, unrealized_intraday_pl FLOAT, unrealized_intraday_plpc FLOAT, current_price FLOAT, lastday_price FLOAT, change_today FLOAT, qty_available FLOAT, status VARCHAR(10), orderid VARCHAR(100))\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 540,
        "wires": [
            [
                "b0e96ba5eaf0e56a"
            ]
        ]
    },
    {
        "id": "5dd048df643dd165",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 580,
        "y": 380,
        "wires": [
            [
                "160d753985141e06"
            ]
        ]
    },
    {
        "id": "b0e96ba5eaf0e56a",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 920,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "87f9b5718e85bc9f",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 940,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "329838676826a73c",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 900,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "2190476322fb9230",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 560,
        "y": 460,
        "wires": [
            [
                "ada35bb96fbd4a1c"
            ]
        ]
    },
    {
        "id": "a5137e0af4e64ce2",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 560,
        "y": 540,
        "wires": [
            [
                "abf2ccc954864be3"
            ]
        ]
    },
    {
        "id": "b27fa5822d52b1ca",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 220,
        "y": 1900,
        "wires": [
            [
                "cb058f7d4b645fdf"
            ]
        ]
    },
    {
        "id": "6a3c8e87c9579464",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "delete from balances",
        "func": "msg.query = \"delete from balances\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 20,
        "wires": [
            [
                "594a4925a9979394"
            ]
        ]
    },
    {
        "id": "594a4925a9979394",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "6ed9d99f5ca192c5",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 20,
        "wires": [
            [
                "6a3c8e87c9579464"
            ]
        ]
    },
    {
        "id": "997f7ca7c598329d",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "delete from balances_daily",
        "func": "msg.query = \"delete from balances_daily\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 60,
        "wires": [
            [
                "4e93d650c49424aa"
            ]
        ]
    },
    {
        "id": "4e93d650c49424aa",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "562092859b07de77",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 60,
        "wires": [
            [
                "997f7ca7c598329d"
            ]
        ]
    },
    {
        "id": "be0d89efb8e05ad3",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "create order_confirms table",
        "func": "//msg.query = \"DROP TABLE order_confirms\"\nmsg.query = \"create table IF NOT EXISTS order_confirms (id VARCHAR(200), client_order_id VARCHAR(200), created_at VARCHAR(200), updated_at VARCHAR(200), submitted_at VARCHAR(200), filled_at VARCHAR(200), expired_at VARCHAR(200), canceled_at VARCHAR(200), failed_at VARCHAR(200), replaced_at VARCHAR(200), replaced_by VARCHAR(200), replaces VARCHAR(200), asset_id VARCHAR(200), symbol VARCHAR(40), asset_class VARCHAR(40), notional FLOAT, qty FLOAT, filled_qty FLOAT, filled_avg_price FLOAT, order_class VARCHAR(40), order_type VARCHAR(40), type VARCHAR(40), side VARCHAR(40),  time_in_force VARCHAR(40), limit_price FLOAT, stop_price FLOAT, status VARCHAR(40), extended_hours BOOLEAN, legs BOOLEAN, trail_percent FLOAT, trail_price FLOAT, hwm VARCHAR(40), subtag VARCHAR(200), source VARCHAR(40))\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 620,
        "wires": [
            [
                "7db6783a9cc37624"
            ]
        ]
    },
    {
        "id": "7db6783a9cc37624",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 960,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "7879abfcb69cb145",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 560,
        "y": 620,
        "wires": [
            [
                "be0d89efb8e05ad3"
            ]
        ]
    },
    {
        "id": "ddd9833eede2ceab",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "drop orders_confirms table",
        "func": "msg.query = \"drop table orders_confirms\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 580,
        "wires": [
            [
                "c2b4614f53b03034"
            ]
        ]
    },
    {
        "id": "c2b4614f53b03034",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 700,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "e3f348b0fa9a42fc",
        "type": "inject",
        "z": "53da84f3cc85beb9",
        "name": "GO",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 1240,
        "wires": [
            [
                "3c25143db01be471",
                "7a8fac4f330219d5",
                "16000b7d778625e8",
                "b3e192f8df309203",
                "255d3f02facc9ed5",
                "0c648d6bee0bbab6"
            ]
        ]
    },
    {
        "id": "0c28549f707fb60c",
        "type": "alpaca-asset-query",
        "z": "53da84f3cc85beb9",
        "conf": "e535f42f1df1b25f",
        "x": 470,
        "y": 1280,
        "wires": [
            [
                "1e9acc3ab88961a7"
            ]
        ]
    },
    {
        "id": "3c25143db01be471",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "truncate alpaca_assets",
        "func": "msg.query = \"truncate table alpaca_assets\"\n//msg.query = \"CREATE TABLE IF NOT EXISTS alpaca_assets (id VARCHAR(100), symbol varchar(10) PRIMARY KEY, name VARCHAR(200), alpaca_symbol VARCHAR(10), polygon_symbol VARCHAR(10), easy_to_borrow BOOLEAN, exchange VARCHAR(10), shortable BOOLEAN, fractionable BOOLEAN, marginable BOOLEAN, status VARCHAR(10), tradable BOOLEAN)\"\nnode.warn(msg.query)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1240,
        "wires": [
            [
                "b5616d059bed4b71"
            ]
        ]
    },
    {
        "id": "b5616d059bed4b71",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 540,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "7a8fac4f330219d5",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 280,
        "y": 1280,
        "wires": [
            [
                "0c28549f707fb60c"
            ]
        ]
    },
    {
        "id": "1e9acc3ab88961a7",
        "type": "split",
        "z": "53da84f3cc85beb9",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 630,
        "y": 1280,
        "wires": [
            [
                "1fb8e7338bf527e0"
            ]
        ]
    },
    {
        "id": "d594b691b663409f",
        "type": "split",
        "z": "53da84f3cc85beb9",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 1740,
        "wires": [
            [
                "3408f6590197b58d"
            ]
        ]
    },
    {
        "id": "cfb3fca650d3fd18",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1140,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "f3760d5b38401418",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "get open orders - live",
        "func": "/* Get Flow variables */\n\nlet ordertype = flow.get(\"orders\")\n//let limit  = flow.get(\"cnt\")\nordertype = \"open\"\n\n/* Setup alpaca request arguments */\n\nmsg.payload = {\n    status: ordertype, // \"open or closed\"\n    limit: \"500\", // default is 500\n\tdirection: \"desc\" //  \"asc or desc\"\n\n}\n\n//node.warn(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1740,
        "wires": [
            [
                "0a8c38c414ca4b20"
            ]
        ]
    },
    {
        "id": "0a8c38c414ca4b20",
        "type": "alpaca-query-order",
        "z": "53da84f3cc85beb9",
        "conf": "0c86a5f06a42b505",
        "x": 620,
        "y": 1740,
        "wires": [
            [
                "d594b691b663409f"
            ]
        ]
    },
    {
        "id": "3408f6590197b58d",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "insert into orders live",
        "func": "let id = msg.payload[\"id\"]\nlet client_order_id = msg.payload[\"client_order_id\"]\nlet created_at = msg.payload[\"created_at\"]\nlet updated_at = msg.payload[\"updated_at\"]\nlet submitted_at = msg.payload[\"submitted_at\"]\nlet filled_at = msg.payload[\"filled_at\"]\nlet expired_at = msg.payload[\"expired_at\"]\nlet canceled_at = msg.payload[\"canceled_at\"]\nlet failed_at = msg.payload[\"failed_at\"]\nlet replaced_at = msg.payload[\"replaced_at\"]\nlet replaced_by = msg.payload[\"replaced_by\"]\nlet replaces = msg.payload[\"replaces\"]\nlet asset_id = msg.payload[\"asset_id\"]\nlet symbol = msg.payload[\"symbol\"]\nlet asset_class = msg.payload[\"asset_class\"]\nlet notional = msg.payload[\"notional\"]\nlet qty = msg.payload[\"qty\"]\nif (qty === null) { qty = 0 }\n\n\nlet filled_qty = msg.payload[\"filled_qty\"]\nif (filled_qty === null) { filled_qty = 0 }\n\nlet filled_avg_price = msg.payload[\"filled_avg_price\"]\nif (filled_avg_price === null) { filled_avg_price = 0 }\n\n\nlet order_class = msg.payload[\"order_class\"]\nlet order_type = msg.payload[\"order_type\"]\nlet type = msg.payload[\"type\"]\nlet side = msg.payload[\"side\"]\nlet time_in_force = msg.payload[\"time_in_force\"]\n\nlet limit_price = msg.payload[\"limit_price\"]\nif (limit_price === null) { limit_price = 0 }\n\nlet stop_price = msg.payload[\"stop_price\"]\nif (stop_price === null ){ stop_price = 0}\n\nlet status = msg.payload[\"status\"]\nlet extended_hours = msg.payload[\"extended_hours\"]\nlet legs = msg.payload[\"legs\"]\n\nlet trail_percent = msg.payload[\"trail_percent\"]\nif (trail_percent === null) { trail_percent = 0 }\n\nlet trail_price = msg.payload[\"trail_price\"]\nif (trail_price === null) { trail_price = 0 }\n\nlet hwm = msg.payload[\"hwm\"]\nlet subtag = msg.payload[\"subtag\"]\nlet source = msg.payload[\"source\"]\n\nmsg.query = \"insert into orders (id,client_order_id,created_at,updated_at,submitted_at,filled_at,expired_at,canceled_at,failed_at,replaced_at,replaced_by,extended_hours,replaces,asset_id,symbol,asset_class,notional,qty,filled_qty,filled_avg_price,order_class,order_type,type,side,time_in_force,limit_price,stop_price,status,legs,trail_percent,trail_price,hwm,subtag,source, order_status, account) values ('\" + id + \"','\" + client_order_id + \"','\" + created_at + \"','\" + updated_at + \"','\" + submitted_at + \"','\" + filled_at + \"','\" + expired_at + \"','\" + canceled_at + \"','\" + failed_at + \"','\" + replaced_at + \"','\" + replaced_by + \"','\" + extended_hours + \"','\" + replaces + \"','\" + asset_id + \"','\" + symbol + \"','\" + asset_class + \"','\" + notional + \"','\" + qty + \"','\" + filled_qty + \"','\" + filled_avg_price + \"','\" + order_class + \"','\" + order_type + \"','\" + type + \"','\" + side + \"','\" + time_in_force + \"','\" + limit_price + \"','\" + stop_price + \"','\" + status + \"','\" + legs + \"','\" + trail_percent + \"','\" + trail_price + \"','\" + hwm + \"','\" + subtag + \"','\" + source+ \"', 'open', 'live');\"\n//node.warn(symbol)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1740,
        "wires": [
            [
                "cfb3fca650d3fd18"
            ]
        ]
    },
    {
        "id": "68b001a78abef571",
        "type": "split",
        "z": "53da84f3cc85beb9",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 1780,
        "wires": [
            [
                "6ad04b68071e6ccd"
            ]
        ]
    },
    {
        "id": "b1b6ad72fd2ac53a",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1140,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "7d2c473cc5b44468",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "get open orders - paper",
        "func": "/* Get Flow variables */\n\nlet ordertype = flow.get(\"orders\")\n//let limit  = flow.get(\"cnt\")\nordertype = \"open\"\n\n/* Setup alpaca request arguments */\n\nmsg.payload = {\n    status: ordertype, // \"open or closed\"\n    limit: \"500\", // default is 500\n\tdirection: \"desc\" //  \"asc or desc\"\n\n}\n\n//node.warn(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1780,
        "wires": [
            [
                "57bce2b6af9fdf4b"
            ]
        ]
    },
    {
        "id": "57bce2b6af9fdf4b",
        "type": "alpaca-query-order",
        "z": "53da84f3cc85beb9",
        "conf": "e535f42f1df1b25f",
        "x": 620,
        "y": 1780,
        "wires": [
            [
                "68b001a78abef571"
            ]
        ]
    },
    {
        "id": "6ad04b68071e6ccd",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "insert into orders paper",
        "func": "let id = msg.payload[\"id\"]\nlet client_order_id = msg.payload[\"client_order_id\"]\nlet created_at = msg.payload[\"created_at\"]\nlet updated_at = msg.payload[\"updated_at\"]\nlet submitted_at = msg.payload[\"submitted_at\"]\nlet filled_at = msg.payload[\"filled_at\"]\nlet expired_at = msg.payload[\"expired_at\"]\nlet canceled_at = msg.payload[\"canceled_at\"]\nlet failed_at = msg.payload[\"failed_at\"]\nlet replaced_at = msg.payload[\"replaced_at\"]\nlet replaced_by = msg.payload[\"replaced_by\"]\nlet replaces = msg.payload[\"replaces\"]\nlet asset_id = msg.payload[\"asset_id\"]\nlet symbol = msg.payload[\"symbol\"]\nlet asset_class = msg.payload[\"asset_class\"]\nlet notional = msg.payload[\"notional\"]\nlet qty = msg.payload[\"qty\"]\nif (qty === null) { qty = 0 }\n\n\nlet filled_qty = msg.payload[\"filled_qty\"]\nif (filled_qty === null) { filled_qty = 0 }\n\nlet filled_avg_price = msg.payload[\"filled_avg_price\"]\nif (filled_avg_price === null) { filled_avg_price = 0 }\n\n\nlet order_class = msg.payload[\"order_class\"]\nlet order_type = msg.payload[\"order_type\"]\nlet type = msg.payload[\"type\"]\nlet side = msg.payload[\"side\"]\nlet time_in_force = msg.payload[\"time_in_force\"]\n\nlet limit_price = msg.payload[\"limit_price\"]\nif (limit_price === null) { limit_price = 0 }\n\nlet stop_price = msg.payload[\"stop_price\"]\nif (stop_price === null ){ stop_price = 0}\n\nlet status = msg.payload[\"status\"]\nlet extended_hours = msg.payload[\"extended_hours\"]\nlet legs = msg.payload[\"legs\"]\n\nlet trail_percent = msg.payload[\"trail_percent\"]\nif (trail_percent === null) { trail_percent = 0 }\n\nlet trail_price = msg.payload[\"trail_price\"]\nif (trail_price === null) { trail_price = 0 }\n\nlet hwm = msg.payload[\"hwm\"]\nlet subtag = msg.payload[\"subtag\"]\nlet source = msg.payload[\"source\"]\n\nmsg.query = \"insert into orders (id,client_order_id,created_at,updated_at,submitted_at,filled_at,expired_at,canceled_at,failed_at,replaced_at,replaced_by,extended_hours,replaces,asset_id,symbol,asset_class,notional,qty,filled_qty,filled_avg_price,order_class,order_type,type,side,time_in_force,limit_price,stop_price,status,legs,trail_percent,trail_price,hwm,subtag,source, order_status, account) values ('\" + id + \"','\" + client_order_id + \"','\" + created_at + \"','\" + updated_at + \"','\" + submitted_at + \"','\" + filled_at + \"','\" + expired_at + \"','\" + canceled_at + \"','\" + failed_at + \"','\" + replaced_at + \"','\" + replaced_by + \"','\" + extended_hours + \"','\" + replaces + \"','\" + asset_id + \"','\" + symbol + \"','\" + asset_class + \"','\" + notional + \"','\" + qty + \"','\" + filled_qty + \"','\" + filled_avg_price + \"','\" + order_class + \"','\" + order_type + \"','\" + type + \"','\" + side + \"','\" + time_in_force + \"','\" + limit_price + \"','\" + stop_price + \"','\" + status + \"','\" + legs + \"','\" + trail_percent + \"','\" + trail_price + \"','\" + hwm + \"','\" + subtag + \"','\" + source+ \"', 'open', 'paper');\"\n//node.warn(symbol)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1780,
        "wires": [
            [
                "b1b6ad72fd2ac53a"
            ]
        ]
    },
    {
        "id": "754ec42e6c07509f",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 220,
        "y": 1740,
        "wires": [
            [
                "f3760d5b38401418"
            ]
        ]
    },
    {
        "id": "eb83b71e293db399",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 220,
        "y": 1780,
        "wires": [
            [
                "7d2c473cc5b44468"
            ]
        ]
    },
    {
        "id": "1c7cde5d8ee52078",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 220,
        "y": 1820,
        "wires": [
            [
                "facce7cc8ff0a73a"
            ]
        ]
    },
    {
        "id": "0c95b7d52c437c46",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 220,
        "y": 1860,
        "wires": [
            [
                "91405cf41047fbef"
            ]
        ]
    },
    {
        "id": "28d494aeda2e1129",
        "type": "inject",
        "z": "53da84f3cc85beb9",
        "name": "GO",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 1660,
        "wires": [
            [
                "1da1f1e92b3ade1b",
                "754ec42e6c07509f",
                "eb83b71e293db399",
                "1c7cde5d8ee52078",
                "0c95b7d52c437c46",
                "b27fa5822d52b1ca"
            ]
        ]
    },
    {
        "id": "3c820b76b0ef085b",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "create orders table ",
        "func": "msg.query = \"create table IF NOT EXISTS orders (id VARCHAR(100), client_order_id VARCHAR(100), created_at VARCHAR(100), updated_at VARCHAR(100), submitted_at VARCHAR(100), filled_at VARCHAR(100), expired_at VARCHAR(100), canceled_at VARCHAR(100), failed_at VARCHAR(100), replaced_at VARCHAR(100), replaced_by VARCHAR(100), replaces VARCHAR(100), asset_id VARCHAR(100), symbol VARCHAR(10), asset_class VARCHAR(10), notional VARCHAR(100), qty FLOAT, filled_qty FLOAT, filled_avg_price FLOAT, order_class VARCHAR(100), order_type VARCHAR(10), type VARCHAR(100), side VARCHAR(10), time_in_force VARCHAR(10), limit_price FLOAT, stop_price FLOAT, status VARCHAR(100), extended_hours BOOLEAN NOT NULL, legs VARCHAR(100), trail_percent FLOAT, trail_price FLOAT, hwm VARCHAR(100), subtag VARCHAR(100), source varchar(100), order_status VARCHAR(10), account VARCHAR(10)) \"\n//msg.query = \"drop table orders\"\n//msg.query = \"select * from orders order by created_at desc limit 25 \"\n//msg.query = \"delete from orders\"\n//msg.query = \"update orders set id = 1671452659911, portfolioname = 'Buy Crypto Portfolio' where exchange = 'FTXU'\"\n//msg.query = \"update orders set id = 1671453742321, portfolioname = 'Buy/Short SPY on News Sentiment Daily' where symbol = 'SPY'\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 700,
        "wires": [
            [
                "7ddb1b1fc12292aa"
            ]
        ]
    },
    {
        "id": "7ddb1b1fc12292aa",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 880,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "535849288d07aaf5",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 700,
        "wires": [
            [
                "3c820b76b0ef085b"
            ]
        ]
    },
    {
        "id": "0ea2b51186f02f03",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "drop orders table",
        "func": "msg.query = \"drop table orders\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 660,
        "wires": [
            [
                "844cd94a8d4683a0"
            ]
        ]
    },
    {
        "id": "844cd94a8d4683a0",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "e775057040d35b32",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "create orders_open table ",
        "func": "msg.query = \"create table IF NOT EXISTS orders_open (id VARCHAR(100) PRIMARY KEY, client_order_id VARCHAR(100), created_at VARCHAR(100), updated_at VARCHAR(100), submitted_at VARCHAR(100), filled_at VARCHAR(100), expired_at VARCHAR(100), canceled_at VARCHAR(100), failed_at VARCHAR(100), replaced_at VARCHAR(100), replaced_by VARCHAR(100), replaces VARCHAR(100), asset_id VARCHAR(100), symbol VARCHAR(10), asset_class VARCHAR(10), notional VARCHAR(100), qty FLOAT, filled_qty FLOAT, filled_avg_price FLOAT, order_class VARCHAR(100), order_type VARCHAR(10), type VARCHAR(100), side VARCHAR(10), time_in_force VARCHAR(10), limit_price FLOAT, stop_price FLOAT, status VARCHAR(100), extended_hours BOOLEAN NOT NULL, legs VARCHAR(100), trail_percent FLOAT, trail_price FLOAT, hwm VARCHAR(100), subtag VARCHAR(100), source varchar(100), order_status VARCHAR(10), account VARCHAR(10)) \"\n//msg.query = \"drop table orders\"\n//msg.query = \"select * from orders order by created_at desc limit 25 \"\n//msg.query = \"delete from orders\"\n//msg.query = \"update orders set id = 1671452659911, portfolioname = 'Buy Crypto Portfolio' where exchange = 'FTXU'\"\n//msg.query = \"update orders set id = 1671453742321, portfolioname = 'Buy/Short SPY on News Sentiment Daily' where symbol = 'SPY'\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 840,
        "wires": [
            [
                "4b65101521dfa618"
            ]
        ]
    },
    {
        "id": "4b65101521dfa618",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 940,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "6bcc8cc133dd3ac0",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 840,
        "wires": [
            [
                "e775057040d35b32"
            ]
        ]
    },
    {
        "id": "c4ca720f412db945",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "drop orders table",
        "func": "msg.query = \"drop table orders_open\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 800,
        "wires": [
            [
                "28403c7b0a2b6cac"
            ]
        ]
    },
    {
        "id": "28403c7b0a2b6cac",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "ea772eaa65bb6d04",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "create temp_orders table ",
        "func": "msg.query = \"create table IF NOT EXISTS temp_orders (symbol VARCHAR(10) PRIMARY KEY, open Boolean)\"\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 920,
        "wires": [
            [
                "47e280762aeb1f09"
            ]
        ]
    },
    {
        "id": "47e280762aeb1f09",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 920,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "8b4439d1bad8d0c9",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 920,
        "wires": [
            [
                "ea772eaa65bb6d04"
            ]
        ]
    },
    {
        "id": "d1cf061fbf560a7f",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "drop temp_orders table",
        "func": "msg.query = \"drop table temp_orders\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 880,
        "wires": [
            [
                "718f1c9f6f7f7a42"
            ]
        ]
    },
    {
        "id": "718f1c9f6f7f7a42",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "1fb8e7338bf527e0",
        "type": "switch",
        "z": "53da84f3cc85beb9",
        "name": "active only",
        "property": "payload[\"status\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "active",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 1280,
        "wires": [
            [
                "ee254f75e8ea9c0c"
            ],
            []
        ]
    },
    {
        "id": "ee254f75e8ea9c0c",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "insert into alpaca_assets",
        "func": "let symbol = msg.payload[\"symbol\"]\nlet name = msg.payload[\"name\"]\nlet exchange = msg.payload[\"exchange\"]\nlet status = msg.payload[\"status\"]\nlet shortable = msg.payload[\"shortable\"]\nlet tradable = msg.payload[\"tradable\"]\nlet fractionable = msg.payload[\"fractionable\"]\nlet marginable = msg.payload[\"marginable\"]\nlet easy = msg.payload[\"easy_to_borrow\"]\nname = name.replace(\"'\",\"\")\nsymbol = symbol.replace(\"/\",\"\")\n\n//msg.query = \"insert into alpaca_assets (symbol, name, exchange, tradable, shortable, fractionable, marginable, easy_to_borrow, status)  values ('\" + symbol + \"','\" + name + \"','\" + exchange + \"','\" + tradable + \"','\" + shortable + \"','\" +fractionable+ \"','\" +marginable+ \"','\" +easy+ \"','\" +status+ \"');\"\nmsg.query = \"insert into alpaca_assets (symbol, exchange, tradable, shortable, fractionable, marginable, easy_to_borrow, status)  values ('\" + symbol + \"','\" + exchange + \"','\" + tradable + \"','\" + shortable + \"','\" + fractionable + \"','\" + marginable + \"','\" + easy + \"','\" + status + \"');\"\n\n//node.warn(msg.query)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1280,
        "wires": [
            [
                "0acf93ec36a1a478"
            ]
        ]
    },
    {
        "id": "0acf93ec36a1a478",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1160,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "567f8abfa7c8f98d",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "drop alpaca_assets",
        "func": "msg.query = \"drop table alpaca_assets\"\n//msg.query = \"CREATE TABLE IF NOT EXISTS alpaca_assets (id VARCHAR(100), symbol varchar(10) PRIMARY KEY, name VARCHAR(200), alpaca_symbol VARCHAR(10), polygon_symbol VARCHAR(10), easy_to_borrow BOOLEAN, exchange VARCHAR(10), shortable BOOLEAN, fractionable BOOLEAN, marginable BOOLEAN, status VARCHAR(10), tradable BOOLEAN)\"\nnode.warn(msg.query)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 960,
        "wires": [
            [
                "da12a27774b78c4b"
            ]
        ]
    },
    {
        "id": "da12a27774b78c4b",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "859a072b45375c35",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "create alpaca_assets",
        "func": "//msg.query = \"truncate table alpaca_assets\"\nmsg.query = \"CREATE TABLE IF NOT EXISTS alpaca_assets (id VARCHAR(100), symbol varchar(20) PRIMARY KEY, name VARCHAR(200), alpaca_symbol VARCHAR(20), polygon_symbol VARCHAR(20), easy_to_borrow BOOLEAN, exchange VARCHAR(10), shortable BOOLEAN, fractionable BOOLEAN, marginable BOOLEAN, status VARCHAR(10), tradable BOOLEAN)\"\nnode.warn(msg.query)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1000,
        "wires": [
            [
                "60755442a39f9895"
            ]
        ]
    },
    {
        "id": "60755442a39f9895",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 880,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "9f4f055be0b40f73",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 1000,
        "wires": [
            [
                "859a072b45375c35"
            ]
        ]
    },
    {
        "id": "255d3f02facc9ed5",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "35",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 280,
        "y": 1400,
        "wires": [
            [
                "786dc8fc6506a162"
            ]
        ]
    },
    {
        "id": "0c648d6bee0bbab6",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "40",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 280,
        "y": 1440,
        "wires": [
            [
                "613f5abf31104b9b"
            ]
        ]
    },
    {
        "id": "555c60767de2d724",
        "type": "alpaca-asset-query",
        "z": "53da84f3cc85beb9",
        "conf": "e535f42f1df1b25f",
        "x": 470,
        "y": 1320,
        "wires": [
            [
                "eafba8ee72f2f78f"
            ]
        ]
    },
    {
        "id": "16000b7d778625e8",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 280,
        "y": 1320,
        "wires": [
            [
                "555c60767de2d724"
            ]
        ]
    },
    {
        "id": "eafba8ee72f2f78f",
        "type": "split",
        "z": "53da84f3cc85beb9",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 630,
        "y": 1320,
        "wires": [
            [
                "c6aefe7e6054e0de"
            ]
        ]
    },
    {
        "id": "c6aefe7e6054e0de",
        "type": "switch",
        "z": "53da84f3cc85beb9",
        "name": "active only",
        "property": "payload[\"status\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "active",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 1320,
        "wires": [
            [
                "ea252f53f5f8273b"
            ],
            []
        ]
    },
    {
        "id": "ea252f53f5f8273b",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "insert into alpaca_assets",
        "func": "let symbol = msg.payload[\"symbol\"]\nlet name = msg.payload[\"name\"]\n\nname = name.substring(0, 100);\nname = name.replace(\"'\",\"\")\nsymbol = symbol.replace(\"/\",\"\")\n\nmsg.query = \"update alpaca_assets set name = '\" + name + \"' where symbol = '\" +symbol+ \"';\"\n//msg.query = \"insert into alpaca_assets (symbol, exchange, tradable, shortable, fractionable, marginable, easy_to_borrow, status)  values ('\" + symbol + \"','\" + exchange + \"','\" + tradable + \"','\" + shortable + \"','\" + fractionable + \"','\" + marginable + \"','\" + easy + \"','\" + status + \"');\"\n//node.warn(msg.query)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1320,
        "wires": [
            [
                "58fc712f131b3a56"
            ]
        ]
    },
    {
        "id": "58fc712f131b3a56",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1160,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "782d1b1b111f5b2a",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "update alpaca_symbol",
        "func": "let symbol = msg.payload[\"symbol\"]\nsymbol = symbol.substring(0, 19);\n//node.warn(\"Symbol: \" +symbol)\n\nlet polygon_symbol = \"X:\" + symbol\nlet alpaca_symbol = symbol.replace(\"USD\",\"/USD\")\n\n\nalpaca_symbol = alpaca_symbol.substring(0, 19);\npolygon_symbol = polygon_symbol.substring(0, 19);\n\n\nmsg.query = \"update alpaca_assets set alpaca_symbol = '\" +alpaca_symbol+ \"', polygon_symbol = '\" +polygon_symbol+ \"' where symbol = '\" +symbol+ \"' and status = 'active';\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1360,
        "wires": [
            [
                "522ee7f14b1ce74c"
            ]
        ]
    },
    {
        "id": "522ee7f14b1ce74c",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "b3e192f8df309203",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 280,
        "y": 1360,
        "wires": [
            [
                "1c263ffd3829adda"
            ]
        ]
    },
    {
        "id": "fca4cdc9cffe3512",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "Create markets table",
        "func": "msg.query = \"create table IF NOT EXISTS markets (symbol VARCHAR(20) PRIMARY KEY,name VARCHAR(100),polygon_symbol VARCHAR(20), alpaca_symbol VARCHAR(20), closing FLOAT,price24h FLOAT,price7d FLOAT, change24h FLOAT,change7d FLOAT,pct24 FLOAT,pct7d FLOAT)\"\n//msg.query = \"drop table markets\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 140,
        "wires": [
            [
                "f32134d68d595932"
            ]
        ]
    },
    {
        "id": "41816b64f25dce8c",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 140,
        "wires": [
            [
                "fca4cdc9cffe3512"
            ]
        ]
    },
    {
        "id": "f32134d68d595932",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 880,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "6ff675cc56b06217",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "drop tickers",
        "func": "msg.query = \"drop table tickers\"\nnode.warn(msg.query)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1060,
        "wires": [
            [
                "480f8421f67c69e6"
            ]
        ]
    },
    {
        "id": "480f8421f67c69e6",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "3e1951cbb14523aa",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "create tickers",
        "func": "//msg.query = \"truncate table alpaca_assets\"\nmsg.query = \"CREATE TABLE IF NOT EXISTS tickers (id BIGINT, symbol varchar(20) PRIMARY KEY, name VARCHAR(200), portfolioname VARCHAR(100), orderid VARCHAR(100) )\"\nnode.warn(msg.query)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1120,
        "wires": [
            [
                "37d2152920fdd80f"
            ]
        ]
    },
    {
        "id": "37d2152920fdd80f",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 880,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "7dd4b24a2f3f6432",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 1120,
        "wires": [
            [
                "3e1951cbb14523aa"
            ]
        ]
    },
    {
        "id": "2f632e1dfd9fd5d9",
        "type": "function",
        "z": "53da84f3cc85beb9",
        "name": "Create watchlist table",
        "func": "msg.query = \"create table IF NOT EXISTS watchlist (symbol VARCHAR(20) PRIMARY KEY,name VARCHAR(100),polygon_symbol VARCHAR(20), alpaca_symbol VARCHAR(20), closing FLOAT,price24h FLOAT,price7d FLOAT, change24h FLOAT,change7d FLOAT,pct24 FLOAT,pct7d FLOAT)\"\n//msg.query = \"delete from watchlist\"\n//msg.query = \"drop table watchlist\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 260,
        "wires": [
            [
                "5d64e48c6ad83883"
            ]
        ]
    },
    {
        "id": "300fd17e8fc92573",
        "type": "delay",
        "z": "53da84f3cc85beb9",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 260,
        "wires": [
            [
                "2f632e1dfd9fd5d9"
            ]
        ]
    },
    {
        "id": "5d64e48c6ad83883",
        "type": "postgresql",
        "z": "53da84f3cc85beb9",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 860,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "7455395cf269fb2b",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "docker",
        "userFieldType": "str",
        "password": "docker",
        "passwordFieldType": "str"
    },
    {
        "id": "0c86a5f06a42b505",
        "type": "alpaca-account",
        "name": "live",
        "keyId": "PKH06YB3E5D1CK3M6M8Q",
        "paper": true
    },
    {
        "id": "e535f42f1df1b25f",
        "type": "alpaca-account",
        "name": "paper",
        "keyId": "PKH06YB3E5D1CK3M6M8Q",
        "paper": true
    }
]