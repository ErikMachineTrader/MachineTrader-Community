[
    {
        "id": "2923e96769e4646a",
        "type": "tab",
        "label": "Start-up",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5130b976ea12c5a0",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "Create table \"balances\"",
        "func": "let acct = \"balances\"\nmsg.query = \"create table IF NOT EXISTS \" +acct+ \" (account VARCHAR(10), unixtime BIGINT, balance FLOAT)\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 60,
        "wires": [
            [
                "c73a75b44e088a24"
            ]
        ]
    },
    {
        "id": "a41f1d4b10d42aa8",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "Create  \"balances_daily\"",
        "func": "let acct = \"balances_daily\"\nmsg.query= \"create table IF NOT EXISTS \" +acct+ \" (account VARCHAR(10), unixtime BIGINT, balance FLOAT)\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 100,
        "wires": [
            [
                "74f0e699b47713e4"
            ]
        ]
    },
    {
        "id": "c73a75b44e088a24",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 700,
        "y": 60,
        "wires": [
            [
                "2e211b9598800603"
            ]
        ]
    },
    {
        "id": "f01444e102193672",
        "type": "inject",
        "z": "2923e96769e4646a",
        "name": "Create tables on start up",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "5130b976ea12c5a0",
                "a41f1d4b10d42aa8",
                "7cb9c4a9171deaa1",
                "8fcc99a743474e1c",
                "0cdb87e57bcc4a59",
                "08f02226b3012dc5",
                "05de33f6ffc4d0f9",
                "f93f5b4a67085d19",
                "279c7088941f31b8",
                "75e25fcaebee6e3c",
                "5911a70feb6e4456",
                "61a3692c2692ed68",
                "60d4f89ca96cfc02",
                "b59629fe75e68664",
                "bad961977d11f05c",
                "ec124c4fa80f74ce",
                "75087e90a046cb48"
            ]
        ]
    },
    {
        "id": "74f0e699b47713e4",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 700,
        "y": 100,
        "wires": [
            [
                "9cfb1a93593cfafb"
            ]
        ]
    },
    {
        "id": "cdcf51d01e6755fc",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 700,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "05e874a5e8a1530b",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "7cb9c4a9171deaa1",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "Create markets table",
        "func": "msg.query = \"create table IF NOT EXISTS markets (symbol VARCHAR(10) PRIMARY KEY,name VARCHAR(100),polygon_symbol VARCHAR(10), alpaca_symbol VARCHAR(10), closing FLOAT,price24h FLOAT,price7d FLOAT, change24h FLOAT,change7d FLOAT,pct24 FLOAT,pct7d FLOAT)\"\n//msg.query = \"delete from markets\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 140,
        "wires": [
            [
                "cdcf51d01e6755fc"
            ]
        ]
    },
    {
        "id": "e632c954dc5fa5df",
        "type": "comment",
        "z": "2923e96769e4646a",
        "name": "RUN ONCE AT START: ",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "8fcc99a743474e1c",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "drop portfolio table",
        "func": "msg.query = \"drop table portfolio\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 320,
        "wires": [
            [
                "0cf5d8a92d4b51f2"
            ]
        ]
    },
    {
        "id": "0cdb87e57bcc4a59",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "drop algos table",
        "func": "msg.query = \"drop table algos\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 360,
        "wires": [
            [
                "4de7f52536bbadca"
            ]
        ]
    },
    {
        "id": "07dd4be10a2e7a29",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "08f02226b3012dc5",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "drop positions table",
        "func": "msg.query = \"drop table positions\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 400,
        "wires": [
            [
                "07dd4be10a2e7a29"
            ]
        ]
    },
    {
        "id": "0cf5d8a92d4b51f2",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "4de7f52536bbadca",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "205173c4458f28dc",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "market tickers",
        "func": "msg.payload = \"SPY,QQQ,TSLA,VXX,BTCUSD,ETHUSD\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 180,
        "wires": [
            [
                "816663529dc331ef"
            ]
        ]
    },
    {
        "id": "05de33f6ffc4d0f9",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 180,
        "wires": [
            [
                "205173c4458f28dc"
            ]
        ]
    },
    {
        "id": "816663529dc331ef",
        "type": "split",
        "z": "2923e96769e4646a",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 830,
        "y": 180,
        "wires": [
            [
                "59ce44ce1e4b80cc"
            ]
        ]
    },
    {
        "id": "59ce44ce1e4b80cc",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "insert markets query",
        "func": "let symbol = msg.payload\nmsg.query = \"insert into markets (symbol) values ('\" +symbol+ \"');\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 180,
        "wires": [
            [
                "8bc595c737e75052"
            ]
        ]
    },
    {
        "id": "8bc595c737e75052",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "10f73e2ece4d57c6",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "watchlist tickers",
        "func": "msg.payload = \"AAPL,JPM,BAC,GLD\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 280,
        "wires": [
            [
                "a60801d019c790e6"
            ]
        ]
    },
    {
        "id": "f93f5b4a67085d19",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 280,
        "wires": [
            [
                "10f73e2ece4d57c6"
            ]
        ]
    },
    {
        "id": "a60801d019c790e6",
        "type": "split",
        "z": "2923e96769e4646a",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 830,
        "y": 280,
        "wires": [
            [
                "6cd390703697a106"
            ]
        ]
    },
    {
        "id": "240e5f8e6f03e89e",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "74c9bacbaab10ee1",
        "type": "comment",
        "z": "2923e96769e4646a",
        "name": "RUN ONCE AT START: Create alpaca_assets table",
        "info": "",
        "x": 250,
        "y": 660,
        "wires": []
    },
    {
        "id": "4a99fbcfc19ff85c",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "get symbols from alpaca_assets",
        "func": "msg.query = \"select symbol from alpaca_assets\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 800,
        "wires": [
            [
                "23803706a1647dc0"
            ]
        ]
    },
    {
        "id": "38018774923466fa",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "update polygon_symbol",
        "func": "let symbol = msg.payload[\"symbol\"]\n//node.warn(\"Symbol: \" +symbol)\n\n//let polygon_symbol = \"X:\" +symbol\nlet polygon_symbol = symbol\nmsg.query = \"update alpaca_assets set polygon_symbol = '\" +polygon_symbol+ \"' where symbol = '\" +symbol+ \"' and status = 'active';\"\n//node.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 800,
        "wires": [
            [
                "302cba71944b9638"
            ]
        ]
    },
    {
        "id": "302cba71944b9638",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1280,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "6ce0a34f5ba58c0f",
        "type": "split",
        "z": "2923e96769e4646a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 910,
        "y": 800,
        "wires": [
            [
                "38018774923466fa"
            ]
        ]
    },
    {
        "id": "23803706a1647dc0",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 800,
        "wires": [
            [
                "6ce0a34f5ba58c0f"
            ]
        ]
    },
    {
        "id": "549764d852f9fea1",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "get crypto symbols from alpaca_assets",
        "func": "msg.query = \"select symbol from alpaca_assets where exchange = 'FTXU'\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 840,
        "wires": [
            [
                "757f9d4e4c5c98b3"
            ]
        ]
    },
    {
        "id": "8e4ed6fdfb9def68",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "update alpaca_symbol",
        "func": "let symbol = msg.payload[\"symbol\"]\n//node.warn(\"Symbol: \" +symbol)\n\nlet alpaca_symbol = symbol.replace(\"USD\",\"/USD\")\nlet polygon_symbol = \"X:\" +symbol\n\nmsg.query = \"update alpaca_assets set alpaca_symbol = '\" +alpaca_symbol+ \"', polygon_symbol = '\" +polygon_symbol+ \"' where symbol = '\" +symbol+ \"' and status = 'active';\"\n//node.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 840,
        "wires": [
            [
                "84f0b51f26ca1e4c"
            ]
        ]
    },
    {
        "id": "84f0b51f26ca1e4c",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1280,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "19b474724cf8279a",
        "type": "split",
        "z": "2923e96769e4646a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 910,
        "y": 840,
        "wires": [
            [
                "8e4ed6fdfb9def68"
            ]
        ]
    },
    {
        "id": "757f9d4e4c5c98b3",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 840,
        "wires": [
            [
                "19b474724cf8279a"
            ]
        ]
    },
    {
        "id": "6cd390703697a106",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "insert watchlist query",
        "func": "let symbol = msg.payload\nmsg.query = \"insert into watchlist (symbol) values ('\" +symbol+ \"');\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 280,
        "wires": [
            [
                "240e5f8e6f03e89e"
            ]
        ]
    },
    {
        "id": "279c7088941f31b8",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "Create watchlist table",
        "func": "msg.query = \"create table IF NOT EXISTS watchlist (symbol VARCHAR(10) PRIMARY KEY,name VARCHAR(100),polygon_symbol VARCHAR(10), alpaca_symbol VARCHAR(10), closing FLOAT,price24h FLOAT,price7d FLOAT, change24h FLOAT,change7d FLOAT,pct24 FLOAT,pct7d FLOAT)\"\n//msg.query = \"delete from watchlist\"\n//msg.query = \"drop table watchlist\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 220,
        "wires": [
            [
                "05e874a5e8a1530b"
            ]
        ]
    },
    {
        "id": "0855696978ed4837",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "update markets from alpaca_assets",
        "func": "msg.query = \"UPDATE markets SET name = alpaca_assets.name, polygon_symbol = alpaca_assets.polygon_symbol, alpaca_symbol = alpaca_assets.alpaca_symbol  FROM alpaca_assets where markets.symbol = alpaca_assets.symbol\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 880,
        "wires": [
            [
                "c19f9e4608414162"
            ]
        ]
    },
    {
        "id": "c19f9e4608414162",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "08862891b67a174c",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "71ee1fd17a28e7c7",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "update watchlist from alpaca_assets",
        "func": "msg.query = \"UPDATE watchlist SET name = alpaca_assets.name, polygon_symbol = alpaca_assets.polygon_symbol, alpaca_symbol = alpaca_assets.alpaca_symbol  FROM alpaca_assets where watchlist.symbol = alpaca_assets.symbol\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 920,
        "wires": [
            [
                "08862891b67a174c"
            ]
        ]
    },
    {
        "id": "0a65cd0bfcd0f526",
        "type": "comment",
        "z": "2923e96769e4646a",
        "name": "Orders Table",
        "info": "",
        "x": 110,
        "y": 1060,
        "wires": []
    },
    {
        "id": "211804ad5f088585",
        "type": "split",
        "z": "2923e96769e4646a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 1320,
        "wires": [
            [
                "103b8ad8591a7af3"
            ]
        ]
    },
    {
        "id": "f0717dba3a63ccac",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1140,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "3d15fb1fbab7c480",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "get closed orders - live",
        "func": "/* Get Flow variables */\n\nlet ordertype = flow.get(\"orders\")\n//let limit  = flow.get(\"cnt\")\nordertype = \"closed\"\n\n/* Setup alpaca request arguments */\n\nmsg.payload = {\n    status: ordertype, // \"open or closed\"\n    limit: \"500\", // default is 500\n\tdirection: \"desc\" //  \"asc or desc\"\n\n}\n\n//node.warn(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1320,
        "wires": [
            [
                "02c13eeccc6dbf96"
            ]
        ]
    },
    {
        "id": "02c13eeccc6dbf96",
        "type": "alpaca-query-order",
        "z": "2923e96769e4646a",
        "conf": "0c86a5f06a42b505",
        "x": 620,
        "y": 1320,
        "wires": [
            [
                "211804ad5f088585"
            ]
        ]
    },
    {
        "id": "103b8ad8591a7af3",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "insert into orders live",
        "func": "let id = msg.payload[\"id\"]\nlet client_order_id = msg.payload[\"client_order_id\"]\nlet created_at = msg.payload[\"created_at\"]\nlet updated_at = msg.payload[\"updated_at\"]\nlet submitted_at = msg.payload[\"submitted_at\"]\nlet filled_at = msg.payload[\"filled_at\"]\nlet expired_at = msg.payload[\"expired_at\"]\nlet canceled_at = msg.payload[\"canceled_at\"]\nlet failed_at = msg.payload[\"failed_at\"]\nlet replaced_at = msg.payload[\"replaced_at\"]\nlet replaced_by = msg.payload[\"replaced_by\"]\nlet replaces = msg.payload[\"replaces\"]\nlet asset_id = msg.payload[\"asset_id\"]\nlet symbol = msg.payload[\"symbol\"]\nlet asset_class = msg.payload[\"asset_class\"]\nlet notional = msg.payload[\"notional\"]\nlet qty = msg.payload[\"qty\"]\nif (qty === null) { qty = 0 }\n\n\nlet filled_qty = msg.payload[\"filled_qty\"]\nif (filled_qty === null) { filled_qty = 0 }\n\nlet filled_avg_price = msg.payload[\"filled_avg_price\"]\nif (filled_avg_price === null) { filled_avg_price = 0 }\n\n\nlet order_class = msg.payload[\"order_class\"]\nlet order_type = msg.payload[\"order_type\"]\nlet type = msg.payload[\"type\"]\nlet side = msg.payload[\"side\"]\nlet time_in_force = msg.payload[\"time_in_force\"]\n\nlet limit_price = msg.payload[\"limit_price\"]\nif (limit_price === null) { limit_price = 0 }\n\nlet stop_price = msg.payload[\"stop_price\"]\nif (stop_price === null ){ stop_price = 0}\n\nlet status = msg.payload[\"status\"]\nlet extended_hours = msg.payload[\"extended_hours\"]\nlet legs = msg.payload[\"legs\"]\n\nlet trail_percent = msg.payload[\"trail_percent\"]\nif (trail_percent === null) { trail_percent = 0 }\n\nlet trail_price = msg.payload[\"trail_price\"]\nif (trail_price === null) { trail_price = 0 }\n\nlet hwm = msg.payload[\"hwm\"]\nlet subtag = msg.payload[\"subtag\"]\nlet source = msg.payload[\"source\"]\n\nmsg.query = \"insert into orders (id,client_order_id,created_at,updated_at,submitted_at,filled_at,expired_at,canceled_at,failed_at,replaced_at,replaced_by,extended_hours,replaces,asset_id,symbol,asset_class,notional,qty,filled_qty,filled_avg_price,order_class,order_type,type,side,time_in_force,limit_price,stop_price,status,legs,trail_percent,trail_price,hwm,subtag,source, order_status, account) values ('\" + id + \"','\" + client_order_id + \"','\" + created_at + \"','\" + updated_at + \"','\" + submitted_at + \"','\" + filled_at + \"','\" + expired_at + \"','\" + canceled_at + \"','\" + failed_at + \"','\" + replaced_at + \"','\" + replaced_by + \"','\" + extended_hours + \"','\" + replaces + \"','\" + asset_id + \"','\" + symbol + \"','\" + asset_class + \"','\" + notional + \"','\" + qty + \"','\" + filled_qty + \"','\" + filled_avg_price + \"','\" + order_class + \"','\" + order_type + \"','\" + type + \"','\" + side + \"','\" + time_in_force + \"','\" + limit_price + \"','\" + stop_price + \"','\" + status + \"','\" + legs + \"','\" + trail_percent + \"','\" + trail_price + \"','\" + hwm + \"','\" + subtag + \"','\" + source+ \"', 'closed', 'live');\"\n//node.warn(symbol)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1320,
        "wires": [
            [
                "f0717dba3a63ccac"
            ]
        ]
    },
    {
        "id": "c4e06ace8a0a43d5",
        "type": "split",
        "z": "2923e96769e4646a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 1360,
        "wires": [
            [
                "82a68207770dde04"
            ]
        ]
    },
    {
        "id": "166fc4176e308616",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1140,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "4dcafb6670f51756",
        "type": "alpaca-query-order",
        "z": "2923e96769e4646a",
        "conf": "e535f42f1df1b25f",
        "x": 620,
        "y": 1360,
        "wires": [
            [
                "c4e06ace8a0a43d5"
            ]
        ]
    },
    {
        "id": "8f4d70b062f2feb0",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "truncate orders table",
        "func": "//msg.query = \"create table IF NOT EXISTS orders (id VARCHAR(100) PRIMARY KEY, client_order_id VARCHAR(100), created_at VARCHAR(100), updated_at VARCHAR(100), submitted_at VARCHAR(100), filled_at VARCHAR(100), expired_at VARCHAR(100), canceled_at VARCHAR(100), failed_at VARCHAR(100), replaced_at VARCHAR(100), replaced_by VARCHAR(100), replaces VARCHAR(100), asset_id VARCHAR(100), symbol VARCHAR(10), asset_class VARCHAR(10), notional VARCHAR(100), qty FLOAT, filled_qty FLOAT, filled_avg_price FLOAT, order_class VARCHAR(100), order_type VARCHAR(10), type VARCHAR(100), side VARCHAR(10), time_in_force VARCHAR(10), limit_price FLOAT, stop_price FLOAT, status VARCHAR(100), extended_hours BOOLEAN NOT NULL, legs VARCHAR(100), trail_percent FLOAT, trail_price FLOAT, hwm VARCHAR(100), subtag VARCHAR(100), source varchar(100), order_status VARCHAR(10), account VARCHAR(10)) \"\nmsg.query = \"truncate table orders\"\n//msg.query = \"select * from orders order by created_at desc limit 25 \"\n//msg.query = \"delete from orders\"\n//msg.query = \"update orders set id = 1671452659911, portfolioname = 'Buy Crypto Portfolio' where exchange = 'FTXU'\"\n//msg.query = \"update orders set id = 1671453742321, portfolioname = 'Buy/Short SPY on News Sentiment Daily' where symbol = 'SPY'\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1100,
        "wires": [
            [
                "f1121bed9692b1de"
            ]
        ]
    },
    {
        "id": "f1121bed9692b1de",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 500,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "b29932b55cd58413",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "get closed orders - paper",
        "func": "/* Get Flow variables */\n\nlet ordertype = flow.get(\"orders\")\n//let limit  = flow.get(\"cnt\")\nordertype = \"closed\"\n\n/* Setup alpaca request arguments */\n\nmsg.payload = {\n    status: ordertype, // \"open or closed\"\n    limit: \"500\", // default is 500\n\tdirection: \"desc\" //  \"asc or desc\"\n\n}\n\n//node.warn(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1360,
        "wires": [
            [
                "4dcafb6670f51756"
            ]
        ]
    },
    {
        "id": "82a68207770dde04",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "insert into orders paper",
        "func": "let id = msg.payload[\"id\"]\nlet client_order_id = msg.payload[\"client_order_id\"]\nlet created_at = msg.payload[\"created_at\"]\nlet updated_at = msg.payload[\"updated_at\"]\nlet submitted_at = msg.payload[\"submitted_at\"]\nlet filled_at = msg.payload[\"filled_at\"]\nlet expired_at = msg.payload[\"expired_at\"]\nlet canceled_at = msg.payload[\"canceled_at\"]\nlet failed_at = msg.payload[\"failed_at\"]\nlet replaced_at = msg.payload[\"replaced_at\"]\nlet replaced_by = msg.payload[\"replaced_by\"]\nlet replaces = msg.payload[\"replaces\"]\nlet asset_id = msg.payload[\"asset_id\"]\nlet symbol = msg.payload[\"symbol\"]\nlet asset_class = msg.payload[\"asset_class\"]\nlet notional = msg.payload[\"notional\"]\nlet qty = msg.payload[\"qty\"]\nif (qty === null) { qty = 0 }\n\n\nlet filled_qty = msg.payload[\"filled_qty\"]\nif (filled_qty === null) { filled_qty = 0 }\n\nlet filled_avg_price = msg.payload[\"filled_avg_price\"]\nif (filled_avg_price === null) { filled_avg_price = 0 }\n\n\nlet order_class = msg.payload[\"order_class\"]\nlet order_type = msg.payload[\"order_type\"]\nlet type = msg.payload[\"type\"]\nlet side = msg.payload[\"side\"]\nlet time_in_force = msg.payload[\"time_in_force\"]\n\nlet limit_price = msg.payload[\"limit_price\"]\nif (limit_price === null) { limit_price = 0 }\n\nlet stop_price = msg.payload[\"stop_price\"]\nif (stop_price === null ){ stop_price = 0}\n\nlet status = msg.payload[\"status\"]\nlet extended_hours = msg.payload[\"extended_hours\"]\nlet legs = msg.payload[\"legs\"]\n\nlet trail_percent = msg.payload[\"trail_percent\"]\nif (trail_percent === null) { trail_percent = 0 }\n\nlet trail_price = msg.payload[\"trail_price\"]\nif (trail_price === null) { trail_price = 0 }\n\nlet hwm = msg.payload[\"hwm\"]\nlet subtag = msg.payload[\"subtag\"]\nlet source = msg.payload[\"source\"]\n\nmsg.query = \"insert into orders (id,client_order_id,created_at,updated_at,submitted_at,filled_at,expired_at,canceled_at,failed_at,replaced_at,replaced_by,extended_hours,replaces,asset_id,symbol,asset_class,notional,qty,filled_qty,filled_avg_price,order_class,order_type,type,side,time_in_force,limit_price,stop_price,status,legs,trail_percent,trail_price,hwm,subtag,source, order_status, account) values ('\" + id + \"','\" + client_order_id + \"','\" + created_at + \"','\" + updated_at + \"','\" + submitted_at + \"','\" + filled_at + \"','\" + expired_at + \"','\" + canceled_at + \"','\" + failed_at + \"','\" + replaced_at + \"','\" + replaced_by + \"','\" + extended_hours + \"','\" + replaces + \"','\" + asset_id + \"','\" + symbol + \"','\" + asset_class + \"','\" + notional + \"','\" + qty + \"','\" + filled_qty + \"','\" + filled_avg_price + \"','\" + order_class + \"','\" + order_type + \"','\" + type + \"','\" + side + \"','\" + time_in_force + \"','\" + limit_price + \"','\" + stop_price + \"','\" + status + \"','\" + legs + \"','\" + trail_percent + \"','\" + trail_price + \"','\" + hwm + \"','\" + subtag + \"','\" + source+ \"', 'closed', 'paper');\"\n//node.warn(symbol)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1360,
        "wires": [
            [
                "166fc4176e308616"
            ]
        ]
    },
    {
        "id": "cbd6b974c2bc1919",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 660,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "3d678b1ebaaf60ac",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "update symbol from alpaca_assets",
        "func": "msg.query = \"UPDATE orders SET symbol = alpaca_assets.symbol FROM alpaca_assets where orders.symbol = alpaca_assets.alpaca_symbol\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1400,
        "wires": [
            [
                "cbd6b974c2bc1919"
            ]
        ]
    },
    {
        "id": "12f31a5df6a569bb",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "Create portfolio table",
        "func": "msg.query = \"CREATE table IF NOT EXISTS portfolio (login VARCHAR(20), id BIGINT, account VARCHAR(10), portfolioname VARCHAR(100), asset_id VARCHAR(50), symbol VARCHAR(10), name VARCHAR(100), exchange VARCHAR(10), asset_class VARCHAR(10), asset_marginable VARCHAR(10), order_time VARCHAR(100), order_price FLOAT, order_qty FLOAT,order_value float, order_type VARCHAR(10), filled_at VARCHAR(100), qty FLOAT, avg_entry_price FLOAT, side VARCHAR(10), market_value FLOAT, market_value_today FLOAT,cost_basis FLOAT, unrealized_pl FLOAT, unrealized_plpc FLOAT, unrealized_intraday_pl FLOAT, unrealized_intraday_plpc FLOAT, current_price FLOAT, lastday_price FLOAT, change_today FLOAT, clientorderid VARCHAR(100), newqty FLOAT, newside VARCHAR(10), newfilled_at VARCHAR(100), newavg_entry_price FLOAT, newcost_basis FLOAT, newclient_order_id VARCHAR(100))\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 320,
        "wires": [
            [
                "b8c21bc252a94ba7"
            ]
        ]
    },
    {
        "id": "c6ed89621cc3f25f",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "Create algos table",
        "func": "msg.query = \"create table IF NOT EXISTS algos (login varchar(20), id BIGINT, algo_name VARCHAR(100), algo_type VARCHAR(10), status VARCHAR(10), benchmark VARCHAR(10), benchmark_start FLOAT,portfolio_size FLOAT, gain_today FLOAT, pctgain_today FLOAT, gain_alltime FLOAT, pctgain_alltime FLOAT,pctbench_today FLOAT, pctbench_alltime FLOAT, info_ratio FLOAT, tickers VARCHAR(5000),asset_class VARCHAR(10), number INT );\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 360,
        "wires": [
            [
                "8bdad1c41ba6be53"
            ]
        ]
    },
    {
        "id": "44e9863ee5b4acf5",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "create positions table",
        "func": "msg.query = \"create table IF NOT EXISTS positions (id BIGINT, asset_id VARCHAR(100), portfolioname VARCHAR(100), symbol VARCHAR(10) PRIMARY KEY, name VARCHAR(500), account VARCHAR(10), exchange VARCHAR(100), asset_class VARCHAR(100), asset_marginable VARCHAR(100), qty FLOAT, avg_entry_price FLOAT, side VARCHAR(100), market_value FLOAT, cost_basis FLOAT, unrealized_pl FLOAT, unrealized_plpc FLOAT, unrealized_intraday_pl FLOAT, unrealized_intraday_plpc FLOAT, current_price FLOAT, lastday_price FLOAT, change_today FLOAT, qty_available FLOAT, status VARCHAR(10), orderid VARCHAR(100))\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 400,
        "wires": [
            [
                "1ee63de6e1dce0cc"
            ]
        ]
    },
    {
        "id": "75e25fcaebee6e3c",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 320,
        "wires": [
            [
                "12f31a5df6a569bb"
            ]
        ]
    },
    {
        "id": "1ee63de6e1dce0cc",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "b8c21bc252a94ba7",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "8bdad1c41ba6be53",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "5911a70feb6e4456",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 360,
        "wires": [
            [
                "c6ed89621cc3f25f"
            ]
        ]
    },
    {
        "id": "61a3692c2692ed68",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 400,
        "wires": [
            [
                "44e9863ee5b4acf5"
            ]
        ]
    },
    {
        "id": "dfad69ad307f7551",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 330,
        "y": 1140,
        "wires": [
            [
                "48635e24e34cdedb"
            ]
        ]
    },
    {
        "id": "48635e24e34cdedb",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "create orders table ",
        "func": "msg.query = \"create table IF NOT EXISTS orders (id VARCHAR(100) PRIMARY KEY, client_order_id VARCHAR(100), created_at VARCHAR(100), updated_at VARCHAR(100), submitted_at VARCHAR(100), filled_at VARCHAR(100), expired_at VARCHAR(100), canceled_at VARCHAR(100), failed_at VARCHAR(100), replaced_at VARCHAR(100), replaced_by VARCHAR(100), replaces VARCHAR(100), asset_id VARCHAR(100), symbol VARCHAR(10), asset_class VARCHAR(10), notional VARCHAR(100), qty FLOAT, filled_qty FLOAT, filled_avg_price FLOAT, order_class VARCHAR(100), order_type VARCHAR(10), type VARCHAR(100), side VARCHAR(10), time_in_force VARCHAR(10), limit_price FLOAT, stop_price FLOAT, status VARCHAR(100), extended_hours BOOLEAN NOT NULL, legs VARCHAR(100), trail_percent FLOAT, trail_price FLOAT, hwm VARCHAR(100), subtag VARCHAR(100), source varchar(100), order_status VARCHAR(10), account VARCHAR(10)) \"\n//msg.query = \"drop table orders\"\n//msg.query = \"select * from orders order by created_at desc limit 25 \"\n//msg.query = \"delete from orders\"\n//msg.query = \"update orders set id = 1671452659911, portfolioname = 'Buy Crypto Portfolio' where exchange = 'FTXU'\"\n//msg.query = \"update orders set id = 1671453742321, portfolioname = 'Buy/Short SPY on News Sentiment Daily' where symbol = 'SPY'\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1140,
        "wires": [
            [
                "fa4467fdeb077ed3"
            ]
        ]
    },
    {
        "id": "fa4467fdeb077ed3",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 1140,
        "wires": [
            [
                "89363cc4f7f087a3"
            ]
        ]
    },
    {
        "id": "89363cc4f7f087a3",
        "type": "debug",
        "z": "2923e96769e4646a",
        "name": "debug 170",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 1140,
        "wires": []
    },
    {
        "id": "3a48eae92178e119",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 220,
        "y": 1400,
        "wires": [
            [
                "3d678b1ebaaf60ac"
            ]
        ]
    },
    {
        "id": "787a72dccfc499a3",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "delete from balances",
        "func": "msg.query = \"delete from balances\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 60,
        "wires": [
            [
                "f07d28332134aa65"
            ]
        ]
    },
    {
        "id": "f07d28332134aa65",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "2e211b9598800603",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 60,
        "wires": [
            [
                "787a72dccfc499a3"
            ]
        ]
    },
    {
        "id": "d6fc3efc1ba10cd8",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "delete from balances_daily",
        "func": "msg.query = \"delete from balances_daily\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 100,
        "wires": [
            [
                "ac1bbcef9cccada2"
            ]
        ]
    },
    {
        "id": "ac1bbcef9cccada2",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "9cfb1a93593cfafb",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 100,
        "wires": [
            [
                "d6fc3efc1ba10cd8"
            ]
        ]
    },
    {
        "id": "f62f16a141db6fd1",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "create order_confirms table",
        "func": "//msg.query = \"DROP TABLE order_confirms\"\nmsg.query = \"create table IF NOT EXISTS order_confirms (id VARCHAR(200), client_order_id VARCHAR(200), created_at VARCHAR(200), updated_at VARCHAR(200), submitted_at VARCHAR(200), filled_at VARCHAR(200), expired_at VARCHAR(200), canceled_at VARCHAR(200), failed_at VARCHAR(200), replaced_at VARCHAR(200), replaced_by VARCHAR(200), replaces VARCHAR(200), asset_id VARCHAR(200), symbol VARCHAR(40), asset_class VARCHAR(40), notional FLOAT, qty FLOAT, filled_qty FLOAT, filled_avg_price FLOAT, order_class VARCHAR(40), order_type VARCHAR(40), type VARCHAR(40), side VARCHAR(40),  time_in_force VARCHAR(40), limit_price FLOAT, stop_price FLOAT, status VARCHAR(40), extended_hours BOOLEAN, legs BOOLEAN, trail_percent FLOAT, trail_price FLOAT, hwm VARCHAR(40), subtag VARCHAR(200), source VARCHAR(40))\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 440,
        "wires": [
            [
                "b9b8c9c3f54d5360"
            ]
        ]
    },
    {
        "id": "b9b8c9c3f54d5360",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "60d4f89ca96cfc02",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 440,
        "wires": [
            [
                "f62f16a141db6fd1"
            ]
        ]
    },
    {
        "id": "b59629fe75e68664",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "drop orders_confirms table",
        "func": "msg.query = \"drop table orders_confirms\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 440,
        "wires": [
            [
                "12291c2a5beef075"
            ]
        ]
    },
    {
        "id": "12291c2a5beef075",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 720,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "5db782d3ba296671",
        "type": "inject",
        "z": "2923e96769e4646a",
        "name": "GO",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 700,
        "wires": [
            [
                "1e8fe84fce7a761b",
                "ecb3bd384d2bfbe2",
                "500f5d5744b6c9f1",
                "ef35789ee9904608",
                "8b07fb34792361eb",
                "ca4dfbba72e85259"
            ]
        ]
    },
    {
        "id": "e56339b050007461",
        "type": "alpaca-asset-query",
        "z": "2923e96769e4646a",
        "conf": "e535f42f1df1b25f",
        "x": 490,
        "y": 760,
        "wires": [
            [
                "d05ce006009a9817"
            ]
        ]
    },
    {
        "id": "1e8fe84fce7a761b",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "truncate alpaca_assets",
        "func": "msg.query = \"truncate table alpaca_assets\"\n//msg.query = \"CREATE TABLE IF NOT EXISTS alpaca_assets(id VARCHAR(100), symbol varchar(10) PRIMARY KEY, name VARCHAR(200), alpaca_symbol VARCHAR(10), polygon_symbol VARCHAR(10), easy_to_borrow BOOLEAN, exchange VARCHAR(10), fractionable BOOLEAN, marginable BOOLEAN, status VARCHAR(10), tradeable BOOLEAN)\"\nnode.warn(msg.query)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 700,
        "wires": [
            [
                "f686a20e633bb325"
            ]
        ]
    },
    {
        "id": "f686a20e633bb325",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 560,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "ef35789ee9904608",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 760,
        "wires": [
            [
                "e56339b050007461"
            ]
        ]
    },
    {
        "id": "d05ce006009a9817",
        "type": "split",
        "z": "2923e96769e4646a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 650,
        "y": 760,
        "wires": [
            [
                "415a8f6bfb46b110"
            ]
        ]
    },
    {
        "id": "718f5f937016dbbf",
        "type": "split",
        "z": "2923e96769e4646a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 1240,
        "wires": [
            [
                "e7cbaa9e3faba596"
            ]
        ]
    },
    {
        "id": "b23621c5c78f6102",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1140,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "b03cb305e6abdd22",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "get open orders - live",
        "func": "/* Get Flow variables */\n\nlet ordertype = flow.get(\"orders\")\n//let limit  = flow.get(\"cnt\")\nordertype = \"open\"\n\n/* Setup alpaca request arguments */\n\nmsg.payload = {\n    status: ordertype, // \"open or closed\"\n    limit: \"500\", // default is 500\n\tdirection: \"desc\" //  \"asc or desc\"\n\n}\n\n//node.warn(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1240,
        "wires": [
            [
                "031e50f64673aa64"
            ]
        ]
    },
    {
        "id": "031e50f64673aa64",
        "type": "alpaca-query-order",
        "z": "2923e96769e4646a",
        "conf": "0c86a5f06a42b505",
        "x": 620,
        "y": 1240,
        "wires": [
            [
                "718f5f937016dbbf"
            ]
        ]
    },
    {
        "id": "e7cbaa9e3faba596",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "insert into orders live",
        "func": "let id = msg.payload[\"id\"]\nlet client_order_id = msg.payload[\"client_order_id\"]\nlet created_at = msg.payload[\"created_at\"]\nlet updated_at = msg.payload[\"updated_at\"]\nlet submitted_at = msg.payload[\"submitted_at\"]\nlet filled_at = msg.payload[\"filled_at\"]\nlet expired_at = msg.payload[\"expired_at\"]\nlet canceled_at = msg.payload[\"canceled_at\"]\nlet failed_at = msg.payload[\"failed_at\"]\nlet replaced_at = msg.payload[\"replaced_at\"]\nlet replaced_by = msg.payload[\"replaced_by\"]\nlet replaces = msg.payload[\"replaces\"]\nlet asset_id = msg.payload[\"asset_id\"]\nlet symbol = msg.payload[\"symbol\"]\nlet asset_class = msg.payload[\"asset_class\"]\nlet notional = msg.payload[\"notional\"]\nlet qty = msg.payload[\"qty\"]\nif (qty === null) { qty = 0 }\n\n\nlet filled_qty = msg.payload[\"filled_qty\"]\nif (filled_qty === null) { filled_qty = 0 }\n\nlet filled_avg_price = msg.payload[\"filled_avg_price\"]\nif (filled_avg_price === null) { filled_avg_price = 0 }\n\n\nlet order_class = msg.payload[\"order_class\"]\nlet order_type = msg.payload[\"order_type\"]\nlet type = msg.payload[\"type\"]\nlet side = msg.payload[\"side\"]\nlet time_in_force = msg.payload[\"time_in_force\"]\n\nlet limit_price = msg.payload[\"limit_price\"]\nif (limit_price === null) { limit_price = 0 }\n\nlet stop_price = msg.payload[\"stop_price\"]\nif (stop_price === null ){ stop_price = 0}\n\nlet status = msg.payload[\"status\"]\nlet extended_hours = msg.payload[\"extended_hours\"]\nlet legs = msg.payload[\"legs\"]\n\nlet trail_percent = msg.payload[\"trail_percent\"]\nif (trail_percent === null) { trail_percent = 0 }\n\nlet trail_price = msg.payload[\"trail_price\"]\nif (trail_price === null) { trail_price = 0 }\n\nlet hwm = msg.payload[\"hwm\"]\nlet subtag = msg.payload[\"subtag\"]\nlet source = msg.payload[\"source\"]\n\nmsg.query = \"insert into orders (id,client_order_id,created_at,updated_at,submitted_at,filled_at,expired_at,canceled_at,failed_at,replaced_at,replaced_by,extended_hours,replaces,asset_id,symbol,asset_class,notional,qty,filled_qty,filled_avg_price,order_class,order_type,type,side,time_in_force,limit_price,stop_price,status,legs,trail_percent,trail_price,hwm,subtag,source, order_status, account) values ('\" + id + \"','\" + client_order_id + \"','\" + created_at + \"','\" + updated_at + \"','\" + submitted_at + \"','\" + filled_at + \"','\" + expired_at + \"','\" + canceled_at + \"','\" + failed_at + \"','\" + replaced_at + \"','\" + replaced_by + \"','\" + extended_hours + \"','\" + replaces + \"','\" + asset_id + \"','\" + symbol + \"','\" + asset_class + \"','\" + notional + \"','\" + qty + \"','\" + filled_qty + \"','\" + filled_avg_price + \"','\" + order_class + \"','\" + order_type + \"','\" + type + \"','\" + side + \"','\" + time_in_force + \"','\" + limit_price + \"','\" + stop_price + \"','\" + status + \"','\" + legs + \"','\" + trail_percent + \"','\" + trail_price + \"','\" + hwm + \"','\" + subtag + \"','\" + source+ \"', 'open', 'live');\"\n//node.warn(symbol)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1240,
        "wires": [
            [
                "b23621c5c78f6102"
            ]
        ]
    },
    {
        "id": "57d569cda399e497",
        "type": "split",
        "z": "2923e96769e4646a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 1280,
        "wires": [
            [
                "1338edc8385cf384"
            ]
        ]
    },
    {
        "id": "2c11e0e757bf7fc0",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1140,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "b0febf285105b3ae",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "get open orders - paper",
        "func": "/* Get Flow variables */\n\nlet ordertype = flow.get(\"orders\")\n//let limit  = flow.get(\"cnt\")\nordertype = \"open\"\n\n/* Setup alpaca request arguments */\n\nmsg.payload = {\n    status: ordertype, // \"open or closed\"\n    limit: \"500\", // default is 500\n\tdirection: \"desc\" //  \"asc or desc\"\n\n}\n\n//node.warn(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1280,
        "wires": [
            [
                "9f751da03ca3b080"
            ]
        ]
    },
    {
        "id": "9f751da03ca3b080",
        "type": "alpaca-query-order",
        "z": "2923e96769e4646a",
        "conf": "e535f42f1df1b25f",
        "x": 620,
        "y": 1280,
        "wires": [
            [
                "57d569cda399e497"
            ]
        ]
    },
    {
        "id": "1338edc8385cf384",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "insert into orders paper",
        "func": "let id = msg.payload[\"id\"]\nlet client_order_id = msg.payload[\"client_order_id\"]\nlet created_at = msg.payload[\"created_at\"]\nlet updated_at = msg.payload[\"updated_at\"]\nlet submitted_at = msg.payload[\"submitted_at\"]\nlet filled_at = msg.payload[\"filled_at\"]\nlet expired_at = msg.payload[\"expired_at\"]\nlet canceled_at = msg.payload[\"canceled_at\"]\nlet failed_at = msg.payload[\"failed_at\"]\nlet replaced_at = msg.payload[\"replaced_at\"]\nlet replaced_by = msg.payload[\"replaced_by\"]\nlet replaces = msg.payload[\"replaces\"]\nlet asset_id = msg.payload[\"asset_id\"]\nlet symbol = msg.payload[\"symbol\"]\nlet asset_class = msg.payload[\"asset_class\"]\nlet notional = msg.payload[\"notional\"]\nlet qty = msg.payload[\"qty\"]\nif (qty === null) { qty = 0 }\n\n\nlet filled_qty = msg.payload[\"filled_qty\"]\nif (filled_qty === null) { filled_qty = 0 }\n\nlet filled_avg_price = msg.payload[\"filled_avg_price\"]\nif (filled_avg_price === null) { filled_avg_price = 0 }\n\n\nlet order_class = msg.payload[\"order_class\"]\nlet order_type = msg.payload[\"order_type\"]\nlet type = msg.payload[\"type\"]\nlet side = msg.payload[\"side\"]\nlet time_in_force = msg.payload[\"time_in_force\"]\n\nlet limit_price = msg.payload[\"limit_price\"]\nif (limit_price === null) { limit_price = 0 }\n\nlet stop_price = msg.payload[\"stop_price\"]\nif (stop_price === null ){ stop_price = 0}\n\nlet status = msg.payload[\"status\"]\nlet extended_hours = msg.payload[\"extended_hours\"]\nlet legs = msg.payload[\"legs\"]\n\nlet trail_percent = msg.payload[\"trail_percent\"]\nif (trail_percent === null) { trail_percent = 0 }\n\nlet trail_price = msg.payload[\"trail_price\"]\nif (trail_price === null) { trail_price = 0 }\n\nlet hwm = msg.payload[\"hwm\"]\nlet subtag = msg.payload[\"subtag\"]\nlet source = msg.payload[\"source\"]\n\nmsg.query = \"insert into orders (id,client_order_id,created_at,updated_at,submitted_at,filled_at,expired_at,canceled_at,failed_at,replaced_at,replaced_by,extended_hours,replaces,asset_id,symbol,asset_class,notional,qty,filled_qty,filled_avg_price,order_class,order_type,type,side,time_in_force,limit_price,stop_price,status,legs,trail_percent,trail_price,hwm,subtag,source, order_status, account) values ('\" + id + \"','\" + client_order_id + \"','\" + created_at + \"','\" + updated_at + \"','\" + submitted_at + \"','\" + filled_at + \"','\" + expired_at + \"','\" + canceled_at + \"','\" + failed_at + \"','\" + replaced_at + \"','\" + replaced_by + \"','\" + extended_hours + \"','\" + replaces + \"','\" + asset_id + \"','\" + symbol + \"','\" + asset_class + \"','\" + notional + \"','\" + qty + \"','\" + filled_qty + \"','\" + filled_avg_price + \"','\" + order_class + \"','\" + order_type + \"','\" + type + \"','\" + side + \"','\" + time_in_force + \"','\" + limit_price + \"','\" + stop_price + \"','\" + status + \"','\" + legs + \"','\" + trail_percent + \"','\" + trail_price + \"','\" + hwm + \"','\" + subtag + \"','\" + source+ \"', 'open', 'paper');\"\n//node.warn(symbol)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1280,
        "wires": [
            [
                "2c11e0e757bf7fc0"
            ]
        ]
    },
    {
        "id": "9baa45e94b56aca7",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 220,
        "y": 1240,
        "wires": [
            [
                "b03cb305e6abdd22"
            ]
        ]
    },
    {
        "id": "5c7bc6ead4e8d8cb",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 220,
        "y": 1280,
        "wires": [
            [
                "b0febf285105b3ae"
            ]
        ]
    },
    {
        "id": "5d16163b25c1c3e9",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 220,
        "y": 1320,
        "wires": [
            [
                "3d15fb1fbab7c480"
            ]
        ]
    },
    {
        "id": "1274c718a896169d",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 220,
        "y": 1360,
        "wires": [
            [
                "b29932b55cd58413"
            ]
        ]
    },
    {
        "id": "fe52638890d28f92",
        "type": "inject",
        "z": "2923e96769e4646a",
        "name": "GO",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 1100,
        "wires": [
            [
                "8f4d70b062f2feb0",
                "dfad69ad307f7551",
                "83ade54f5903b462",
                "9baa45e94b56aca7",
                "5c7bc6ead4e8d8cb",
                "5d16163b25c1c3e9",
                "1274c718a896169d",
                "3a48eae92178e119"
            ]
        ]
    },
    {
        "id": "83ade54f5903b462",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 320,
        "y": 1180,
        "wires": [
            [
                "909a8f6758f8779a"
            ]
        ]
    },
    {
        "id": "909a8f6758f8779a",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "create index",
        "func": "msg.query = \"create index type on orders(status)\"\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1180,
        "wires": [
            [
                "d2900eeb8cb43e7b"
            ]
        ]
    },
    {
        "id": "d2900eeb8cb43e7b",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 1180,
        "wires": [
            [
                "8092c696796f065e"
            ]
        ]
    },
    {
        "id": "8092c696796f065e",
        "type": "debug",
        "z": "2923e96769e4646a",
        "name": "debug 260",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 1180,
        "wires": []
    },
    {
        "id": "ecb3bd384d2bfbe2",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 800,
        "wires": [
            [
                "4a99fbcfc19ff85c"
            ]
        ]
    },
    {
        "id": "500f5d5744b6c9f1",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 840,
        "wires": [
            [
                "549764d852f9fea1"
            ]
        ]
    },
    {
        "id": "5b510ea69b9419be",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "create index",
        "func": "msg.query = \"create index type on orders(status)\"\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 520,
        "wires": [
            [
                "d6d47e543077952d"
            ]
        ]
    },
    {
        "id": "d6d47e543077952d",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "8b07fb34792361eb",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 880,
        "wires": [
            [
                "0855696978ed4837"
            ]
        ]
    },
    {
        "id": "ca4dfbba72e85259",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "35",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 920,
        "wires": [
            [
                "71ee1fd17a28e7c7"
            ]
        ]
    },
    {
        "id": "33ac90acee408dc7",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "create orders table ",
        "func": "msg.query = \"create table IF NOT EXISTS orders (id VARCHAR(100) PRIMARY KEY, client_order_id VARCHAR(100), created_at VARCHAR(100), updated_at VARCHAR(100), submitted_at VARCHAR(100), filled_at VARCHAR(100), expired_at VARCHAR(100), canceled_at VARCHAR(100), failed_at VARCHAR(100), replaced_at VARCHAR(100), replaced_by VARCHAR(100), replaces VARCHAR(100), asset_id VARCHAR(100), symbol VARCHAR(10), asset_class VARCHAR(10), notional VARCHAR(100), qty FLOAT, filled_qty FLOAT, filled_avg_price FLOAT, order_class VARCHAR(100), order_type VARCHAR(10), type VARCHAR(100), side VARCHAR(10), time_in_force VARCHAR(10), limit_price FLOAT, stop_price FLOAT, status VARCHAR(100), extended_hours BOOLEAN NOT NULL, legs VARCHAR(100), trail_percent FLOAT, trail_price FLOAT, hwm VARCHAR(100), subtag VARCHAR(100), source varchar(100), order_status VARCHAR(10), account VARCHAR(10)) \"\n//msg.query = \"drop table orders\"\n//msg.query = \"select * from orders order by created_at desc limit 25 \"\n//msg.query = \"delete from orders\"\n//msg.query = \"update orders set id = 1671452659911, portfolioname = 'Buy Crypto Portfolio' where exchange = 'FTXU'\"\n//msg.query = \"update orders set id = 1671453742321, portfolioname = 'Buy/Short SPY on News Sentiment Daily' where symbol = 'SPY'\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 480,
        "wires": [
            [
                "85ad5d739688ca10"
            ]
        ]
    },
    {
        "id": "85ad5d739688ca10",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "0b88996ee452f557",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 480,
        "wires": [
            [
                "33ac90acee408dc7"
            ]
        ]
    },
    {
        "id": "bad961977d11f05c",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "drop orders table",
        "func": "msg.query = \"drop table orders\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 480,
        "wires": [
            [
                "e92b683beae71011"
            ]
        ]
    },
    {
        "id": "e92b683beae71011",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 700,
        "y": 480,
        "wires": [
            [
                "0b88996ee452f557",
                "835c84afacde4490"
            ]
        ]
    },
    {
        "id": "835c84afacde4490",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 520,
        "wires": [
            [
                "5b510ea69b9419be"
            ]
        ]
    },
    {
        "id": "0a6d3a7a47bc6f68",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "create orders_open table ",
        "func": "msg.query = \"create table IF NOT EXISTS orders_open (id VARCHAR(100) PRIMARY KEY, client_order_id VARCHAR(100), created_at VARCHAR(100), updated_at VARCHAR(100), submitted_at VARCHAR(100), filled_at VARCHAR(100), expired_at VARCHAR(100), canceled_at VARCHAR(100), failed_at VARCHAR(100), replaced_at VARCHAR(100), replaced_by VARCHAR(100), replaces VARCHAR(100), asset_id VARCHAR(100), symbol VARCHAR(10), asset_class VARCHAR(10), notional VARCHAR(100), qty FLOAT, filled_qty FLOAT, filled_avg_price FLOAT, order_class VARCHAR(100), order_type VARCHAR(10), type VARCHAR(100), side VARCHAR(10), time_in_force VARCHAR(10), limit_price FLOAT, stop_price FLOAT, status VARCHAR(100), extended_hours BOOLEAN NOT NULL, legs VARCHAR(100), trail_percent FLOAT, trail_price FLOAT, hwm VARCHAR(100), subtag VARCHAR(100), source varchar(100), order_status VARCHAR(10), account VARCHAR(10)) \"\n//msg.query = \"drop table orders\"\n//msg.query = \"select * from orders order by created_at desc limit 25 \"\n//msg.query = \"delete from orders\"\n//msg.query = \"update orders set id = 1671452659911, portfolioname = 'Buy Crypto Portfolio' where exchange = 'FTXU'\"\n//msg.query = \"update orders set id = 1671453742321, portfolioname = 'Buy/Short SPY on News Sentiment Daily' where symbol = 'SPY'\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 560,
        "wires": [
            [
                "86b425712b6e024e"
            ]
        ]
    },
    {
        "id": "86b425712b6e024e",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "a314f13ab70495f4",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 560,
        "wires": [
            [
                "0a6d3a7a47bc6f68"
            ]
        ]
    },
    {
        "id": "ec124c4fa80f74ce",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "drop orders table",
        "func": "msg.query = \"drop table orders_open\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 560,
        "wires": [
            [
                "3d8b920c2d688483"
            ]
        ]
    },
    {
        "id": "3d8b920c2d688483",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 700,
        "y": 560,
        "wires": [
            [
                "a314f13ab70495f4"
            ]
        ]
    },
    {
        "id": "e391d0a4707ca1f8",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "create temp_orders table ",
        "func": "msg.query = \"create table IF NOT EXISTS temp_orders (symbol VARCHAR(10) PRIMARY KEY, open Boolean)\"\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 600,
        "wires": [
            [
                "da64b040f04b9fbd"
            ]
        ]
    },
    {
        "id": "da64b040f04b9fbd",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "987f21fe02dcbda3",
        "type": "delay",
        "z": "2923e96769e4646a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 600,
        "wires": [
            [
                "e391d0a4707ca1f8"
            ]
        ]
    },
    {
        "id": "75087e90a046cb48",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "drop temp_orders table",
        "func": "msg.query = \"drop table temp_orders\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 600,
        "wires": [
            [
                "43aec76a5c4d0144"
            ]
        ]
    },
    {
        "id": "43aec76a5c4d0144",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 700,
        "y": 600,
        "wires": [
            [
                "987f21fe02dcbda3"
            ]
        ]
    },
    {
        "id": "415a8f6bfb46b110",
        "type": "switch",
        "z": "2923e96769e4646a",
        "name": "active only",
        "property": "payload[\"status\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "active",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 760,
        "wires": [
            [
                "a564b9d5c5747b26"
            ],
            []
        ]
    },
    {
        "id": "a564b9d5c5747b26",
        "type": "function",
        "z": "2923e96769e4646a",
        "name": "insert into alpaca_assets",
        "func": "let symbol = msg.payload[\"symbol\"]\nlet name = msg.payload[\"name\"]\nlet exchange = msg.payload[\"exchange\"]\nlet status = msg.payload[\"status\"]\nlet shortable = msg.payload[\"shortable\"]\nlet tradable = msg.payload[\"tradable\"]\nlet fractionable = msg.payload[\"fractionable\"]\nlet marginable = msg.payload[\"marginable\"]\nlet easy = msg.payload[\"easy_to_borrow\"]\nname = name.replace(\"'\",\"\")\nsymbol = symbol.replace(\"/\",\"\")\n\nmsg.query = \"insert into alpaca_assets (symbol, name, exchange, tradable, shortable, fractionable, marginable, easy_to_borrow, status)  values ('\" + symbol + \"','\" + name + \"','\" + exchange + \"','\" + tradable + \"','\" + shortable + \"','\" +fractionable+ \"','\" +marginable+ \"','\" +easy+ \"','\" +status+ \"');\"\n\n//node.warn(msg.query)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 760,
        "wires": [
            [
                "b021f654860938f8"
            ]
        ]
    },
    {
        "id": "b021f654860938f8",
        "type": "postgresql",
        "z": "2923e96769e4646a",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1180,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "7455395cf269fb2b",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "docker",
        "userFieldType": "str",
        "password": "docker",
        "passwordFieldType": "str"
    },
    {
        "id": "0c86a5f06a42b505",
        "type": "alpaca-account",
        "name": "live",
        "keyId": "AKHGVWA9MGB4CX40J5X6",
        "paper": false
    },
    {
        "id": "e535f42f1df1b25f",
        "type": "alpaca-account",
        "name": "paper",
        "keyId": "PK4TI6GDJ7NN146CF8YA",
        "paper": true
    }
]