[
    {
        "id": "030aa62ba5f7e90c",
        "type": "tab",
        "label": "Create Dividend Portfolio",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e4b28f3b1584a72b",
        "type": "comment",
        "z": "030aa62ba5f7e90c",
        "name": "Flow 1: Create a portfolio of dividend stocks ",
        "info": "",
        "x": 210,
        "y": 140,
        "wires": []
    },
    {
        "id": "3a8b237e283f29ac",
        "type": "mysql",
        "z": "030aa62ba5f7e90c",
        "mydb": "3564bcf07c743fdf",
        "name": "ptsapi",
        "x": 570,
        "y": 180,
        "wires": [
            [
                "a7cdc4c85bbef646"
            ]
        ]
    },
    {
        "id": "9c746471e2eea04d",
        "type": "function",
        "z": "030aa62ba5f7e90c",
        "name": "Get dividend stocks",
        "func": "let sql = \"select distinct ticker,close from dividends where pct between 4 and 10 and exdate > '2022-06-01'\"\nmsg.topic = sql\n//node.warn(sql)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 180,
        "wires": [
            [
                "3a8b237e283f29ac"
            ]
        ]
    },
    {
        "id": "089d761b8a4c2206",
        "type": "inject",
        "z": "030aa62ba5f7e90c",
        "name": "get count ",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 180,
        "y": 180,
        "wires": [
            [
                "9c746471e2eea04d"
            ]
        ]
    },
    {
        "id": "87b2d766d337601e",
        "type": "comment",
        "z": "030aa62ba5f7e90c",
        "name": "Get list of dividend stocks from data center that meet criteria in the function node",
        "info": "",
        "x": 320,
        "y": 40,
        "wires": []
    },
    {
        "id": "a7cdc4c85bbef646",
        "type": "function",
        "z": "030aa62ba5f7e90c",
        "name": "calculate total number of stocks",
        "func": "let cnt = msg.payload.length\nmsg.payload = cnt\nnode.warn(\"Count: \" +cnt)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 180,
        "wires": [
            [
                "4035db3803fb1d01"
            ]
        ]
    },
    {
        "id": "c3042eb32ecbde8f",
        "type": "mysql",
        "z": "030aa62ba5f7e90c",
        "mydb": "3564bcf07c743fdf",
        "name": "ptsapi",
        "x": 510,
        "y": 500,
        "wires": [
            [
                "aa5adab6973662f4"
            ]
        ]
    },
    {
        "id": "6cc0c64ceb72dc88",
        "type": "function",
        "z": "030aa62ba5f7e90c",
        "name": "Get dividend stocks",
        "func": "let cnt = msg.payload\ncnt = cnt + 1\nlet sql = \"select distinct ticker,close from dividends where pct between 4 and 21 and exdate > '2022-06-01' limit \" +cnt+ \", 1\"\nmsg.topic = sql\n//node.warn(sql)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 500,
        "wires": [
            [
                "c3042eb32ecbde8f"
            ]
        ]
    },
    {
        "id": "aa5adab6973662f4",
        "type": "function",
        "z": "030aa62ba5f7e90c",
        "name": "output",
        "func": "let psize = flow.get(\"portfolio_size\")\nlet id = flow.get(\"portfolio_id\")\n\n\n\nfor (let i = 0; i < msg.payload.length; i++) {\n\n    let ticker = msg.payload[i][\"ticker\"]\n    let close = msg.payload[i][\"close\"]\n    let qty = (psize / 91) / close\n    qty = Math.round(qty);\n    let sql = \"insert into sub_portfolio (id, ticker, price, qty) values (\" +id+ \",'\" +ticker+ \"','\" +close+ \"','\" +qty+ \"');\";\n    msg.topic = sql\n\n// create a market order for Alpaca\n    let temp = ''\n    temp = {\n        \"symbol\": ticker,\n        \"qty\": qty, // buy 0.1 of a share at first \n        \"side\": \"buy\",\n        \"type\": \"market\",\n        \"time_in_force\": \"gtc\"\n    };\n\n\n\n    msg.payload = temp\n    node.warn(msg.payload)\n    node.warn(msg.topic)\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 500,
        "wires": [
            [
                "d3da435a61f03791",
                "d22f6d8cb5830769",
                "a776ed9eaeb5976a"
            ]
        ]
    },
    {
        "id": "7bdb27144b33d778",
        "type": "inject",
        "z": "030aa62ba5f7e90c",
        "name": "start at 0",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "6cc0c64ceb72dc88"
            ]
        ]
    },
    {
        "id": "d3da435a61f03791",
        "type": "loop",
        "z": "030aa62ba5f7e90c",
        "name": "",
        "kind": "fcnt",
        "count": "91",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-index",
        "finalPayload": "final-count",
        "x": 330,
        "y": 680,
        "wires": [
            [],
            [
                "fda99a82f16b2c84"
            ]
        ]
    },
    {
        "id": "fda99a82f16b2c84",
        "type": "delay",
        "z": "030aa62ba5f7e90c",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 680,
        "wires": [
            [
                "6cc0c64ceb72dc88"
            ]
        ]
    },
    {
        "id": "1cf2736a162aa1fe",
        "type": "comment",
        "z": "030aa62ba5f7e90c",
        "name": "Flow #4: Store Positions Gains/Losses for this Sub Portfolio",
        "info": "",
        "x": 260,
        "y": 740,
        "wires": []
    },
    {
        "id": "f86f845963eb5610",
        "type": "function",
        "z": "030aa62ba5f7e90c",
        "name": "store raw orders",
        "func": "let id = msg.payload[\"id\"]\nlet client_order_id = msg.payload[\"client_order_id\"]\nlet created_at = msg.payload[\"created_at\"]\nlet updated_at = msg.payload[\"updated_at\"]\nlet submitted_at = msg.payload[\"submitted_at\"]\nlet filled_at = msg.payload[\"filled_at\"]\nlet expired_at = msg.payload[\"expired_at\"]\nlet canceled_at = msg.payload[\"canceled_at\"]\nlet failed_at = msg.payload[\"failed_at\"]\nlet replaced_at = msg.payload[\"replaced_at\"]\nlet replaced_by = msg.payload[\"replaced_by\"]\nlet replaces = msg.payload[\"replaces\"]\nlet asset_id = msg.payload[\"asset_id\"]\nlet symbol = msg.payload[\"symbol\"]\nlet asset_class = msg.payload[\"asset_class\"]\nlet notional = msg.payload[\"notional\"]\nlet qty = msg.payload[\"qty\"]\nlet filled_qty = msg.payload[\"filled_qty\"]\nlet filled_avg_price = msg.payload[\"filled_avg_price\"]\nlet order_class = msg.payload[\"order_class\"]\nlet order_type = msg.payload[\"order_type\"]\nlet type = msg.payload[\"type\"]\nlet side = msg.payload[\"side\"]\nlet time_in_force = msg.payload[\"time_in_force\"]\nlet limit_price = msg.payload[\"limit_price\"]\nlet stop_price = msg.payload[\"stop_price\"]\nlet status = msg.payload[\"status\"]\nlet extended_hours = msg.payload[\"extended_hours\"]\nlet legs = msg.payload[\"legs\"]\nlet trail_percent = msg.payload[\"trail_percent\"]\nlet trail_price = msg.payload[\"trail_price\"]\nlet hwm = msg.payload[\"hwm\"]\nlet subtag = msg.payload[\"subtag\"]\nlet source = msg.payload[\"source\"]\n\nlet sql = \"insert into orders (id,client_order_id,created_at,updated_at,submitted_at,filled_at,expired_at,canceled_at,failed_at,replaced_at,replaced_by,replaces,asset_id,symbol,asset_class,notional,qty,filled_qty,filled_avg_price,order_class,order_type,type,side,time_in_force,limit_price,stop_price,status,extended_hours,legs,trail_percent,trail_price,hwm,subtag,source) values ('\" + id + \"','\" + client_order_id + \"','\" + created_at + \"','\" + updated_at + \"','\" + submitted_at + \"','\" + filled_at + \"','\" + expired_at + \"','\" + canceled_at + \"','\" + failed_at + \"','\" + replaced_at + \"','\" + replaced_by + \"','\" + replaces + \"','\" + asset_id + \"','\" + symbol + \"','\" + asset_class + \"','\" + notional + \"','\" + qty + \"','\" + filled_qty + \"','\" + filled_avg_price + \"','\" + order_class + \"','\" + order_type + \"','\" + type + \"','\" + side + \"','\" + time_in_force + \"','\" + limit_price + \"','\" + stop_price + \"','\" + status + \"','\" + extended_hours + \"','\" + legs + \"','\" + trail_percent + \"','\" + trail_price + \"','\" + hwm + \"','\" + subtag + \"','\" + source + \"');\"\n\nnode.warn(sql)\nmsg.topic = sql\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 580,
        "wires": [
            [
                "415a6afc53c4e3f8"
            ]
        ]
    },
    {
        "id": "415a6afc53c4e3f8",
        "type": "sqlite",
        "z": "030aa62ba5f7e90c",
        "mydb": "3da37290d92c1dc8",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "orders",
        "x": 1110,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "a8670f6de48e4082",
        "type": "comment",
        "z": "030aa62ba5f7e90c",
        "name": "create the query for the dividends here:",
        "info": "",
        "x": 550,
        "y": 140,
        "wires": []
    },
    {
        "id": "95cd35784e9b85f7",
        "type": "function",
        "z": "030aa62ba5f7e90c",
        "name": "update positions",
        "func": "let sql = ''\nlet portfolio_id = 1\nlet temp = ''\n\nfor (var i=0;i<msg.payload.length;i++) \n\n{\n\n    let asset_id = msg.payload[i][\"asset_id\"]\n    let symbol = msg.payload[i][\"symbol\"]\n    let exchange = msg.payload[i][\"exchange\"]\n    let asset_class = msg.payload[i][\"asset_class\"]\n    let asset_marginable = msg.payload[i][\"asset_marginable\"]\n    let qty = msg.payload[i][\"qty\"]\n    let avg_entry_price = msg.payload[i][\"avg_entry_price\"]\n    let side = msg.payload[i][\"side\"]\n    let market_value = msg.payload[i][\"market_value\"]\n    let cost_basis = msg.payload[i][\"cost_basis\"]\n    let unrealized_pl = msg.payload[i][\"unrealized_pl\"]\n    let unrealized_plpc = msg.payload[i][\"unrealized_plpc\"]\n    let unrealized_intraday_pl = msg.payload[i][\"unrealized_intraday_pl\"]\n    let unrealized_intraday_plpc = msg.payload[i][\"unrealized_intraday_plpc\"]\n    let current_price = msg.payload[i][\"current_price\"]\n    let lastday_price = msg.payload[i][\"lastday_price\"]\n    let change_today = msg.payload[i][\"change_today\"]\n    let qty_available = msg.payload[i][\"qty_available\"]\n    sql = \"update sub_portfolio set gain_today = \" +unrealized_intraday_pl+ \", pctgain_today = \" +unrealized_intraday_plpc +\", gain = \" +unrealized_pl+ \", pctgain = \" +unrealized_plpc+ \" where ticker = '\" +symbol+ \"' and id = \" +portfolio_id+ \";\\n\" \n    temp += sql\n}\n\nmsg.payload = temp\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 800,
        "wires": [
            [
                "df269c926172f804"
            ]
        ]
    },
    {
        "id": "9d9f656605775854",
        "type": "sqlite",
        "z": "030aa62ba5f7e90c",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 1100,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "df269c926172f804",
        "type": "split",
        "z": "030aa62ba5f7e90c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 730,
        "y": 800,
        "wires": [
            [
                "1d0aec359ee7cbaf"
            ]
        ]
    },
    {
        "id": "1d0aec359ee7cbaf",
        "type": "function",
        "z": "030aa62ba5f7e90c",
        "name": "change payload to topic",
        "func": "msg.topic = (msg.payload)\nnode.warn(msg.topic)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 800,
        "wires": [
            [
                "9d9f656605775854"
            ]
        ]
    },
    {
        "id": "777e592822b717c3",
        "type": "inject",
        "z": "030aa62ba5f7e90c",
        "name": "6 AM",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 800,
        "wires": [
            [
                "f7cb6dd135dab363"
            ]
        ]
    },
    {
        "id": "a776ed9eaeb5976a",
        "type": "alpaca-order",
        "z": "030aa62ba5f7e90c",
        "conf": "0c86a5f06a42b505",
        "x": 790,
        "y": 580,
        "wires": [
            [
                "f86f845963eb5610"
            ]
        ]
    },
    {
        "id": "f7cb6dd135dab363",
        "type": "alpaca-position-query",
        "z": "030aa62ba5f7e90c",
        "conf": "0c86a5f06a42b505",
        "x": 330,
        "y": 800,
        "wires": [
            [
                "95cd35784e9b85f7"
            ]
        ]
    },
    {
        "id": "4035db3803fb1d01",
        "type": "change",
        "z": "030aa62ba5f7e90c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "stocks",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "9f60c04f1d79cb1b",
        "type": "inject",
        "z": "030aa62ba5f7e90c",
        "name": "set size of portfolio whole dollars",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "portfolioid",
                "v": "1",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "50000",
        "x": 210,
        "y": 320,
        "wires": [
            [
                "99b4f2a2f2893320"
            ]
        ]
    },
    {
        "id": "99b4f2a2f2893320",
        "type": "change",
        "z": "030aa62ba5f7e90c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "portfolio_size",
                "pt": "flow",
                "to": "topic",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "portfolio_id",
                "pt": "flow",
                "to": "portfolioid",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "856c3d7a96a67b0b",
        "type": "inject",
        "z": "030aa62ba5f7e90c",
        "name": "Display flow variables",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 180,
        "y": 380,
        "wires": [
            [
                "bf7980b24f62fd68"
            ]
        ]
    },
    {
        "id": "bf7980b24f62fd68",
        "type": "function",
        "z": "030aa62ba5f7e90c",
        "name": "Flow vars",
        "func": "let cnt = flow.get(\"stocks\")\nlet psize = flow.get(\"portfolio_size\")\nlet portfolioid = flow.get(\"portfolio_id\")\n\nnode.warn(\"Portfolio ID: \" +portfolioid+ \"  Portfolio Size: \" +psize+ \" Number of stocks: \" +cnt) \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "5aa42237af5cf715",
        "type": "comment",
        "z": "030aa62ba5f7e90c",
        "name": "Flow 3: Buy Portfolio ",
        "info": "",
        "x": 130,
        "y": 440,
        "wires": []
    },
    {
        "id": "5ed62fd73ebe7cfd",
        "type": "comment",
        "z": "030aa62ba5f7e90c",
        "name": "entere the number of stocks manually in the \"Fixed Count Look\"",
        "info": "",
        "x": 290,
        "y": 640,
        "wires": []
    },
    {
        "id": "d22f6d8cb5830769",
        "type": "sqlite",
        "z": "030aa62ba5f7e90c",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 800,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "8ff781e96fbff400",
        "type": "comment",
        "z": "030aa62ba5f7e90c",
        "name": "Flow 2: Set the portfolio values",
        "info": "",
        "x": 170,
        "y": 260,
        "wires": []
    },
    {
        "id": "3564bcf07c743fdf",
        "type": "MySQLdatabase",
        "name": "ptsapi",
        "host": "ptsapi.cax8fspskl8t.us-east-1.rds.amazonaws.com",
        "port": "3306",
        "db": "ptsapi",
        "tz": "EST5EDT",
        "charset": "UTF8"
    },
    {
        "id": "3da37290d92c1dc8",
        "type": "sqlitedb",
        "db": "/data/store/orders",
        "mode": "RWC"
    },
    {
        "id": "d6e22e31a8a67436",
        "type": "sqlitedb",
        "db": "/data/store/portfolios",
        "mode": "RWC"
    },
    {
        "id": "0c86a5f06a42b505",
        "type": "alpaca-account",
        "name": "live",
        "keyId": "PK5NTIWS5NJ8S2MFN6QT",
        "paper": true
    }
]