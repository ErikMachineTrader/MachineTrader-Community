[
    {
        "id": "e5fdee50b6957f68",
        "type": "tab",
        "label": "Add Alpaca Account Keys",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "73853126f9fce828",
        "type": "comment",
        "z": "e5fdee50b6957f68",
        "name": "Inset your Alpaca Key and Secret Key in the Alpaca Paper Account Node ",
        "info": "",
        "x": 340,
        "y": 140,
        "wires": []
    },
    {
        "id": "1e73f7790b32f3f2",
        "type": "inject",
        "z": "e5fdee50b6957f68",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "2d99165681d6d34a",
                "7da3e9e941531e6d"
            ]
        ]
    },
    {
        "id": "2f3f9daefeee4f88",
        "type": "inject",
        "z": "e5fdee50b6957f68",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "69f547a43fa964a7"
            ]
        ]
    },
    {
        "id": "d789f17f942cbc75",
        "type": "function",
        "z": "e5fdee50b6957f68",
        "name": "get open orders",
        "func": "/* Get Flow variables */\n\nlet ordertype = flow.get(\"orders\")\n//let limit  = flow.get(\"cnt\")\nordertype = \"open\"\n\n/* Setup alpaca request arguments */\n\nmsg.payload = {\n    status: ordertype, // \"open or closed\"\n    limit: \"100\", // default is 500\n\tdirection: \"desc\" //  \"asc or desc\"\n\n}\n\n//node.warn(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 480,
        "wires": [
            [
                "8fba3306e90602d6"
            ]
        ]
    },
    {
        "id": "ec8f65a4accb9da2",
        "type": "function",
        "z": "e5fdee50b6957f68",
        "name": "get closed orders",
        "func": "/* Get Flow variables */\n\nlet ordertype = flow.get(\"orders\")\n//let limit  = flow.get(\"cnt\")\nordertype = \"closed\"\n\n/* Setup alpaca request arguments */\n\nmsg.payload = {\n    status: ordertype, // \"open or closed\"\n    limit: \"5\", // default is 500\n\tdirection: \"desc\" //  \"asc or desc\"\n\n}\n\n//node.warn(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 520,
        "wires": [
            [
                "8fba3306e90602d6"
            ]
        ]
    },
    {
        "id": "68d0f1ae170d07ca",
        "type": "function",
        "z": "e5fdee50b6957f68",
        "name": "orders function",
        "func": "for (var i=0;i<msg.payload.length;i++) \n{\n\n    let id = msg.payload[i][\"id\"]\n    let client_order_id = msg.payload[i][\"client_order_id\"]\n    let created_at = msg.payload[i][\"created_at\"]\n    let updated_at = msg.payload[i][\"updated_at\"]\n    let submitted_at = msg.payload[i][\"submitted_at\"]\n    let filled_at = msg.payload[i][\"filled_at\"]\n    let expired_at = msg.payload[i][\"expired_at\"]\n    let canceled_at = msg.payload[i][\"canceled_at\"]\n    let failed_at = msg.payload[i][\"failed_at\"]\n    let replaced_at = msg.payload[i][\"replaced_at\"]\n    let replaced_by = msg.payload[i][\"replaced_by\"]\n    let replaces = msg.payload[i][\"replaces\"]\n    let asset_id = msg.payload[i][\"asset_id\"]\n    let symbol = msg.payload[i][\"symbol\"]\n    let asset_class = msg.payload[i][\"asset_class\"]\n    let notional = msg.payload[i][\"notional\"]\n    let qty = msg.payload[i][\"qty\"]\n    let filled_qty = msg.payload[i][\"filled_qty\"]\n    let filled_avg_price = msg.payload[i][\"filled_avg_price\"]\n    let order_class = msg.payload[i][\"order_class\"]\n    let order_type = msg.payload[i][\"order_type\"]\n    let type = msg.payload[i][\"type\"]\n    let side = msg.payload[i][\"side\"]\n    let time_in_force = msg.payload[i][\"time_in_force\"]\n    let limit_price = msg.payload[i][\"limit_price\"]\n    let stop_price = msg.payload[i][\"stop_price\"]\n    let status = msg.payload[i][\"status\"]\n    let extended_hours = msg.payload[i][\"extended_hours\"]\n    let legs = msg.payload[i][\"legs\"]\n    let trail_percent = msg.payload[i][\"trail_percent\"]\n    let trail_price = msg.payload[i][\"trail_price\"]\n    let hwm = msg.payload[i][\"hwm\"]\n    let source = msg.payload[i][\"source\"]\n\n    node.warn(\"Date/Time: \" +created_at+ \" Symbol: \" +symbol+ \" Side: \" +side+ \" Qty: \" +qty+ \" Avg. Filled Price: \" +filled_avg_price) \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "1a42bf596b15b166",
        "type": "inject",
        "z": "e5fdee50b6957f68",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 480,
        "wires": [
            [
                "d789f17f942cbc75"
            ]
        ]
    },
    {
        "id": "f502eb7eaf7ba390",
        "type": "inject",
        "z": "e5fdee50b6957f68",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 520,
        "wires": [
            [
                "ec8f65a4accb9da2"
            ]
        ]
    },
    {
        "id": "609f17f4c3d0b19b",
        "type": "inject",
        "z": "e5fdee50b6957f68",
        "name": "Test buy 0.1 AAPL",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 660,
        "wires": [
            [
                "085e7b61d8e2c14f"
            ]
        ]
    },
    {
        "id": "9865b204d455aeb8",
        "type": "function",
        "z": "e5fdee50b6957f68",
        "name": "Market Order",
        "func": "var action = \"buy\"\nvar qty = \"0\"\nvar ticker = msg.payload.symbol;\nvar price = msg.payload.current_price;\nvar side = msg.payload.side;\nvar qty = msg.payload.qty;\nvar temp = {};\n\nif (side == \"long\")\n    action = \"sell\"\n\nif (qty < 0)\n    qty = (qty * -1)\n\ntemp = {\n    \"symbol\":ticker,\n    \"qty\":qty,\n    \"side\":action,\n    \"type\":\"market\",\n    \"time_in_force\":\"day\"\n    };\n\nnode.warn(msg.payload)\nmsg.payload = temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 840,
        "wires": [
            [
                "5c343f1735ab3494"
            ]
        ]
    },
    {
        "id": "1f2e73e664d7da22",
        "type": "split",
        "z": "e5fdee50b6957f68",
        "name": "Split array",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 560,
        "y": 840,
        "wires": [
            [
                "9865b204d455aeb8"
            ]
        ]
    },
    {
        "id": "5c343f1735ab3494",
        "type": "delay",
        "z": "e5fdee50b6957f68",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 910,
        "y": 840,
        "wires": [
            [
                "a6e59423d56e8062"
            ]
        ]
    },
    {
        "id": "085e7b61d8e2c14f",
        "type": "function",
        "z": "e5fdee50b6957f68",
        "name": "Market Order Buy",
        "func": "let action = \"buy\"\nlet qty = 0.1\nlet ticker = 'VZ'\nlet temp = {};\n\n\ntemp = {\n    \"symbol\": ticker,\n    \"qty\": 0.1,\n    \"side\": action,\n    \"type\": \"market\",\n    \"time_in_force\": \"day\"\n    };\n\nmsg.payload = temp;\nnode.warn(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 660,
        "wires": [
            [
                "bf23c8652e0c2f53"
            ]
        ]
    },
    {
        "id": "6fdc52bbca104203",
        "type": "debug",
        "z": "e5fdee50b6957f68",
        "name": "debug 62",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 660,
        "wires": []
    },
    {
        "id": "e12368188ff1cad8",
        "type": "inject",
        "z": "e5fdee50b6957f68",
        "name": "Test sell 0.1 AAPL",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 700,
        "wires": [
            [
                "6da123e35800890d"
            ]
        ]
    },
    {
        "id": "6da123e35800890d",
        "type": "function",
        "z": "e5fdee50b6957f68",
        "name": "Market Order Sell",
        "func": "let action = \"sell\"\nlet qty = 0.1\nlet ticker = 'AAPL'\nlet temp = {};\n\n\ntemp = {\n    \"symbol\": ticker,\n    \"qty\": 0.1,\n    \"side\": action,\n    \"type\": \"market\",\n    \"time_in_force\": \"day\"\n    };\n\nmsg.payload = temp;\nnode.warn(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 700,
        "wires": [
            [
                "c4d305b07bdc7493"
            ]
        ]
    },
    {
        "id": "9e422b049f3a24b0",
        "type": "debug",
        "z": "e5fdee50b6957f68",
        "name": "debug 63",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 700,
        "wires": []
    },
    {
        "id": "1a6c7deace2de969",
        "type": "inject",
        "z": "e5fdee50b6957f68",
        "name": "Close positions",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 840,
        "wires": [
            [
                "caf5654c9ef80c66"
            ]
        ]
    },
    {
        "id": "63c051d0457a6bd7",
        "type": "debug",
        "z": "e5fdee50b6957f68",
        "name": "debug 64",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 840,
        "wires": []
    },
    {
        "id": "a5fa1727708e2179",
        "type": "inject",
        "z": "e5fdee50b6957f68",
        "name": "Close all orders",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 940,
        "wires": [
            [
                "25c52a83265fafb5"
            ]
        ]
    },
    {
        "id": "b35432650d5e813c",
        "type": "debug",
        "z": "e5fdee50b6957f68",
        "name": "debug 65",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 940,
        "wires": []
    },
    {
        "id": "418c2387d0ad7094",
        "type": "function",
        "z": "e5fdee50b6957f68",
        "name": "account function",
        "func": "\nlet asset_id = msg.payload[\"asset_id\"]\nlet id = msg.payload[\"id\"]\nlet account_number = msg.payload[\"account_number\"]\nlet status = msg.payload[\"status\"]\nlet crypto_status = msg.payload[\"crypto_status\"]\nlet currency = msg.payload[\"currency\"]\nlet buying_power = msg.payload[\"buying_power\"]\nlet regt_buying_power = msg.payload[\"regt_buying_power\"]\nlet daytrading_buying_power = msg.payload[\"daytrading_buying_power\"]\nlet non_marginable_buying_power = msg.payload[\"non_marginable_buying_power\"]\nlet cash = msg.payload[\"cash\"]\nlet accrued_fees = msg.payload[\"accrued_fees\"]\nlet pending_transfer_in = msg.payload[\"pending_transfer_in\"]\nlet portfolio_value = msg.payload[\"portfolio_value\"]\nlet pattern_day_trader = msg.payload[\"pattern_day_trader\"]\nlet trading_blocked = msg.payload[\"trading_blocked\"]\nlet transfers_blocked = msg.payload[\"transfers_blocked\"]\nlet account_blocked = msg.payload[\"account_blocked\"]\nlet created_at = msg.payload[\"created_at\"]\nlet trade_suspended_by_user = msg.payload[\"trade_suspended_by_user\"]\nlet multiplier = msg.payload[\"multiplier\"]\nlet shorting_enabled = msg.payload[\"shorting_enabled\"]\nlet equity = msg.payload[\"equity\"]\nlet last_equity = msg.payload[\"last_equity\"]\nlet long_market_value = msg.payload[\"long_market_value\"]\nlet short_market_value = msg.payload[\"short_market_value\"]\nlet initial_margin = msg.payload[\"initial_margin\"]\nlet maintenance_margin = msg.payload[\"maintenance_margin\"]\nlet last_maintenance_margin = msg.payload[\"last_maintenance_margin\"]\nlet sma = msg.payload[\"sma\"]\nlet daytrade_count = msg.payload[\"daytrade_count\"]\n\nnode.warn(\"LIVE Account Number: \" +account_number+ \" Balance:\" +equity)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ea3bb59b058ffefe",
        "type": "function",
        "z": "e5fdee50b6957f68",
        "name": "account function",
        "func": "\nlet asset_id = msg.payload[\"asset_id\"]\nlet id = msg.payload[\"id\"]\nlet account_number = msg.payload[\"account_number\"]\nlet status = msg.payload[\"status\"]\nlet crypto_status = msg.payload[\"crypto_status\"]\nlet currency = msg.payload[\"currency\"]\nlet buying_power = msg.payload[\"buying_power\"]\nlet regt_buying_power = msg.payload[\"regt_buying_power\"]\nlet daytrading_buying_power = msg.payload[\"daytrading_buying_power\"]\nlet non_marginable_buying_power = msg.payload[\"non_marginable_buying_power\"]\nlet cash = msg.payload[\"cash\"]\nlet accrued_fees = msg.payload[\"accrued_fees\"]\nlet pending_transfer_in = msg.payload[\"pending_transfer_in\"]\nlet portfolio_value = msg.payload[\"portfolio_value\"]\nlet pattern_day_trader = msg.payload[\"pattern_day_trader\"]\nlet trading_blocked = msg.payload[\"trading_blocked\"]\nlet transfers_blocked = msg.payload[\"transfers_blocked\"]\nlet account_blocked = msg.payload[\"account_blocked\"]\nlet created_at = msg.payload[\"created_at\"]\nlet trade_suspended_by_user = msg.payload[\"trade_suspended_by_user\"]\nlet multiplier = msg.payload[\"multiplier\"]\nlet shorting_enabled = msg.payload[\"shorting_enabled\"]\nlet equity = msg.payload[\"equity\"]\nlet last_equity = msg.payload[\"last_equity\"]\nlet long_market_value = msg.payload[\"long_market_value\"]\nlet short_market_value = msg.payload[\"short_market_value\"]\nlet initial_margin = msg.payload[\"initial_margin\"]\nlet maintenance_margin = msg.payload[\"maintenance_margin\"]\nlet last_maintenance_margin = msg.payload[\"last_maintenance_margin\"]\nlet sma = msg.payload[\"sma\"]\nlet daytrade_count = msg.payload[\"daytrade_count\"]\n\nnode.warn(\"PAPER Account Number: \" +account_number+ \" Balance:\" +equity)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "4ae0cae477d1eedf",
        "type": "split",
        "z": "e5fdee50b6957f68",
        "name": "Split array",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 580,
        "y": 300,
        "wires": [
            [
                "828768178d139528"
            ]
        ]
    },
    {
        "id": "828768178d139528",
        "type": "function",
        "z": "e5fdee50b6957f68",
        "name": "positions function",
        "func": "let asset_id = msg.payload[\"asset_id\"]\nlet symbol = msg.payload[\"symbol\"]\nlet exchange = msg.payload[\"exchange\"]\nlet asset_class = msg.payload[\"asset_class\"]\nlet asset_marginable = msg.payload[\"asset_marginable\"]\nlet qty = msg.payload[\"qty\"]\nlet avg_entry_price = msg.payload[\"avg_entry_price\"]\nlet side = msg.payload[\"side\"]\nlet market_value = msg.payload[\"market_value\"]\nlet cost_basis = msg.payload[\"cost_basis\"]\nlet unrealized_pl = msg.payload[\"unrealized_pl\"]\nlet unrealized_plpc = msg.payload[\"unrealized_plpc\"]\nlet unrealized_intraday_pl = msg.payload[\"unrealized_intraday_pl\"]\nlet unrealized_intraday_plpc = msg.payload[\"unrealized_intraday_plpc\"]\nlet current_price = msg.payload[\"current_price\"]\nlet lastday_price = msg.payload[\"lastday_price\"]\nlet change_today = msg.payload[\"change_today\"]\nlet qty_available = msg.payload[\"qty_available\"]\n\n    node.warn(\"Symbol: \" + symbol + \" Side: \" + side + \" Qty: \" + qty + \" Market Value: \" + market_value + \" Gain to date: \" + unrealized_pl + \" Pct Gain: \" +unrealized_plpc)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "a6e59423d56e8062",
        "type": "alpaca-order",
        "z": "e5fdee50b6957f68",
        "conf": "0c86a5f06a42b505",
        "x": 1070,
        "y": 840,
        "wires": [
            [
                "63c051d0457a6bd7"
            ]
        ]
    },
    {
        "id": "bf23c8652e0c2f53",
        "type": "alpaca-order",
        "z": "e5fdee50b6957f68",
        "conf": "0c86a5f06a42b505",
        "x": 570,
        "y": 660,
        "wires": [
            [
                "6fdc52bbca104203"
            ]
        ]
    },
    {
        "id": "c4d305b07bdc7493",
        "type": "alpaca-order",
        "z": "e5fdee50b6957f68",
        "conf": "0c86a5f06a42b505",
        "x": 570,
        "y": 700,
        "wires": [
            [
                "9e422b049f3a24b0"
            ]
        ]
    },
    {
        "id": "8fba3306e90602d6",
        "type": "alpaca-query-order",
        "z": "e5fdee50b6957f68",
        "conf": "0c86a5f06a42b505",
        "x": 543,
        "y": 498,
        "wires": [
            [
                "68d0f1ae170d07ca"
            ]
        ]
    },
    {
        "id": "2d99165681d6d34a",
        "type": "alpaca-account-query",
        "z": "e5fdee50b6957f68",
        "conf": "0c86a5f06a42b505",
        "x": 360,
        "y": 200,
        "wires": [
            [
                "418c2387d0ad7094"
            ]
        ]
    },
    {
        "id": "7da3e9e941531e6d",
        "type": "alpaca-account-query",
        "z": "e5fdee50b6957f68",
        "conf": "e535f42f1df1b25f",
        "x": 360,
        "y": 240,
        "wires": [
            [
                "ea3bb59b058ffefe"
            ]
        ]
    },
    {
        "id": "69f547a43fa964a7",
        "type": "alpaca-position-query",
        "z": "e5fdee50b6957f68",
        "conf": "0c86a5f06a42b505",
        "x": 370,
        "y": 300,
        "wires": [
            [
                "4ae0cae477d1eedf"
            ]
        ]
    },
    {
        "id": "caf5654c9ef80c66",
        "type": "alpaca-position-query",
        "z": "e5fdee50b6957f68",
        "conf": "0c86a5f06a42b505",
        "x": 370,
        "y": 840,
        "wires": [
            [
                "1f2e73e664d7da22"
            ]
        ]
    },
    {
        "id": "25c52a83265fafb5",
        "type": "alpaca-orders-close",
        "z": "e5fdee50b6957f68",
        "conf": "0c86a5f06a42b505",
        "name": "Close live orders",
        "x": 350,
        "y": 940,
        "wires": [
            [
                "b35432650d5e813c"
            ]
        ]
    },
    {
        "id": "0c86a5f06a42b505",
        "type": "alpaca-account",
        "name": "live",
        "keyId": "PK5NTIWS5NJ8S2MFN6QT",
        "paper": true
    },
    {
        "id": "e535f42f1df1b25f",
        "type": "alpaca-account",
        "name": "paper",
        "keyId": "PKMPL3H68OVJWU4AI6CE",
        "paper": true
    }
]