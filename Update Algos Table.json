[
    {
        "id": "b1a20b3e0b027fa0",
        "type": "tab",
        "label": "Update Algos Table",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cfb140b0cd5cc229",
        "type": "inject",
        "z": "b1a20b3e0b027fa0",
        "name": "Test queries",
        "props": [
            {
                "p": "query1",
                "v": "select * from algos ",
                "vt": "str"
            },
            {
                "p": "query",
                "v": "select * from algo_performance where symbol = 'SPY'",
                "vt": "str"
            },
            {
                "p": "query1",
                "v": "select * from tickers_paper",
                "vt": "str"
            },
            {
                "p": "query1",
                "v": "select count(*) from orders where account = 'paper'",
                "vt": "str"
            },
            {
                "p": "query1",
                "v": "select * from orders",
                "vt": "str"
            },
            {
                "p": "query1",
                "v": "delete from algos",
                "vt": "str"
            },
            {
                "p": "query1",
                "v": "update algo_performance set market_value = 2378.43, current = 2378.43, gain_today = 4.14, gain_alltime = -126.27, pctgain_today = 0.001743679163034, pctgain_alltime = -0.0504132231404959 where symbol = 'TDF';",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 390,
        "y": 40,
        "wires": [
            [
                "198d460a4744cd7b"
            ]
        ]
    },
    {
        "id": "198d460a4744cd7b",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 540,
        "y": 40,
        "wires": [
            [
                "ded8ac6f466c3489"
            ]
        ]
    },
    {
        "id": "ded8ac6f466c3489",
        "type": "debug",
        "z": "b1a20b3e0b027fa0",
        "name": "debug 325",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 40,
        "wires": []
    },
    {
        "id": "f6631ff6dd039c2a",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "get algo name",
        "func": "msg.query = \"select * from algos\"\n//node.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1100,
        "wires": [
            [
                "bb1206ca115590ef"
            ]
        ]
    },
    {
        "id": "bb1206ca115590ef",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 640,
        "y": 1100,
        "wires": [
            [
                "b162abf2b854ae1a"
            ]
        ]
    },
    {
        "id": "b162abf2b854ae1a",
        "type": "split",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 1100,
        "wires": [
            [
                "bb86e7f79cdcdd06"
            ]
        ]
    },
    {
        "id": "bb86e7f79cdcdd06",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "calculate profit for each algo",
        "func": "let name = msg.payload[\"algo_name\"]\nmsg.psize = msg.payload[\"portfolio_size\"]\nlet sql = \"select sum(profit) from algo_performance where algo_name = '\" + name + \"';\"\n//node.warn(sql)\nmsg.query = sql\nmsg.name = name\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1100,
        "wires": [
            [
                "77873ab3bcdd9766"
            ]
        ]
    },
    {
        "id": "77873ab3bcdd9766",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1160,
        "y": 1100,
        "wires": [
            [
                "b599a9e75e645ed2"
            ]
        ]
    },
    {
        "id": "b599a9e75e645ed2",
        "type": "split",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1290,
        "y": 1100,
        "wires": [
            [
                "6e32ffa8096e89b4"
            ]
        ]
    },
    {
        "id": "6e32ffa8096e89b4",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "update algos table",
        "func": "let name = msg.name\nlet profit = msg.payload[\"sum\"]\n\nif (profit == null) {\n    profit = 0;\n}\n\nmsg.profit = profit\n\nlet sql = \"update algos set gain_alltime = \" + profit + \"  where algo_name = '\" +name+ \"';\"\n//node.warn(sql)\nmsg.query = sql\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1160,
        "wires": [
            [
                "593c72bf0a166b6a"
            ]
        ]
    },
    {
        "id": "593c72bf0a166b6a",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 620,
        "y": 1160,
        "wires": [
            [
                "c6db5abb14b7c7b9"
            ]
        ]
    },
    {
        "id": "5ab3eca48054d450",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "update info_ratio",
        "func": "msg.query = \"update algos set info_ratio = (pctgain_alltime - pctbench_alltime);\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1160,
        "wires": [
            [
                "862e9946619732cd"
            ]
        ]
    },
    {
        "id": "862e9946619732cd",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1300,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "f21fff280bb54178",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "update orders from tickers_paper",
        "func": "msg.query = \"UPDATE orders SET portfolioname = tickers_paper.portfolioname FROM tickers_paper where orders.symbol = tickers_paper.symbol\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 240,
        "wires": [
            [
                "1ab5b780477f405d"
            ]
        ]
    },
    {
        "id": "9c9b1542a578ede8",
        "type": "inject",
        "z": "b1a20b3e0b027fa0",
        "name": "Every Min",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 240,
        "wires": [
            [
                "f21fff280bb54178"
            ]
        ]
    },
    {
        "id": "1ab5b780477f405d",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 560,
        "y": 240,
        "wires": [
            [
                "8bec6e25462af836"
            ]
        ]
    },
    {
        "id": "52f6459c5bf7c096",
        "type": "http in",
        "z": "b1a20b3e0b027fa0",
        "name": "/api/download_algos",
        "url": "/api/download_algos",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1520,
        "wires": [
            [
                "df7a32144d5507f9"
            ]
        ]
    },
    {
        "id": "b06077225e232cef",
        "type": "http response",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json",
            "Content-Disposition": "attachment; filename=\"output.csv\""
        },
        "x": 950,
        "y": 1520,
        "wires": []
    },
    {
        "id": "978f81a5fbd43f1d",
        "type": "csv",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": " ",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 670,
        "y": 1520,
        "wires": [
            [
                "0cfe446fd594a1fa"
            ]
        ]
    },
    {
        "id": "df7a32144d5507f9",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "export query",
        "func": "msg.query = \"select * from algos\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1520,
        "wires": [
            [
                "cf86cae8e76cc03d"
            ]
        ]
    },
    {
        "id": "0cfe446fd594a1fa",
        "type": "file",
        "z": "b1a20b3e0b027fa0",
        "name": "write report",
        "filename": "/data/store/output.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 810,
        "y": 1520,
        "wires": [
            [
                "b06077225e232cef"
            ]
        ]
    },
    {
        "id": "cf86cae8e76cc03d",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 540,
        "y": 1520,
        "wires": [
            [
                "978f81a5fbd43f1d"
            ]
        ]
    },
    {
        "id": "8698703640b5d097",
        "type": "http in",
        "z": "b1a20b3e0b027fa0",
        "name": "/api/download_orders",
        "url": "/api/download_orders",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1580,
        "wires": [
            [
                "a1a42ce3923bb99a"
            ]
        ]
    },
    {
        "id": "15384bc38a48aa7d",
        "type": "http response",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json",
            "Content-Disposition": "attachment; filename=\"output.csv\""
        },
        "x": 950,
        "y": 1580,
        "wires": []
    },
    {
        "id": "4b71975845122440",
        "type": "csv",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": " ",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 670,
        "y": 1580,
        "wires": [
            [
                "993f854ccbef0ac7"
            ]
        ]
    },
    {
        "id": "a1a42ce3923bb99a",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "export query",
        "func": "msg.query = \"select * from orders\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1580,
        "wires": [
            [
                "a44a94b3807ca560"
            ]
        ]
    },
    {
        "id": "993f854ccbef0ac7",
        "type": "file",
        "z": "b1a20b3e0b027fa0",
        "name": "write report",
        "filename": "/data/store/output.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 810,
        "y": 1580,
        "wires": [
            [
                "15384bc38a48aa7d"
            ]
        ]
    },
    {
        "id": "a44a94b3807ca560",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 540,
        "y": 1580,
        "wires": [
            [
                "4b71975845122440"
            ]
        ]
    },
    {
        "id": "d69c74548ce837fa",
        "type": "http in",
        "z": "b1a20b3e0b027fa0",
        "name": "/api/download_tickers_paper",
        "url": "/api/download_tickers_paper",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1640,
        "wires": [
            [
                "dfbaeeca8d10a0fa"
            ]
        ]
    },
    {
        "id": "11e63a58368d7c3d",
        "type": "http response",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json",
            "Content-Disposition": "attachment; filename=\"output.csv\""
        },
        "x": 950,
        "y": 1640,
        "wires": []
    },
    {
        "id": "40c6e435c3931290",
        "type": "csv",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": " ",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 670,
        "y": 1640,
        "wires": [
            [
                "04e9ec728dd313db"
            ]
        ]
    },
    {
        "id": "dfbaeeca8d10a0fa",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "export query",
        "func": "msg.query = \"select * from tickers_paper\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1640,
        "wires": [
            [
                "d251cd37a8514b31"
            ]
        ]
    },
    {
        "id": "04e9ec728dd313db",
        "type": "file",
        "z": "b1a20b3e0b027fa0",
        "name": "write report",
        "filename": "/data/store/output.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 810,
        "y": 1640,
        "wires": [
            [
                "11e63a58368d7c3d"
            ]
        ]
    },
    {
        "id": "d251cd37a8514b31",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 540,
        "y": 1640,
        "wires": [
            [
                "40c6e435c3931290"
            ]
        ]
    },
    {
        "id": "918672173e999b54",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "add portfolioname to orders table",
        "func": "msg.query = \"alter table orders add column portfolioname VARCHAR(100)\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 140,
        "wires": [
            [
                "569667b23ae7c690"
            ]
        ]
    },
    {
        "id": "a465bd9f583f1523",
        "type": "inject",
        "z": "b1a20b3e0b027fa0",
        "name": "GO",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "918672173e999b54"
            ]
        ]
    },
    {
        "id": "569667b23ae7c690",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 560,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "f0f1e27320d35c99",
        "type": "comment",
        "z": "b1a20b3e0b027fa0",
        "name": "Update orders table",
        "info": "",
        "x": 130,
        "y": 60,
        "wires": []
    },
    {
        "id": "a0065c2190796ee1",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 420,
        "y": 360,
        "wires": [
            [
                "706e38a74359db4f"
            ]
        ]
    },
    {
        "id": "706e38a74359db4f",
        "type": "split",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 550,
        "y": 360,
        "wires": [
            [
                "2c29af8112788bf1"
            ]
        ]
    },
    {
        "id": "2c29af8112788bf1",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "get algo name",
        "func": "msg.id = msg.payload[\"id\"]\nmsg.name = msg.payload[\"algo_name\"]\nmsg.type = msg.payload[\"algo_type\"]\nmsg.query = \"select distinct symbol from orders where portfolioname = '\" +msg.name+ \"';\"\n//node.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 360,
        "wires": [
            [
                "0b56c616051b10f0"
            ]
        ]
    },
    {
        "id": "0b56c616051b10f0",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 860,
        "y": 360,
        "wires": [
            [
                "6a4bdef197dd9330"
            ]
        ]
    },
    {
        "id": "c89dd5c041550b79",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "get sum buys orders",
        "func": "let symbol = msg.payload[\"symbol\"]\n\nlet sql = \"select sum(filled_qty * filled_avg_price) from orders where symbol = '\" + symbol + \"' and side = 'buy' and filled_qty > 0;\"\n//node.warn(sql)\nmsg.query = sql\nmsg.ticker = symbol\nreturn msg;\n//}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 360,
        "wires": [
            [
                "a5beb791812c9894"
            ]
        ]
    },
    {
        "id": "a5beb791812c9894",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 300,
        "y": 420,
        "wires": [
            [
                "798e87a73fd01b27"
            ]
        ]
    },
    {
        "id": "798e87a73fd01b27",
        "type": "split",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 430,
        "y": 420,
        "wires": [
            [
                "edb0874315a47bd4"
            ]
        ]
    },
    {
        "id": "6a4bdef197dd9330",
        "type": "split",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 990,
        "y": 360,
        "wires": [
            [
                "c89dd5c041550b79"
            ]
        ]
    },
    {
        "id": "edb0874315a47bd4",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "get sum sell orders",
        "func": "let symbol = msg.ticker\n\nlet sql = \"select sum(filled_qty * filled_avg_price) from orders where symbol = '\" + symbol + \"' and side = 'sell' and filled_qty > 0;\"\n//node.warn(sql)\nmsg.query = sql\nmsg.buys = msg.payload[\"sum\"]\nmsg.ticker = symbol\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 420,
        "wires": [
            [
                "5d2650fef369a0a1"
            ]
        ]
    },
    {
        "id": "5d2650fef369a0a1",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 420,
        "wires": [
            [
                "faa1e935cb793a2a"
            ]
        ]
    },
    {
        "id": "a479e52ee18c289b",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "insert into algo_performance",
        "func": "let sells = msg.payload[\"sum\"]\nlet id = msg.id\nlet name = msg.name\nlet type = msg.type\n\nlet symbol = msg.ticker\nlet buys = msg.buys\nbuys = +buys\nsells = +sells\nlet profit = (buys - sells) \nlet sql = \"insert into algo_performance (id, symbol, buys, sells, profit, algo_name, type) values (\" +id+ \",'\" +symbol+ \"',\" +buys+ \",\" +sells+ \",\" +profit+ \",'\" +name+ \"','\" +type+ \"');\" \n//node.warn(sql)\nmsg.query = sql\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 420,
        "wires": [
            [
                "8c0d707d8b468a49"
            ]
        ]
    },
    {
        "id": "faa1e935cb793a2a",
        "type": "split",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 910,
        "y": 420,
        "wires": [
            [
                "a479e52ee18c289b"
            ]
        ]
    },
    {
        "id": "8c0d707d8b468a49",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1300,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "bf58beebe84f19ef",
        "type": "inject",
        "z": "b1a20b3e0b027fa0",
        "name": "Every min",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 300,
        "wires": [
            [
                "bfa9943e3798b868"
            ]
        ]
    },
    {
        "id": "bfa9943e3798b868",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "truncate algo_performance",
        "func": "msg.query = \"truncate algo_performance\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 300,
        "wires": [
            [
                "cc44e148a67e1692"
            ]
        ]
    },
    {
        "id": "cc44e148a67e1692",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 520,
        "y": 300,
        "wires": [
            [
                "b768a17b40ab3215"
            ]
        ]
    },
    {
        "id": "7ee0662ea8469257",
        "type": "comment",
        "z": "b1a20b3e0b027fa0",
        "name": "update algo_performance ",
        "info": "",
        "x": 170,
        "y": 480,
        "wires": []
    },
    {
        "id": "adcc6737fbd015ca",
        "type": "comment",
        "z": "b1a20b3e0b027fa0",
        "name": "fill intraday_buy_sell table with values",
        "info": "",
        "x": 170,
        "y": 200,
        "wires": []
    },
    {
        "id": "e69b0df55b1cf732",
        "type": "inject",
        "z": "b1a20b3e0b027fa0",
        "name": "Update Live",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 520,
        "wires": [
            [
                "730304d1c463b136"
            ]
        ]
    },
    {
        "id": "3a38dd5c17d648ca",
        "type": "comment",
        "z": "b1a20b3e0b027fa0",
        "name": "calculate profit for each ticker",
        "info": "",
        "x": 160,
        "y": 760,
        "wires": []
    },
    {
        "id": "4e9296fceb8199da",
        "type": "inject",
        "z": "b1a20b3e0b027fa0",
        "name": "Every Min",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 800,
        "wires": [
            [
                "37631061d9d83537"
            ]
        ]
    },
    {
        "id": "922a03e108990d1a",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "calculate profit",
        "func": "let sql = \"update algo_performance set profit = (sells + current) - buys;\"\n//node.warn(sql)\nmsg.query = sql\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 800,
        "wires": [
            [
                "6cb37f42c158b64e"
            ]
        ]
    },
    {
        "id": "6cb37f42c158b64e",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 620,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "e7306be1fec24c68",
        "type": "comment",
        "z": "b1a20b3e0b027fa0",
        "name": "calculate gain_alltime for algo",
        "info": "",
        "x": 160,
        "y": 1040,
        "wires": []
    },
    {
        "id": "8bec6e25462af836",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "update orders from tickers_paper",
        "func": "msg.query = \"UPDATE orders SET portfolioname = tickers_live.portfolioname FROM tickers_live where orders.symbol = tickers_live.symbol\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 240,
        "wires": [
            [
                "4d8f5fa9b83500bb"
            ]
        ]
    },
    {
        "id": "4d8f5fa9b83500bb",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1000,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c6db5abb14b7c7b9",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "update algos table",
        "func": "let gain_alltime = msg.profit\nlet gain_today = msg.profit\nlet total_value = msg.psize\nlet id = msg.name\nlet pctgainalltime = 0\nlet pctgaintoday = 0\n\nif (total_value > 0){\n     pctgainalltime = (gain_alltime / total_value) * 100\n     pctgaintoday = (gain_today / total_value) * 100\n}\n\n\nmsg.query = \"update algos set pctgain_today = \" + pctgaintoday + \", pctgain_alltime = \" +pctgainalltime+ \" where algo_name = '\" + id + \"';\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1160,
        "wires": [
            [
                "3ecf55489369bce4"
            ]
        ]
    },
    {
        "id": "3ecf55489369bce4",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 960,
        "y": 1160,
        "wires": [
            [
                "5ab3eca48054d450"
            ]
        ]
    },
    {
        "id": "cf201d289f72c286",
        "type": "comment",
        "z": "b1a20b3e0b027fa0",
        "name": "calculate benchmark changes",
        "info": "",
        "x": 160,
        "y": 880,
        "wires": []
    },
    {
        "id": "f75e36b5c4b1df9b",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "get spy values",
        "func": "let spy_current = global.get(\"spy_current\")\nlet spy_close = global.get(\"spy_close\")\nlet spy_start = global.get(\"spy_start\")\n//node.warn(\"Current: \" +spy_current+ \" Close: \" +spy_close+ \" Start: \" +spy_start)\nmsg.current = spy_current\nmsg.close = spy_close\nmsg.start = spy_start\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 940,
        "wires": [
            [
                "35db042d6c625ae0"
            ]
        ]
    },
    {
        "id": "35db042d6c625ae0",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "get algo name",
        "func": "msg.query = \"select * from algos\"\n//node.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 940,
        "wires": [
            [
                "15cd3763cfbeb043"
            ]
        ]
    },
    {
        "id": "15cd3763cfbeb043",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 800,
        "y": 940,
        "wires": [
            [
                "75313f3a0ceb2023"
            ]
        ]
    },
    {
        "id": "75313f3a0ceb2023",
        "type": "split",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 930,
        "y": 940,
        "wires": [
            [
                "0124e68dd545644d"
            ]
        ]
    },
    {
        "id": "0124e68dd545644d",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "calculate benchmark changes",
        "func": "let name = msg.payload[\"algo_name\"]\nlet bench = msg.payload[\"benchmark_start\"]\nlet spy_current = msg.current \nlet spy_close = msg.close \nlet spy_start = msg.start \n\n//node.warn(\"Name: \" +name+ \" Benchmark: \" +bench+ \" Current: \" + spy_current + \" Close: \" + spy_close + \" Start: \" + spy_start)\n\nlet change_today = spy_current - spy_close\nlet change = spy_current - bench\n\nlet pctchange_today = (change_today / bench) * 100\nlet pctchange = (change / bench) * 100\n//node.warn(\"Name: \" + name + \" Change Today: \" + change_today + \" Change Alltime: \" + change+ \" Pct Change Today: \" +pctchange_today+ \" Pct Change Alltime: \" +pctchange)\n\nlet sql = \"update algos set pctbench_today = \" +pctchange_today+ \", pctbench_alltime = \" +pctchange+ \" where algo_name = '\" + name + \"';\"\n//node.warn(sql)\nmsg.query = sql\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 940,
        "wires": [
            [
                "9544d90b7cf19987"
            ]
        ]
    },
    {
        "id": "9544d90b7cf19987",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1340,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "ce18e1f862c86c62",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "create table algo_performance",
        "func": "let sql = \"create table IF NOT EXISTS algo_performance (id BIGINT, algo_name VARCHAR(100), type VARCHAR(10), symbol VARCHAR(10), market_value FLOAT, gain_today FLOAT, gain_alltime FLOAT, pctgain_today FLOAT, pctgain_alltime FLOAT, buys FLOAT, sells FLOAT, current FLOAT, profit FLOAT);\"\nnode.warn(sql)\nmsg.query = sql\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 100,
        "wires": [
            [
                "70c440ae4e7b2f9e"
            ]
        ]
    },
    {
        "id": "a43eebb1783079ff",
        "type": "inject",
        "z": "b1a20b3e0b027fa0",
        "name": "GO",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "ce18e1f862c86c62"
            ]
        ]
    },
    {
        "id": "70c440ae4e7b2f9e",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 540,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "5607619875bf2f7d",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "calculate gain_today",
        "func": "let name = msg.name\nlet sql = \"select sum(gain_today) as a, sum(market_value) as b from algo_performance where algo_name = '\" +name+ \"';\"\n//node.warn(sql)\nmsg.query = sql\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1420,
        "wires": [
            [
                "df2e9d3ddbc85d85"
            ]
        ]
    },
    {
        "id": "7b729732823e42c9",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "get algo name",
        "func": "msg.query = \"select * from algos\"\n//node.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1360,
        "wires": [
            [
                "858c8c69916174c8"
            ]
        ]
    },
    {
        "id": "858c8c69916174c8",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 640,
        "y": 1360,
        "wires": [
            [
                "95e5cef69dfbb6a9"
            ]
        ]
    },
    {
        "id": "95e5cef69dfbb6a9",
        "type": "split",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 1360,
        "wires": [
            [
                "16f4b4c454de40bd"
            ]
        ]
    },
    {
        "id": "16f4b4c454de40bd",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "get name",
        "func": "let name = msg.payload[\"algo_name\"]\nmsg.name = name\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1360,
        "wires": [
            [
                "5607619875bf2f7d"
            ]
        ]
    },
    {
        "id": "9bc467f247fb8af1",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "update interday algos current day values",
        "func": "let name = msg.name\nlet gain_today = msg.payload[\"a\"]\nlet market_value = msg.payload[\"b\"]\nlet pctgain_today = 0\n\nif (gain_today == null) {\n    gain_today = 0;\n}\n\nif (market_value == null) {\n    market_value = 0;\n}\n\nif ( market_value > 0){\n    pctgain_today = (gain_today / market_value) }\n    \n\nlet sql = \"update algos set gain_today = \" +gain_today+ \", pctgain_today = \" +pctgain_today+ \" where algo_name = '\" +name+ \"';\"\n//node.warn(sql)\nmsg.query = sql\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1420,
        "wires": [
            [
                "8f12e5c75666c84b"
            ]
        ]
    },
    {
        "id": "ada6be607c09e585",
        "type": "split",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 1420,
        "wires": [
            [
                "9bc467f247fb8af1"
            ]
        ]
    },
    {
        "id": "df2e9d3ddbc85d85",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 640,
        "y": 1420,
        "wires": [
            [
                "ada6be607c09e585"
            ]
        ]
    },
    {
        "id": "8f12e5c75666c84b",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "b593ec4a4a600bd2",
        "type": "comment",
        "z": "b1a20b3e0b027fa0",
        "name": "calculate gain_today for algo",
        "info": "",
        "x": 160,
        "y": 1300,
        "wires": []
    },
    {
        "id": "e53990165cf61547",
        "type": "inject",
        "z": "b1a20b3e0b027fa0",
        "name": "Update Paper",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 560,
        "wires": [
            [
                "bfea6933a61bc7f4"
            ]
        ]
    },
    {
        "id": "d1b918ae4722a45a",
        "type": "alpaca-position-query",
        "z": "b1a20b3e0b027fa0",
        "conf": "0c86a5f06a42b505",
        "x": 490,
        "y": 520,
        "wires": [
            [
                "5da4413ac0b068f9"
            ]
        ]
    },
    {
        "id": "5da4413ac0b068f9",
        "type": "split",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 670,
        "y": 520,
        "wires": [
            [
                "2e22a3b30e7d74d3"
            ]
        ]
    },
    {
        "id": "2e22a3b30e7d74d3",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "Store values in algo_performance",
        "func": "//let id = msg.id\nlet ticker = msg.payload[\"symbol\"]\nlet market_value = msg.payload[\"market_value\"]\nlet current = msg.payload[\"market_value\"]\nlet gain_today = msg.payload[\"unrealized_intraday_pl\"]\nlet gain_alltime = msg.payload[\"unrealized_pl\"]\nlet pctgain_today = msg.payload[\"unrealized_intraday_plpc\"]\nlet pctgain_alltime = msg.payload[\"unrealized_plpc\"]\n\nif (ticker == 'SPY') {\n\nlet sql = \"update algo_performance set market_value = \" +market_value+ \", current = \" +current+ \", gain_today = \" +gain_today+ \",\"\nsql += \" gain_alltime = \" +gain_alltime+ \", pctgain_today = \" + pctgain_today + \", pctgain_alltime = \" +pctgain_alltime+  \" where symbol = '\" +ticker+ \"';\"\n//node.warn(sql)\nmsg.query = sql\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 520,
        "wires": [
            [
                "256a42d767a3b71b"
            ]
        ]
    },
    {
        "id": "256a42d767a3b71b",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1100,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "faf33fac7440553b",
        "type": "alpaca-position-query",
        "z": "b1a20b3e0b027fa0",
        "conf": "e535f42f1df1b25f",
        "x": 490,
        "y": 560,
        "wires": [
            [
                "111eded5140c890a"
            ]
        ]
    },
    {
        "id": "111eded5140c890a",
        "type": "split",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 670,
        "y": 560,
        "wires": [
            [
                "e0acb74e4fdb2de9"
            ]
        ]
    },
    {
        "id": "e0acb74e4fdb2de9",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "Store values in algo_performance",
        "func": "//let id = msg.id\nlet ticker = msg.payload[\"symbol\"]\nlet market_value = msg.payload[\"market_value\"]\nlet current = msg.payload[\"market_value\"]\nlet gain_today = msg.payload[\"unrealized_intraday_pl\"]\nlet gain_alltime = msg.payload[\"unrealized_pl\"]\nlet pctgain_today = msg.payload[\"unrealized_intraday_plpc\"]\nlet pctgain_alltime = msg.payload[\"unrealized_plpc\"]\n\nlet sql = \"update algo_performance set market_value = \" +market_value+ \", current = \" +current+ \", gain_today = \" +gain_today+ \",\"\nsql += \" gain_alltime = \" +gain_alltime+ \", pctgain_today = \" + pctgain_today + \", pctgain_alltime = \" +pctgain_alltime+  \" where symbol = '\" +ticker+ \"';\"\n//node.warn(sql)\nmsg.query = sql\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 560,
        "wires": [
            [
                "ab0404a9439d88ea"
            ]
        ]
    },
    {
        "id": "ab0404a9439d88ea",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1100,
        "y": 560,
        "wires": [
            [
                "a5d07d9eebc339f7"
            ]
        ]
    },
    {
        "id": "730304d1c463b136",
        "type": "delay",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 520,
        "wires": [
            [
                "d1b918ae4722a45a"
            ]
        ]
    },
    {
        "id": "bfea6933a61bc7f4",
        "type": "delay",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 560,
        "wires": [
            [
                "faf33fac7440553b"
            ]
        ]
    },
    {
        "id": "37631061d9d83537",
        "type": "delay",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 800,
        "wires": [
            [
                "922a03e108990d1a"
            ]
        ]
    },
    {
        "id": "c16a9a2129eeaff0",
        "type": "inject",
        "z": "b1a20b3e0b027fa0",
        "name": "Every Min",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 1100,
        "wires": [
            [
                "c63528d1103baf2e"
            ]
        ]
    },
    {
        "id": "c63528d1103baf2e",
        "type": "delay",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 1100,
        "wires": [
            [
                "f6631ff6dd039c2a"
            ]
        ]
    },
    {
        "id": "de7f1d11d74b2d84",
        "type": "inject",
        "z": "b1a20b3e0b027fa0",
        "name": "Every Min",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 940,
        "wires": [
            [
                "c63e3d5e342e1eac"
            ]
        ]
    },
    {
        "id": "c63e3d5e342e1eac",
        "type": "delay",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 940,
        "wires": [
            [
                "f75e36b5c4b1df9b"
            ]
        ]
    },
    {
        "id": "0c9aaf3202c39281",
        "type": "inject",
        "z": "b1a20b3e0b027fa0",
        "name": "Every Min",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 1360,
        "wires": [
            [
                "b94d362c60289bff"
            ]
        ]
    },
    {
        "id": "b94d362c60289bff",
        "type": "delay",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 280,
        "y": 1360,
        "wires": [
            [
                "7b729732823e42c9"
            ]
        ]
    },
    {
        "id": "1402e7952a5fba53",
        "type": "http in",
        "z": "b1a20b3e0b027fa0",
        "name": "/api/download_algo_performance",
        "url": "/api/download_algo_performance",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1700,
        "wires": [
            [
                "971caa0b67cf778e"
            ]
        ]
    },
    {
        "id": "6e911596caa58320",
        "type": "http response",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json",
            "Content-Disposition": "attachment; filename=\"output.csv\""
        },
        "x": 950,
        "y": 1700,
        "wires": []
    },
    {
        "id": "032bfccf313da29f",
        "type": "csv",
        "z": "b1a20b3e0b027fa0",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": " ",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 670,
        "y": 1700,
        "wires": [
            [
                "01c3746522f5808e"
            ]
        ]
    },
    {
        "id": "971caa0b67cf778e",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "export query",
        "func": "msg.query = \"select * from algo_performance\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1700,
        "wires": [
            [
                "0e4c1ee9830d96c2"
            ]
        ]
    },
    {
        "id": "01c3746522f5808e",
        "type": "file",
        "z": "b1a20b3e0b027fa0",
        "name": "write report",
        "filename": "/data/store/output.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 810,
        "y": 1700,
        "wires": [
            [
                "6e911596caa58320"
            ]
        ]
    },
    {
        "id": "0e4c1ee9830d96c2",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 540,
        "y": 1700,
        "wires": [
            [
                "032bfccf313da29f"
            ]
        ]
    },
    {
        "id": "b768a17b40ab3215",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "get algos",
        "func": "msg.query = \"select * from algos\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 360,
        "wires": [
            [
                "a0065c2190796ee1"
            ]
        ]
    },
    {
        "id": "e2667f02cafd05d4",
        "type": "comment",
        "z": "b1a20b3e0b027fa0",
        "name": "correct for errors in orders table. Use only with pta accounts.",
        "info": "",
        "x": 500,
        "y": 620,
        "wires": []
    },
    {
        "id": "a5d07d9eebc339f7",
        "type": "function",
        "z": "b1a20b3e0b027fa0",
        "name": "update SPY",
        "func": "msg.query = \"update algo_performance set market_value = (market_value + 40989), current =  (market_value + 40989) where symbol = 'SPY';\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 660,
        "wires": [
            [
                "b77fa97219b9350d"
            ]
        ]
    },
    {
        "id": "b77fa97219b9350d",
        "type": "postgresql",
        "z": "b1a20b3e0b027fa0",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 500,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "7455395cf269fb2b",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "docker",
        "userFieldType": "str",
        "password": "docker",
        "passwordFieldType": "str"
    },
    {
        "id": "0c86a5f06a42b505",
        "type": "alpaca-account",
        "name": "live",
        "keyId": "PKA7ZL2KR9705ERT2BCO",
        "paper": true
    },
    {
        "id": "e535f42f1df1b25f",
        "type": "alpaca-account",
        "name": "paper",
        "keyId": "PKA7ZL2KR9705ERT2BCO",
        "paper": true
    }
]