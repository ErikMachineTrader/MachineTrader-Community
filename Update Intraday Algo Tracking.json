[
    {
        "id": "97de01cdac696474",
        "type": "tab",
        "label": "Update Intraday Algos",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5bb1b9aa6f0a1bd1",
        "type": "comment",
        "z": "97de01cdac696474",
        "name": "Get totals from orders ALLTIME",
        "info": "\n---\n\n",
        "x": 210,
        "y": 120,
        "wires": []
    },
    {
        "id": "6feb72f88e1a4cc2",
        "type": "http in",
        "z": "97de01cdac696474",
        "name": "/api/download_orders",
        "url": "/api/download_orders",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 880,
        "wires": [
            [
                "bf04a302158c3770"
            ]
        ]
    },
    {
        "id": "fb74925e7f8a8ef7",
        "type": "http response",
        "z": "97de01cdac696474",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json",
            "Content-Disposition": "attachment; filename=\"output.csv\""
        },
        "x": 950,
        "y": 880,
        "wires": []
    },
    {
        "id": "56dd906d53ba1cbf",
        "type": "csv",
        "z": "97de01cdac696474",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": " ",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 670,
        "y": 880,
        "wires": [
            [
                "354017a0021d98b1"
            ]
        ]
    },
    {
        "id": "bf04a302158c3770",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "export query",
        "func": "msg.query = \"select * from orders\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 880,
        "wires": [
            [
                "138bd51666721213"
            ]
        ]
    },
    {
        "id": "354017a0021d98b1",
        "type": "file",
        "z": "97de01cdac696474",
        "name": "write report",
        "filename": "/data/store/output.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 810,
        "y": 880,
        "wires": [
            [
                "fb74925e7f8a8ef7"
            ]
        ]
    },
    {
        "id": "138bd51666721213",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 540,
        "y": 880,
        "wires": [
            [
                "56dd906d53ba1cbf"
            ]
        ]
    },
    {
        "id": "cee63dbac9958156",
        "type": "inject",
        "z": "97de01cdac696474",
        "name": "Every min",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "db6f20303c8595a8",
                "601f865ad466feae",
                "1c2eb4495a6b00c4",
                "af4dd7eb83790bab"
            ]
        ]
    },
    {
        "id": "29f38ac2ab49b7e9",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "get algo name",
        "func": "msg.query = \"select * from algos where  algo_type = 'intraday'\"\n//node.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 240,
        "wires": [
            [
                "09bcc035963611fb"
            ]
        ]
    },
    {
        "id": "09bcc035963611fb",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 240,
        "wires": [
            [
                "562d42f05bd86afe"
            ]
        ]
    },
    {
        "id": "562d42f05bd86afe",
        "type": "split",
        "z": "97de01cdac696474",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 810,
        "y": 240,
        "wires": [
            [
                "2c7a6d82cc0ce8fa"
            ]
        ]
    },
    {
        "id": "601f865ad466feae",
        "type": "delay",
        "z": "97de01cdac696474",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 240,
        "wires": [
            [
                "29f38ac2ab49b7e9"
            ]
        ]
    },
    {
        "id": "2c7a6d82cc0ce8fa",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "get algo name",
        "func": "msg.name = msg.payload[\"algo_name\"]\nmsg.query = \"select * from tickers_paper where portfolioname = '\" +msg.name+ \"';\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 240,
        "wires": [
            [
                "b8ed14fa2c76fcde"
            ]
        ]
    },
    {
        "id": "b8ed14fa2c76fcde",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1120,
        "y": 240,
        "wires": [
            [
                "e3d5e00fd4e3360b"
            ]
        ]
    },
    {
        "id": "e3d5e00fd4e3360b",
        "type": "split",
        "z": "97de01cdac696474",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 330,
        "y": 300,
        "wires": [
            [
                "d817d8cfd51d71ab"
            ]
        ]
    },
    {
        "id": "d817d8cfd51d71ab",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "get sum buys orders",
        "func": "let symbol = msg.payload[\"symbol\"]\n\n//let dt = new Date().toISOString().slice(0, 10);\nlet dt = '2023-01-11'\n//node.warn(dt);\nlet sql = \"select sum(filled_qty * filled_avg_price) from orders where symbol = '\" + symbol + \"' and side = 'buy' and created_at > '\" + dt + \"%';\"\n//node.warn(sql)\nmsg.query = sql\nmsg.symbol = symbol\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 300,
        "wires": [
            [
                "c66bf65e54190eb3"
            ]
        ]
    },
    {
        "id": "c66bf65e54190eb3",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 300,
        "wires": [
            [
                "b248c1c985cb1813"
            ]
        ]
    },
    {
        "id": "41e1f6583ea043e0",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "insert buys",
        "func": "let symbol = msg.symbol\nlet name = msg.name\nlet buys = msg.payload[\"sum\"]\nlet current = 0\nlet sells = 0\nbuys = +buys\n\nif (buys > 0){\nlet sql = \"insert into intraday_buy_sell (account, algo_name, symbol, buys, sells, current) values \"\n    sql += \"('paper', '\" + name + \"', '\" + symbol + \"','\" + buys + \"','\" +sells+ \"','\" +current+ \"');\"\n//node.warn(sql)\nmsg.query = sql\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 300,
        "wires": [
            [
                "2a40d3f957a0ac39"
            ]
        ]
    },
    {
        "id": "b248c1c985cb1813",
        "type": "split",
        "z": "97de01cdac696474",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 810,
        "y": 300,
        "wires": [
            [
                "41e1f6583ea043e0"
            ]
        ]
    },
    {
        "id": "db6f20303c8595a8",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "truncate intraday_buy_sell",
        "func": "msg.query = \"truncate intraday_buy_sell\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 180,
        "wires": [
            [
                "a623e28ba6acd146"
            ]
        ]
    },
    {
        "id": "a623e28ba6acd146",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 600,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "2a40d3f957a0ac39",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1120,
        "y": 300,
        "wires": [
            [
                "9c3c1a1b7650eb98"
            ]
        ]
    },
    {
        "id": "9c3c1a1b7650eb98",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "get sum sells",
        "func": "let symbol = msg.symbol\nlet dt = '2023-01-11'\n//node.warn(dt);\nlet sql = \"select sum(filled_qty * filled_avg_price) from orders where symbol = '\" + symbol + \"' and side = 'sell' and created_at > '\" + dt + \"%';\"\n//node.warn(sql)\nmsg.query = sql\nmsg.symbol = symbol\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 360,
        "wires": [
            [
                "21e74167fe7b6571"
            ]
        ]
    },
    {
        "id": "21e74167fe7b6571",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 560,
        "y": 360,
        "wires": [
            [
                "50ef9942d887974e"
            ]
        ]
    },
    {
        "id": "e8c689b9b32bd69b",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "update sells",
        "func": "let symbol = msg.symbol\nlet name = msg.name\nlet strategy = msg.strategy_type\nlet sells = msg.payload[\"sum\"]\nsells = +sells\n\nif (sells > 0){\nlet sql = \"update intraday_buy_sell set sells = \" +sells+ \", type = '\" +strategy+ \"' where symbol = '\" +symbol+ \"';\"\n//node.warn(sql)\nmsg.query = sql\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 360,
        "wires": [
            [
                "10ef187f4001c8c8"
            ]
        ]
    },
    {
        "id": "50ef9942d887974e",
        "type": "split",
        "z": "97de01cdac696474",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 360,
        "wires": [
            [
                "e8c689b9b32bd69b"
            ]
        ]
    },
    {
        "id": "10ef187f4001c8c8",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 980,
        "y": 360,
        "wires": [
            [
                "55f333c8568a410f"
            ]
        ]
    },
    {
        "id": "55f333c8568a410f",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "select from positions",
        "func": "let symbol = msg.symbol\nlet sql = \"select * from positions where symbol = '\" +symbol+ \"' and account = 'paper';\"\nmsg.query = sql\n//node.warn(sql)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 360,
        "wires": [
            [
                "db1dca5fc40440ce"
            ]
        ]
    },
    {
        "id": "db1dca5fc40440ce",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 400,
        "y": 420,
        "wires": [
            [
                "80510a118eebfcca"
            ]
        ]
    },
    {
        "id": "566d3d75cc1b2d73",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "update intraday_buy_sell",
        "func": "let current = 0\n\nlet symbol = msg.symbol\ncurrent = msg.payload[\"market_value\"]\n\nif (current == null) {\n    current = 0;\n}\n\n\nlet sql = \"update intraday_buy_sell set current = \" +current+ \" where symbol = '\" +symbol+ \"';\"\n//node.warn(sql)\nmsg.query = sql\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 420,
        "wires": [
            [
                "127b8588adb9faeb"
            ]
        ]
    },
    {
        "id": "80510a118eebfcca",
        "type": "split",
        "z": "97de01cdac696474",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 550,
        "y": 420,
        "wires": [
            [
                "566d3d75cc1b2d73"
            ]
        ]
    },
    {
        "id": "9001e2b8637c1cbe",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "update ",
        "func": "//let sql = \"update intraday_buy_sell set profit = buys - sells\"\n//let sql = \"select * from intraday_buy_sell where symbol = 'SPY'\"\n//let sql = \"select * from algos\"\n//let sql = \"select * from tickers_paper\"\n//let sql = \"update algos set algo_type = 'intraday'\"\n//let sql = \"select * from orders_all where symbol = 'SPY'\"\n//let sql = \"select * from orders_all\"\nlet sql = \"select * from intraday_buy_sell\"\n//let sql = \"delete  from algos\"\nnode.warn(sql)\nmsg.query = sql\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 820,
        "wires": [
            [
                "00fdfe6dc2d67652"
            ]
        ]
    },
    {
        "id": "6a5c7d6475b75ab1",
        "type": "inject",
        "z": "97de01cdac696474",
        "name": "GO",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 820,
        "wires": [
            [
                "9001e2b8637c1cbe"
            ]
        ]
    },
    {
        "id": "00fdfe6dc2d67652",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 420,
        "y": 820,
        "wires": [
            [
                "13d92a70e9ceb627"
            ]
        ]
    },
    {
        "id": "13d92a70e9ceb627",
        "type": "debug",
        "z": "97de01cdac696474",
        "name": "debug 321",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 820,
        "wires": []
    },
    {
        "id": "26bfe960a3e6279d",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "get algo name",
        "func": "msg.query = \"select * from algos where  algo_type = 'intraday'\"\n//node.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 540,
        "wires": [
            [
                "ae97da21c0bd93ca"
            ]
        ]
    },
    {
        "id": "ae97da21c0bd93ca",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 880,
        "y": 540,
        "wires": [
            [
                "14b64b1e58d41f0a"
            ]
        ]
    },
    {
        "id": "14b64b1e58d41f0a",
        "type": "split",
        "z": "97de01cdac696474",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1010,
        "y": 540,
        "wires": [
            [
                "f96ba7a9092b680f"
            ]
        ]
    },
    {
        "id": "1c2eb4495a6b00c4",
        "type": "delay",
        "z": "97de01cdac696474",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 200,
        "y": 540,
        "wires": [
            [
                "cab5d6e5dfd7a21a"
            ]
        ]
    },
    {
        "id": "f96ba7a9092b680f",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "get algo name",
        "func": "let name = msg.payload[\"algo_name\"]\nlet psize = msg.payload[\"algo_name\"]\nlet sql = \"select sum(profit) from intraday_buy_sell where algo_name = '\" + name + \"';\"\n//node.warn(sql)\nmsg.query = sql\nmsg.name = name\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 540,
        "wires": [
            [
                "7a0dccec8243e38b"
            ]
        ]
    },
    {
        "id": "7a0dccec8243e38b",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1320,
        "y": 540,
        "wires": [
            [
                "2cd4c514cea1e141"
            ]
        ]
    },
    {
        "id": "2cd4c514cea1e141",
        "type": "split",
        "z": "97de01cdac696474",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 290,
        "y": 620,
        "wires": [
            [
                "dc70c0903e72d58d"
            ]
        ]
    },
    {
        "id": "dc70c0903e72d58d",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "update algos",
        "func": "let name = msg.name\nlet profit = msg.payload[\"sum\"]\n\nif (profit == null) {\n    profit = 0;\n}\n\nmsg.profit = profit\n\nlet sql = \"update algos set gain_today = \" + profit + \", gain_alltime = \" + profit + \"  where algo_name = '\" +name+ \"';\"\n//node.warn(sql)\nmsg.query = sql\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 620,
        "wires": [
            [
                "c5414432ae944a79"
            ]
        ]
    },
    {
        "id": "c5414432ae944a79",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 580,
        "y": 620,
        "wires": [
            [
                "f654daae44514cb9"
            ]
        ]
    },
    {
        "id": "f654daae44514cb9",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "update algos table",
        "func": "let gain_alltime = msg.profit\nlet gain_today = msg.profit\nlet total_value = 277000\n//let total_value = msg.totalvalue\nlet id = msg.name\nlet pctgainalltime = 0\nlet pctgaintoday = 0\n\nif (total_value > 0){\n     pctgainalltime = (gain_alltime / total_value) * 100\n     pctgaintoday = (gain_today / total_value) * 100\n}\n\n\nmsg.query = \"update algos set portfolio_size = \" +total_value+ \", pctgain_today = \" + pctgaintoday + \", pctgain_alltime = \" +pctgainalltime+ \" where algo_name = '\" + id + \"';\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 620,
        "wires": [
            [
                "230c6efa806ebeba"
            ]
        ]
    },
    {
        "id": "230c6efa806ebeba",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 920,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "a5075bd079b0c0f4",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "update info_ratio",
        "func": "msg.query = \"update algos set info_ratio = (pctgain_alltime - pctbench_alltime);\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 680,
        "wires": [
            [
                "54a8d17ea59dfe16"
            ]
        ]
    },
    {
        "id": "54a8d17ea59dfe16",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 580,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "af4dd7eb83790bab",
        "type": "delay",
        "z": "97de01cdac696474",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 240,
        "y": 680,
        "wires": [
            [
                "a5075bd079b0c0f4"
            ]
        ]
    },
    {
        "id": "127b8588adb9faeb",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 920,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "0325140d29338d2d",
        "type": "comment",
        "z": "97de01cdac696474",
        "name": "Click to see notes.",
        "info": "This flow calculates the performance of Intraday stategies which are more complicated since there can be many trades over time.\nThis method uses \"orders\" table which contain a record of all \"closed\" orders processed by Alpaca. \n\nThe method we use is to sum all of the \"buy\" and \"sell\" orders in the orders table for each ticker \nassociated with the strategy. Note that the orders table includes all orders ever completed. So summing the\nbuys and sells will include include all transactations for that ticker. Since you may want to exclude\nvery old transactions from the algo reporting, there is a date filter included in the sql query in function node\n\"get sum buys orders\". The query only includes orders made after the \"created_at\" date.\n\nWe will also need to record if there is a current position for that\nticker. The buy and sell orders are totalled, along with the current position (if any). \n\nTo store the values we need a new table: \"intraday_buy_sell\" which is created in one of the flows.\nValues are stored each time the flow runs, so it starts with a \"truncate\" request to get a fresh table.\nTotals buys, sells, and current positions are stored in this table.\nGains/loss are calculated and stored in the profit field.\n\nThe performance of the algo is determined by summing all of the profits for each ticker in the strategy.\n\nThe percent changes are calculated from the total of the market value for each ticker.\nThe gains or losses are compared with the performance of the benchmark over time.\n\nBecause is is sometimes useful to look at the entire orders table, we have included the api endpoint: \n[your instance].machinetrader.io/api/download_orders which downloads the entire orders table as a csv file.\n",
        "x": 150,
        "y": 40,
        "wires": []
    },
    {
        "id": "4f118442f60bb1fb",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "create intraday_buy_sell table",
        "func": "let sql = \"create table IF NOT EXISTS intraday_buy_sell (account VARCHAR(10), algo_name VARCHAR(100), symbol VARCHAR(10), type VARCHAR(10), buys FLOAT, sells FLOAT, current FLOAT, profit FLOAT)\"\nnode.warn(sql)\nmsg.query = sql\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 120,
        "wires": [
            [
                "9e08d1ad30b6ffca"
            ]
        ]
    },
    {
        "id": "7e548d748d66e9a6",
        "type": "inject",
        "z": "97de01cdac696474",
        "name": "GO",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 450,
        "y": 120,
        "wires": [
            [
                "4f118442f60bb1fb"
            ]
        ]
    },
    {
        "id": "9e08d1ad30b6ffca",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 860,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "cab5d6e5dfd7a21a",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "calculate profit ",
        "func": "let sql = \"update intraday_buy_sell set profit = ( sells - (buys - current));\"\n//node.warn(sql)\nmsg.query = sql\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 540,
        "wires": [
            [
                "d5803347a24b9680"
            ]
        ]
    },
    {
        "id": "d5803347a24b9680",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 540,
        "y": 540,
        "wires": [
            [
                "26bfe960a3e6279d"
            ]
        ]
    },
    {
        "id": "9b516a2ae75ac337",
        "type": "comment",
        "z": "97de01cdac696474",
        "name": "Update from algos table benchmarks",
        "info": "",
        "x": 190,
        "y": 1000,
        "wires": []
    },
    {
        "id": "fb3723147b3d771c",
        "type": "inject",
        "z": "97de01cdac696474",
        "name": "Every min",
        "props": [
            {
                "p": "query",
                "v": "select * from algos",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 1060,
        "wires": [
            [
                "3b68ddcc6ed9887f"
            ]
        ]
    },
    {
        "id": "52821a2fa965c1cb",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "update algos table",
        "func": "let id = msg.payload[\"id\"]\nlet start = msg.payload[\"benchmark_start\"]\n\n\nlet current = global.get(\"spy_current\")\nlet close = global.get(\"spy_close\")\n\nlet pctbench_today = ((current - close) / close) * 100 \nlet pctbench_alltime = ((current - start) / start) * 100\n\n//node.warn(\"Close: \" + close + \" Current: \" + current+ \" Pctbench Today: \" +pctbench_today+ \" Pctbench Alltime: \" +pctbench_alltime)\n\nmsg.query = \"update algos set pctbench_today = \" + pctbench_today+ \", pctbench_alltime = \" +pctbench_alltime+ \" where id = \" +id+ \";\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1060,
        "wires": [
            [
                "855f655c4c18c93d"
            ]
        ]
    },
    {
        "id": "855f655c4c18c93d",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 740,
        "y": 1060,
        "wires": [
            [
                "2c299bfe8b3e37cb"
            ]
        ]
    },
    {
        "id": "2c299bfe8b3e37cb",
        "type": "function",
        "z": "97de01cdac696474",
        "name": "update info_ratio",
        "func": "msg.query = \"update algos set info_ratio = (pctgain_alltime - pctbench_alltime);\"\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1060,
        "wires": [
            [
                "c4747fc3f331a4c8"
            ]
        ]
    },
    {
        "id": "c4747fc3f331a4c8",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1100,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "3b68ddcc6ed9887f",
        "type": "postgresql",
        "z": "97de01cdac696474",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 280,
        "y": 1060,
        "wires": [
            [
                "754ca93bf76109c2"
            ]
        ]
    },
    {
        "id": "754ca93bf76109c2",
        "type": "split",
        "z": "97de01cdac696474",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 410,
        "y": 1060,
        "wires": [
            [
                "52821a2fa965c1cb"
            ]
        ]
    },
    {
        "id": "7455395cf269fb2b",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "docker",
        "userFieldType": "str",
        "password": "docker",
        "passwordFieldType": "str"
    }
]