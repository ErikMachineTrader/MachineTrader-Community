[
    {
        "id": "30eb0d366fc95ff1",
        "type": "tab",
        "label": "Portfolio Table",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bcb7d13b8acb08ff",
        "type": "function",
        "z": "30eb0d366fc95ff1",
        "name": "create portfolio table",
        "func": "let sql = \"create table IF NOT EXISTS portfolio (account TEXT,date TEXT,portfolioid REAL,name TEXT,ticker TEXT,price REAL,qty REAL,position TEXT,clientorderid TEXT,filled_type TEXT,filled_side TEXT,filled_tif TEXT,filled_status TEXT,filled_price REAL,filled_qty REAL,filled_at TEXT,current_position REAL,current_price REAL,current_value REAL,current_profit REAL,current_profitpct REAL,gainlosspct REAL, newprice REAL,newqty REAL,newposition REAL,newclient_order_id TEXT,trade_profit REAL,newfilled_type TEXT,newfilled_side TEXT,newfilled_tif TEXT,newfilled_status TEXT,newfilled_at TEXT,newfilled_price REAL,newfilled_qty REAL,benchmark TEXT,benchmark_start REAL, benchmark_end REAL,benchmark_profit REAL, benchmark_profitpct REAL)\"\nmsg.topic = sql\nnode.warn(msg.topic)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 120,
        "wires": [
            [
                "3ea03c25c09637ce"
            ]
        ]
    },
    {
        "id": "76f95cbad1116fc7",
        "type": "inject",
        "z": "30eb0d366fc95ff1",
        "name": "CREATE",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "bcb7d13b8acb08ff"
            ]
        ]
    },
    {
        "id": "3ea03c25c09637ce",
        "type": "sqlite",
        "z": "30eb0d366fc95ff1",
        "mydb": "1d84653e92051324",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 480,
        "y": 120,
        "wires": [
            [
                "660f68bdb34ac40d"
            ]
        ]
    },
    {
        "id": "a8f062cada1659d6",
        "type": "comment",
        "z": "30eb0d366fc95ff1",
        "name": "Portfolio Table",
        "info": "",
        "x": 90,
        "y": 60,
        "wires": []
    },
    {
        "id": "bb62a9a6d29d8639",
        "type": "function",
        "z": "30eb0d366fc95ff1",
        "name": "drop  portfolio table",
        "func": "let sql = \"drop table portfolio\"\nmsg.topic = sql\nnode.warn(msg.topic)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 200,
        "wires": [
            [
                "934d48749f65e2b6"
            ]
        ]
    },
    {
        "id": "c2323f83ab2eb950",
        "type": "inject",
        "z": "30eb0d366fc95ff1",
        "name": "DROP",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 850,
        "y": 200,
        "wires": [
            [
                "bb62a9a6d29d8639"
            ]
        ]
    },
    {
        "id": "934d48749f65e2b6",
        "type": "sqlite",
        "z": "30eb0d366fc95ff1",
        "mydb": "1d84653e92051324",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 1200,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "0388045cc2126080",
        "type": "http in",
        "z": "30eb0d366fc95ff1",
        "name": "/api/download_portfolio",
        "url": "/api/download_portfolio",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 340,
        "wires": [
            [
                "e3140c547d9a7165"
            ]
        ]
    },
    {
        "id": "185b58bd0870a0da",
        "type": "http response",
        "z": "30eb0d366fc95ff1",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json",
            "Content-Disposition": "attachment; filename=\"outfile.json\""
        },
        "x": 950,
        "y": 340,
        "wires": []
    },
    {
        "id": "b683b5e139f10ef2",
        "type": "csv",
        "z": "30eb0d366fc95ff1",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "account,date,portfolioid,name,ticker,price,qty,position,clientorderid,filled_price,filled_qty,filled_at,current_position,current_price,current_value,current_profit,newprice,newqty,newposition,newclient_order_id,trade_profit,newfilled_at,newfilled_price,newfilled_qty,benchmark,benchmark_start,benchmark_end,benchmar_profit,benchmark_profitpct",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 650,
        "y": 340,
        "wires": [
            [
                "23dc2145ae049bc1"
            ]
        ]
    },
    {
        "id": "e3140c547d9a7165",
        "type": "function",
        "z": "30eb0d366fc95ff1",
        "name": "export query",
        "func": "msg.topic= \"select * from portfolio\"\nnode.warn(msg.topic)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 340,
        "wires": [
            [
                "7c0ce311e4c22a68"
            ]
        ]
    },
    {
        "id": "23dc2145ae049bc1",
        "type": "file",
        "z": "30eb0d366fc95ff1",
        "name": "write report",
        "filename": "/data/store/portfolios.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "185b58bd0870a0da"
            ]
        ]
    },
    {
        "id": "7c0ce311e4c22a68",
        "type": "sqlite",
        "z": "30eb0d366fc95ff1",
        "mydb": "a9f09a161f25d539",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 500,
        "y": 340,
        "wires": [
            [
                "b683b5e139f10ef2"
            ]
        ]
    },
    {
        "id": "660f68bdb34ac40d",
        "type": "debug",
        "z": "30eb0d366fc95ff1",
        "name": "debug 172",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 120,
        "wires": []
    },
    {
        "id": "37e712ef989cbba4",
        "type": "comment",
        "z": "30eb0d366fc95ff1",
        "name": "This flow downloads the portfolio table ",
        "info": "",
        "x": 170,
        "y": 300,
        "wires": []
    },
    {
        "id": "ba5432eca181858a",
        "type": "function",
        "z": "30eb0d366fc95ff1",
        "name": "query portfolio table",
        "func": "//let sql = \"select sum(position) as a, sum(current_value) as b, sum(newposition) as c, benchmark_profit as d from portfolio where portfolioid = 4;\"\n//let sql = \"select * from portfolio order by filled_at desc limit 5;\"\n//let sql = \"select * from portfolio\"\nlet sql = \"select sum(current_profit) as a, sum(trade_profit) as b, sum(benchmark_profit) as c from portfolio where portfolioid = 1668259306192 and filled_at like '2022-11-13%';\"\nmsg.topic = sql\nnode.warn(msg.topic)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 160,
        "wires": [
            [
                "44480a60550db324"
            ]
        ]
    },
    {
        "id": "2a593efe13bc2c06",
        "type": "inject",
        "z": "30eb0d366fc95ff1",
        "name": "TEST",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "ba5432eca181858a"
            ]
        ]
    },
    {
        "id": "44480a60550db324",
        "type": "sqlite",
        "z": "30eb0d366fc95ff1",
        "mydb": "1d84653e92051324",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 480,
        "y": 160,
        "wires": [
            [
                "cc4a2244b6e65cc2"
            ]
        ]
    },
    {
        "id": "cc4a2244b6e65cc2",
        "type": "debug",
        "z": "30eb0d366fc95ff1",
        "name": "debug 173",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 160,
        "wires": []
    },
    {
        "id": "8b6fa7e754ec1813",
        "type": "function",
        "z": "30eb0d366fc95ff1",
        "name": "get closed orders - Paper",
        "func": "/* Get Flow variables */\n\nlet ordertype = flow.get(\"orders\")\n//let limit  = flow.get(\"cnt\")\nordertype = \"closed\"\n\n/* Setup alpaca request arguments */\n\nmsg.payload = {\n    status: ordertype, // \"open or closed\"\n    limit: \"500\", // up to 500\n\tdirection: \"desc\" //  \"asc or desc\"\n\n}\n\n//node.warn(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 540,
        "wires": [
            [
                "bbb32514a3043076"
            ]
        ]
    },
    {
        "id": "bbb32514a3043076",
        "type": "alpaca-query-order",
        "z": "30eb0d366fc95ff1",
        "conf": "e535f42f1df1b25f",
        "x": 580,
        "y": 540,
        "wires": [
            [
                "e144c44541539a89"
            ]
        ]
    },
    {
        "id": "3564bcf7b3e356f3",
        "type": "function",
        "z": "30eb0d366fc95ff1",
        "name": "update portfolio",
        "func": "let d = new Date()\nd = d.toISOString().split('T')[0]\n//node.warn(\"Date: \" +d)\n\nlet created_at = msg.payload[\"created_at\"]\nlet shortdate = created_at.substring(0, 10)\n//node.warn(\"Shortdate: \" +shortdate)\n\nlet sql = ''\nlet temp = ''\n\nlet clientid = msg.clientid\n\n\nlet id = msg.payload[\"id\"]\nlet clientorderid = msg.payload[\"client_order_id\"]\nlet updated_at = msg.payload[\"updated_at\"]\nlet submitted_at = msg.payload[\"submitted_at\"]\nlet filled_at = msg.payload[\"filled_at\"]\nlet expired_at = msg.payload[\"expired_at\"]\nlet canceled_at = msg.payload[\"canceled_at\"]\nlet failed_at = msg.payload[\"failed_at\"]\nlet replaced_at = msg.payload[\"replaced_at\"]\nlet replaced_by = msg.payload[\"replaced_by\"]\nlet replaces = msg.payload[\"replaces\"]\nlet asset_id = msg.payload[\"asset_id\"]\nlet symbol = msg.payload[\"symbol\"]\nlet asset_class = msg.payload[\"asset_class\"]\nlet notional = msg.payload[\"notional\"]\nlet qty = msg.payload[\"qty\"]\nlet filled_qty = msg.payload[\"filled_qty\"]\nlet filled_avg_price = msg.payload[\"filled_avg_price\"]\nlet order_class = msg.payload[\"order_class\"]\nlet order_type = msg.payload[\"order_type\"]\nlet type = msg.payload[\"type\"]\nlet side = msg.payload[\"side\"]\nlet time_in_force = msg.payload[\"time_in_force\"]\nlet limit_price = msg.payload[\"limit_price\"]\nlet stop_price = msg.payload[\"stop_price\"]\nlet status = msg.payload[\"status\"]\nlet extended_hours = msg.payload[\"extended_hours\"]\nlet legs = msg.payload[\"legs\"]\nlet trail_percent = msg.payload[\"trail_percent\"]\nlet trail_price = msg.payload[\"trail_price\"]\nlet hwm = msg.payload[\"hwm\"]\nlet subtag = msg.payload[\"subtag\"]\nlet source = msg.payload[\"source\"]\nlet position = filled_qty * filled_avg_price\n\n//node.warn(\"newclientorderid: \" + newclientorderid + \" clientorderid: \" + clientorderid)\n\n//let portfolioid = 0\n\n//  if ((symbol = ticker) && (status == 'filled') && (side == 'sell') ){ // sell side only\n//  if ((symbol = ticker) && (status == 'filled') && (side == 'buy')) { // buy side only\n\n//d = '2022-10-21'\n//if ( (status == 'filled') && (d == shortdate) ) { // filled only for specific date\n//if ( (status == 'filled')  ) { // filled  only\nif ((status == 'filled') && (clientorderid == clientid)) { // filled  only\n\n      let sql = \"update portfolio SET  filled_type = '\" +type+ \"', filled_side = '\" + side + \"', filled_tif = '\" + time_in_force + \"', filled_status = '\" + status + \"', filled_at = '\" + filled_at + \"', filled_price = '\" + filled_avg_price + \"', filled_qty = '\" + filled_qty + \"', position = \" +position+ \" where clientorderid = '\" +clientorderid+ \"';\"\n\nmsg.topic = sql\n//node.warn(msg.topic)\n\n\nreturn msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 540,
        "wires": [
            [
                "6c73e477ebd7df2a"
            ]
        ]
    },
    {
        "id": "e144c44541539a89",
        "type": "split",
        "z": "30eb0d366fc95ff1",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 750,
        "y": 540,
        "wires": [
            [
                "3564bcf7b3e356f3"
            ]
        ]
    },
    {
        "id": "6c73e477ebd7df2a",
        "type": "sqlite",
        "z": "30eb0d366fc95ff1",
        "mydb": "1d84653e92051324",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 1060,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "8200ee9d6a232048",
        "type": "function",
        "z": "30eb0d366fc95ff1",
        "name": "get client order ids from portfolio",
        "func": "let sql = \"select clientorderid from portfolio where filled_at is null\"\nmsg.topic = sql\n//node.warn(msg.topic)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 480,
        "wires": [
            [
                "21fdc80b59fdbfc5"
            ]
        ]
    },
    {
        "id": "21fdc80b59fdbfc5",
        "type": "sqlite",
        "z": "30eb0d366fc95ff1",
        "mydb": "1d84653e92051324",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 560,
        "y": 480,
        "wires": [
            [
                "7938370cd4501167"
            ]
        ]
    },
    {
        "id": "407043d36957891b",
        "type": "function",
        "z": "30eb0d366fc95ff1",
        "name": "pass clientorderid",
        "func": "let clientorderid = msg.payload[\"clientorderid\"]\nmsg.clientid = clientorderid\n//node.warn(msg.clientid)\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 480,
        "wires": [
            [
                "8b6fa7e754ec1813"
            ]
        ]
    },
    {
        "id": "7938370cd4501167",
        "type": "split",
        "z": "30eb0d366fc95ff1",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 480,
        "wires": [
            [
                "8e06d5f16ebedb3b"
            ]
        ]
    },
    {
        "id": "8e06d5f16ebedb3b",
        "type": "delay",
        "z": "30eb0d366fc95ff1",
        "name": "",
        "pauseType": "rate",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 850,
        "y": 480,
        "wires": [
            [
                "407043d36957891b"
            ]
        ]
    },
    {
        "id": "94d20adeb7d44458",
        "type": "comment",
        "z": "30eb0d366fc95ff1",
        "name": "RUN END OF DAY: Delete open orders from Alpaca and orders from portfolio that weren't filled",
        "info": "",
        "x": 350,
        "y": 680,
        "wires": []
    },
    {
        "id": "1faf72d2d87083cd",
        "type": "function",
        "z": "30eb0d366fc95ff1",
        "name": "delete query",
        "func": "let sql = \"delete from portfolio where filled_qty is null\"\nmsg.topic = sql\nnode.warn(sql)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 720,
        "wires": [
            [
                "c939fd109ba54141"
            ]
        ]
    },
    {
        "id": "c939fd109ba54141",
        "type": "sqlite",
        "z": "30eb0d366fc95ff1",
        "mydb": "1d84653e92051324",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 660,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "25cca6fe18645280",
        "type": "alpaca-orders-close",
        "z": "30eb0d366fc95ff1",
        "conf": "e535f42f1df1b25f",
        "name": "",
        "x": 290,
        "y": 720,
        "wires": [
            [
                "1faf72d2d87083cd"
            ]
        ]
    },
    {
        "id": "69adaae415612147",
        "type": "inject",
        "z": "30eb0d366fc95ff1",
        "name": "GO",
        "props": [],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 480,
        "wires": [
            [
                "8200ee9d6a232048"
            ]
        ]
    },
    {
        "id": "dc18eebd31ff37fe",
        "type": "comment",
        "z": "30eb0d366fc95ff1",
        "name": "RUN ON INTERVAL: update portfolio where filled_at is null",
        "info": "",
        "x": 230,
        "y": 420,
        "wires": []
    },
    {
        "id": "d9f9a83eaa9ba771",
        "type": "inject",
        "z": "30eb0d366fc95ff1",
        "name": "23:00",
        "props": [],
        "repeat": "",
        "crontab": "00 23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 720,
        "wires": [
            [
                "25cca6fe18645280"
            ]
        ]
    },
    {
        "id": "880a330239a471b1",
        "type": "function",
        "z": "30eb0d366fc95ff1",
        "name": "update portfolio table",
        "func": "let sql = \"alter table portfolio add column current_profitpct REAL\"\n//let sql = \"update portfolio set portfolioid = 1668428333056 where portfolioid = 1668426962108\"\n//let sql = \"replace into portfolio (account,name,date,portfolioid,ticker, clientorderid,price,qty,benchmark,benchmark_start) values ('paper', 'Trade ETHUSD every hour.',Sat Nov 12 2022 14:56:18 GMT-0500 (Eastern Standard Time)',1668264270965,'ETH/USD','X:ETHUSD1668282978166','1265.68',1,'SPY',398.51);\"\n//let sql = \"update portfolio set name = 'Buy Top Stocks' where portfolioid = 1668429188224\"\nmsg.topic = sql\nnode.warn(msg.topic)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 160,
        "wires": [
            [
                "b019e4e4efb30af5"
            ]
        ]
    },
    {
        "id": "4301d4fa03888f82",
        "type": "inject",
        "z": "30eb0d366fc95ff1",
        "name": "UPDATE",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 860,
        "y": 160,
        "wires": [
            [
                "880a330239a471b1"
            ]
        ]
    },
    {
        "id": "b019e4e4efb30af5",
        "type": "sqlite",
        "z": "30eb0d366fc95ff1",
        "mydb": "1d84653e92051324",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 1220,
        "y": 160,
        "wires": [
            [
                "6a4bdef250f1b6aa"
            ]
        ]
    },
    {
        "id": "6a4bdef250f1b6aa",
        "type": "debug",
        "z": "30eb0d366fc95ff1",
        "name": "debug 174",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 160,
        "wires": []
    },
    {
        "id": "25e3675f44449616",
        "type": "function",
        "z": "30eb0d366fc95ff1",
        "name": "query portfolio table",
        "func": "//let sql = \"select sum(position) as a, sum(current_value) as b, sum(newposition) as c, benchmark_profit as d from portfolio where portfolioid = 4;\"\n//let sql = \"select * from portfolio order by filled_at desc limit 5;\"\nlet sql = \"select * from portfolio\"\n//let sql = \"select sum(current_profit) as a, sum(trade_profit) as b, sum(benchmark_profit) as c from portfolio where portfolioid = 1668259306192 and filled_at like '2022-11-13%';\"\nmsg.topic = sql\nnode.warn(msg.topic)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 200,
        "wires": [
            [
                "619bcab31768a503"
            ]
        ]
    },
    {
        "id": "9334688ede1661b0",
        "type": "inject",
        "z": "30eb0d366fc95ff1",
        "name": "Display",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "25e3675f44449616"
            ]
        ]
    },
    {
        "id": "619bcab31768a503",
        "type": "sqlite",
        "z": "30eb0d366fc95ff1",
        "mydb": "1d84653e92051324",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 480,
        "y": 200,
        "wires": [
            [
                "c9d6bd0c6e0ce4b6"
            ]
        ]
    },
    {
        "id": "c9d6bd0c6e0ce4b6",
        "type": "debug",
        "z": "30eb0d366fc95ff1",
        "name": "debug 179",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 200,
        "wires": []
    },
    {
        "id": "665bf06e0264a417",
        "type": "comment",
        "z": "30eb0d366fc95ff1",
        "name": "Display Portfolio",
        "info": "",
        "x": 100,
        "y": 840,
        "wires": []
    },
    {
        "id": "afee86bd3b7ee0a5",
        "type": "inject",
        "z": "30eb0d366fc95ff1",
        "name": "Display portfolio",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from portfolio where filled_at is not null",
        "x": 120,
        "y": 900,
        "wires": [
            [
                "64bf67ebe0badfa3"
            ]
        ]
    },
    {
        "id": "5bb886e3579b8929",
        "type": "function",
        "z": "30eb0d366fc95ff1",
        "name": "show portfolio",
        "func": "let account = ''\nlet date = ''\nlet portfolioid = ''\nlet name = ''\nlet ticker = ''\nlet price = ''\nlet qty = ''\nlet position = 0\nlet clientorderid = ''\nlet filled_type = ''\nlet filled_side = ''\nlet filled_tif = ''\nlet filled_status = ''\nlet filled_price = ''\nlet filled_qty = ''\nlet filled_at = ''\nlet current_position = ''\nlet current_price = ''\nlet current_value = ''\nlet current_profit = 0\nlet current_profitpct = 0\nlet gainlosspct = 0\nlet newprice = ''\nlet newqty = ''\nlet newposition = ''\nlet newclient_order_id = ''\nlet trade_profit = ''\nlet newfilled_type = ''\nlet newfilled_side = ''\nlet newfilled_tif = ''\nlet newfilled_status = ''\nlet newfilled_at = ''\nlet newfilled_price = ''\nlet newfilled_qty = ''\nlet benchmark = ''\nlet benchmark_start = ''\nlet benchmark_end = ''\nlet benchmark_profit = ''\nlet benchmark_profitpct = ''\n\n\nfor (let i=0;i<msg.payload.length;i++) \n{\n\n    account = msg.payload[i][\"account\"]\n    date = msg.payload[i][\"date\"]\n    portfolioid = msg.payload[i][\"portfolioid\"]\n    name = msg.payload[i][\"name\"]\n    ticker = msg.payload[i][\"ticker\"]\n    price = msg.payload[i][\"price\"]\n    qty = msg.payload[i][\"qty\"]\n    position = msg.payload[i][\"position\"]\n    clientorderid = msg.payload[i][\"clientorderid\"]\n    filled_type = msg.payload[i][\"filled_type\"]\n    filled_side = msg.payload[i][\"filled_side\"]\n    filled_tif = msg.payload[i][\"filled_tif\"]\n    filled_status = msg.payload[i][\"filled_status\"]\n    filled_price = msg.payload[i][\"filled_price\"]\n    filled_qty = msg.payload[i][\"filled_qty\"]\n    filled_at = msg.payload[i][\"filled_at\"]\n    current_position = msg.payload[i][\"current_position\"]\n    current_price = msg.payload[i][\"current_price\"]\n    current_value = msg.payload[i][\"current_value\"]\n    current_profit = msg.payload[i][\"current_profit\"]\n    current_profitpct = (msg.payload[i][\"current_profitpct\"]) * 100\n    gainlosspct = msg.payload[i][\"gainlosspct\"]\n    newprice = msg.payload[i][\"newprice\"]\n    newqty = msg.payload[i][\"newqty\"]\n    newposition = msg.payload[i][\"newposition\"]\n    newclient_order_id = msg.payload[i][\"newclient_order_id\"]\n    trade_profit = msg.payload[i][\"trade_profit\"]\n    newfilled_type = msg.payload[i][\"newfilled_type\"]\n    newfilled_side = msg.payload[i][\"newfilled_side\"]\n    newfilled_tif = msg.payload[i][\"newfilled_tif\"]\n    newfilled_status = msg.payload[i][\"newfilled_status\"]\n    newfilled_at = msg.payload[i][\"newfilled_at\"]\n    newfilled_price = msg.payload[i][\"newfilled_price\"]\n    newfilled_qty = msg.payload[i][\"newfilled_qty\"]\n    benchmark = msg.payload[i][\"benchmark\"]\n    benchmark_start = msg.payload[i][\"benchmark_start\"]\n    benchmark_end = msg.payload[i][\"benchmark_end\"]\n    benchmark_profit = msg.payload[i][\"benchmark_profit\"]\n    benchmark_profitpct = msg.payload[i][\"benchmark_profitpct\"]\n\n    let gainlosspct_today = current_profitpct\n    \n \n    current_price = parseFloat(current_price).toFixed(2);\n    current_value = parseFloat(current_value).toFixed(2);\n    current_profit = parseFloat(current_profit).toFixed(2);\n    gainlosspct_today = parseFloat(gainlosspct_today).toFixed(2);\n\n\n    node.warn(\"Ticker: \" + ticker + \" Name:\" + ticker + \" Current Price: \" + current_price + \" Shares: \" + filled_qty + \" Market: \" + current_value + \" Gainloss today: \" + current_profit + \" Gainloss pct today: \" + gainlosspct_today)\n}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "64bf67ebe0badfa3",
        "type": "sqlite",
        "z": "30eb0d366fc95ff1",
        "mydb": "1d84653e92051324",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 280,
        "y": 900,
        "wires": [
            [
                "5bb886e3579b8929"
            ]
        ]
    },
    {
        "id": "1d84653e92051324",
        "type": "sqlitedb",
        "db": "/data/store/portfolios",
        "mode": "RWC"
    },
    {
        "id": "a9f09a161f25d539",
        "type": "sqlitedb",
        "db": "/data/store/portfolios",
        "mode": "RWC"
    },
    {
        "id": "e535f42f1df1b25f",
        "type": "alpaca-account",
        "name": "paper",
        "keyId": "PK04XC8SPXUXFUJ5C0BO",
        "paper": true
    }
]