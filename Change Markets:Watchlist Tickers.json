[
    {
        "id": "9e77b9fe40116d31",
        "type": "tab",
        "label": "Change Markets/Watchlist",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "20abf5806cd0478b",
        "type": "comment",
        "z": "9e77b9fe40116d31",
        "name": "The tickers for your \"markets' and \"watchlist\" widgets are contains in postgres tables for that name.",
        "info": "",
        "x": 400,
        "y": 80,
        "wires": []
    },
    {
        "id": "0e253773140308d9",
        "type": "inject",
        "z": "9e77b9fe40116d31",
        "name": "Display Markets tickers",
        "props": [
            {
                "p": "query",
                "v": "select * from markets",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 220,
        "y": 120,
        "wires": [
            [
                "732fe99f95b87d19"
            ]
        ]
    },
    {
        "id": "732fe99f95b87d19",
        "type": "postgresql",
        "z": "9e77b9fe40116d31",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 420,
        "y": 120,
        "wires": [
            [
                "6d41c076d89a7385"
            ]
        ]
    },
    {
        "id": "6d41c076d89a7385",
        "type": "debug",
        "z": "9e77b9fe40116d31",
        "name": "Markets",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 120,
        "wires": []
    },
    {
        "id": "0555ee6a2bb7e721",
        "type": "inject",
        "z": "9e77b9fe40116d31",
        "name": "Display Watchlist tickers",
        "props": [
            {
                "p": "query",
                "v": "select * from watchlist",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 160,
        "wires": [
            [
                "cb7a7ddf58ad691c"
            ]
        ]
    },
    {
        "id": "cb7a7ddf58ad691c",
        "type": "postgresql",
        "z": "9e77b9fe40116d31",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 420,
        "y": 160,
        "wires": [
            [
                "86fbda26d99d2b21"
            ]
        ]
    },
    {
        "id": "86fbda26d99d2b21",
        "type": "debug",
        "z": "9e77b9fe40116d31",
        "name": "Markets",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 160,
        "wires": []
    },
    {
        "id": "3c51b35cd6852f45",
        "type": "comment",
        "z": "9e77b9fe40116d31",
        "name": "Clear existing tables",
        "info": "",
        "x": 170,
        "y": 240,
        "wires": []
    },
    {
        "id": "2ff530d9cbb8eab6",
        "type": "polygon-last-trade-v3",
        "z": "9e77b9fe40116d31",
        "conf": "8a426fd8cd37146c",
        "symbol": "",
        "x": 920,
        "y": 780,
        "wires": [
            [
                "810b2a36063d9295"
            ]
        ]
    },
    {
        "id": "810b2a36063d9295",
        "type": "function",
        "z": "9e77b9fe40116d31",
        "name": "update markets",
        "func": "let symbol = msg.ticker\nlet price = 0\n\nfor (let item of msg.payload.results) {\n    price = item.price;\n}\n\nlet ticker = msg.topic\n//node.warn(ticker)\nmsg.query = \"update markets set price24h = \" +price+ \" where symbol = '\" +symbol+ \"' \"\n\n//node.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 780,
        "wires": [
            [
                "d5922977dc7f684f"
            ]
        ]
    },
    {
        "id": "a15a7e05c1235853",
        "type": "split",
        "z": "9e77b9fe40116d31",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 570,
        "y": 780,
        "wires": [
            [
                "80fa595ab5ce1e6a"
            ]
        ]
    },
    {
        "id": "fe469f5fe227cc14",
        "type": "split",
        "z": "9e77b9fe40116d31",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 450,
        "y": 920,
        "wires": [
            [
                "78aa9bc84fede958"
            ]
        ]
    },
    {
        "id": "78aa9bc84fede958",
        "type": "function-npm",
        "z": "9e77b9fe40116d31",
        "name": "prepare polygon  7d",
        "func": "let symbol = msg.payload[\"polygon_symbol\"]\nmsg.ticker = msg.payload[\"symbol\"]\n\nlet cnt = 1\n\n/* Setup polygon request arguments */\nmsg.payload = {\n    symbol: symbol,\n    cnt: cnt,\n}\n\nlet date = new Date();\n\n// this gets the day before yesterday\ndate.setDate(date.getDate() - 7);\n\nconst fromDt = date\n\n// toDt is today\nconst toDt = new Date(); // Today\n\n\n/* Setup polygon request arguments */\nmsg.payload = {\n    from: fromDt.toLocaleDateString('en-CA'),\n    to: toDt.toLocaleDateString('en-CA'),\n    symbol: symbol\n}\n\nmsg.timespan = 'day';\nmsg.topic = symbol\n\n//node.warn(msg.payload)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 920,
        "wires": [
            [
                "a9e671b65faa1ed1"
            ]
        ]
    },
    {
        "id": "21f8912cdc52f13c",
        "type": "function",
        "z": "9e77b9fe40116d31",
        "name": "update watchlist",
        "func": "let symbol = msg.ticker\n\nconst account = { name: 'One Minute Bars', data: [] };\n\nfor (const item of msg.payload.results) {\n    const { c, t } = item;\n    const dateEpoch = +(new Date(t));\n\n//    account.data.push([ dateEpoch, +c ]);\n    account.data.push([ c ]);\n}\n\nlet price = account.data[0];\n\nprice = price.toString()\n//node.warn(\"Price: \" +price)\n\nmsg.query = \"update watchlist set price7d = \" + price + \" where symbol = '\" + symbol + \"' \"\n\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 920,
        "wires": [
            [
                "ad980c5612249907"
            ]
        ]
    },
    {
        "id": "a9e671b65faa1ed1",
        "type": "polygon-trades-min-agg-rest",
        "z": "9e77b9fe40116d31",
        "conf": "8a426fd8cd37146c",
        "symbol": "",
        "multiplier": 1,
        "timespan": "minute",
        "from": "",
        "to": "",
        "x": 840,
        "y": 920,
        "wires": [
            [
                "21f8912cdc52f13c"
            ]
        ]
    },
    {
        "id": "03c83f4f994d3f3f",
        "type": "polygon-last-trade-v3",
        "z": "9e77b9fe40116d31",
        "conf": "8a426fd8cd37146c",
        "symbol": "",
        "x": 920,
        "y": 820,
        "wires": [
            [
                "ee502c4f29df4b71"
            ]
        ]
    },
    {
        "id": "ee502c4f29df4b71",
        "type": "function",
        "z": "9e77b9fe40116d31",
        "name": "update watchlist",
        "func": "let symbol = msg.ticker\nlet price = 0\n\nfor (let item of msg.payload.results) {\n    price = item.price;\n}\n\nlet ticker = msg.topic\n//node.warn(ticker)\nmsg.query = \"update watchlist set price24h = \" +price+ \" where symbol = '\" +symbol+ \"' \"\n\n//node.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 820,
        "wires": [
            [
                "828e15e88c516c4b"
            ]
        ]
    },
    {
        "id": "41af55b23be64a53",
        "type": "split",
        "z": "9e77b9fe40116d31",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 570,
        "y": 820,
        "wires": [
            [
                "4deb872a683d12d8"
            ]
        ]
    },
    {
        "id": "94e57e9548a817e3",
        "type": "split",
        "z": "9e77b9fe40116d31",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 450,
        "y": 880,
        "wires": [
            [
                "01f96923a51f38e4"
            ]
        ]
    },
    {
        "id": "022c5ee64bd0bcc2",
        "type": "function",
        "z": "9e77b9fe40116d31",
        "name": "update markets",
        "func": "let symbol = msg.ticker\n\nconst account = { name: 'One Minute Bars', data: [] };\n\nfor (const item of msg.payload.results) {\n    const { c, t } = item;\n    const dateEpoch = +(new Date(t));\n\n//    account.data.push([ dateEpoch, +c ]);\n    account.data.push([ c ]);\n}\n\nlet price = account.data[0];\n\nprice = price.toString()\n//node.warn(\"Price: \" +price)\n\nmsg.query = \"update markets set price7d = \" + price + \" where symbol = '\" + symbol + \"' \"\n\n//node.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 880,
        "wires": [
            [
                "18c5a2463db3a12c"
            ]
        ]
    },
    {
        "id": "a4209e6b80713a85",
        "type": "polygon-trades-min-agg-rest",
        "z": "9e77b9fe40116d31",
        "conf": "8a426fd8cd37146c",
        "symbol": "",
        "multiplier": 1,
        "timespan": "minute",
        "from": "",
        "to": "",
        "x": 840,
        "y": 880,
        "wires": [
            [
                "022c5ee64bd0bcc2"
            ]
        ]
    },
    {
        "id": "75973a4c68d17d3c",
        "type": "postgresql",
        "z": "9e77b9fe40116d31",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 440,
        "y": 780,
        "wires": [
            [
                "a15a7e05c1235853"
            ]
        ]
    },
    {
        "id": "d5922977dc7f684f",
        "type": "postgresql",
        "z": "9e77b9fe40116d31",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1280,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "25dd191758dccef3",
        "type": "postgresql",
        "z": "9e77b9fe40116d31",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 920,
        "wires": [
            [
                "fe469f5fe227cc14"
            ]
        ]
    },
    {
        "id": "ad980c5612249907",
        "type": "postgresql",
        "z": "9e77b9fe40116d31",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1220,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "5e24803400374471",
        "type": "postgresql",
        "z": "9e77b9fe40116d31",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 440,
        "y": 820,
        "wires": [
            [
                "41af55b23be64a53"
            ]
        ]
    },
    {
        "id": "828e15e88c516c4b",
        "type": "postgresql",
        "z": "9e77b9fe40116d31",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1280,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "18c5a2463db3a12c",
        "type": "postgresql",
        "z": "9e77b9fe40116d31",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1220,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "fcd1b6ef12e43938",
        "type": "postgresql",
        "z": "9e77b9fe40116d31",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 320,
        "y": 880,
        "wires": [
            [
                "94e57e9548a817e3"
            ]
        ]
    },
    {
        "id": "77d6352ccfdba577",
        "type": "comment",
        "z": "9e77b9fe40116d31",
        "name": "Update starting prices",
        "info": "",
        "x": 180,
        "y": 720,
        "wires": []
    },
    {
        "id": "80fa595ab5ce1e6a",
        "type": "function-npm",
        "z": "9e77b9fe40116d31",
        "name": "prepare polygon ",
        "func": "let symbol = msg.payload[\"polygon_symbol\"]\nmsg.ticker = msg.payload[\"symbol\"]\n\nlet cnt = 1\n\n/* Setup polygon request arguments */\nmsg.payload = {\n    symbol: symbol,\n    cnt: cnt,\n}\n\n//msg.topic = symbol\n//node.warn(msg.symbol)\n//node.warn(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 780,
        "wires": [
            [
                "2ff530d9cbb8eab6"
            ]
        ]
    },
    {
        "id": "4deb872a683d12d8",
        "type": "function-npm",
        "z": "9e77b9fe40116d31",
        "name": "prepare polygon ",
        "func": "let symbol = msg.payload[\"polygon_symbol\"]\nmsg.ticker = msg.payload[\"symbol\"]\n\n\nlet cnt = 1\n\n/* Setup polygon request arguments */\nmsg.payload = {\n    symbol: symbol,\n    cnt: cnt,\n}\n\n//msg.topic = symbol\n//node.warn(msg.symbol)\n//node.warn(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 820,
        "wires": [
            [
                "03c83f4f994d3f3f"
            ]
        ]
    },
    {
        "id": "01f96923a51f38e4",
        "type": "function-npm",
        "z": "9e77b9fe40116d31",
        "name": "prepare polygon  7d",
        "func": "let symbol = msg.payload[\"polygon_symbol\"]\nmsg.ticker = msg.payload[\"symbol\"]\n\nlet cnt = 1\n\n\n/* Setup polygon request arguments */\nmsg.payload = {\n    symbol: symbol,\n    cnt: cnt,\n}\n\nlet date = new Date();\n\n// this gets the day before yesterday\ndate.setDate(date.getDate() - 7);\n\nconst fromDt = date\n\n// toDt is today\nconst toDt = new Date(); // Today\n\n\n/* Setup polygon request arguments */\nmsg.payload = {\n    from: fromDt.toLocaleDateString('en-CA'),\n    to: toDt.toLocaleDateString('en-CA'),\n    symbol: symbol\n}\n\nmsg.timespan = 'day';\nmsg.topic = symbol\n\n//node.warn(msg.payload)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 880,
        "wires": [
            [
                "a4209e6b80713a85"
            ]
        ]
    },
    {
        "id": "955a21a89ddc54d1",
        "type": "inject",
        "z": "9e77b9fe40116d31",
        "name": "Truncate Markets",
        "props": [
            {
                "p": "query",
                "v": "truncate table markets",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 180,
        "y": 280,
        "wires": [
            [
                "e671a46d79178ac8"
            ]
        ]
    },
    {
        "id": "e671a46d79178ac8",
        "type": "postgresql",
        "z": "9e77b9fe40116d31",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 360,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "fead8650eab1130a",
        "type": "function",
        "z": "9e77b9fe40116d31",
        "name": "update markets names from alpaca_assets",
        "func": "msg.query = \"update markets set name = alpaca_assets.name FROM alpaca_assets where alpaca_assets.symbol = markets.symbol\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 600,
        "wires": [
            [
                "c59e940c55ba329b"
            ]
        ]
    },
    {
        "id": "c59e940c55ba329b",
        "type": "postgresql",
        "z": "9e77b9fe40116d31",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 660,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "4c4ff33f4bc87e8d",
        "type": "postgresql",
        "z": "9e77b9fe40116d31",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 660,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "4ea8af4c90f96789",
        "type": "comment",
        "z": "9e77b9fe40116d31",
        "name": "Update the names of the tickers",
        "info": "",
        "x": 210,
        "y": 540,
        "wires": []
    },
    {
        "id": "32fdf628407b2b9a",
        "type": "comment",
        "z": "9e77b9fe40116d31",
        "name": "Copyright©2023, MachineTrader.io Inc. All rights reserved.",
        "info": "",
        "x": 270,
        "y": 20,
        "wires": []
    },
    {
        "id": "58ef70f5e70a551e",
        "type": "inject",
        "z": "9e77b9fe40116d31",
        "name": "calculate changes at 6 am",
        "props": [
            {
                "p": "query",
                "v": "select symbol, polygon_symbol from markets",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 220,
        "y": 780,
        "wires": [
            [
                "75973a4c68d17d3c"
            ]
        ]
    },
    {
        "id": "43dcbfcd62afaa8e",
        "type": "inject",
        "z": "9e77b9fe40116d31",
        "name": "calculate changes at 6 am",
        "props": [
            {
                "p": "query",
                "v": "select symbol, polygon_symbol from watchlist",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 220,
        "y": 820,
        "wires": [
            [
                "5e24803400374471"
            ]
        ]
    },
    {
        "id": "b567f00ea7a4a2dd",
        "type": "inject",
        "z": "9e77b9fe40116d31",
        "name": "get 7d price",
        "props": [
            {
                "p": "query",
                "v": "select symbol, polygon_symbol from markets",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 920,
        "wires": [
            [
                "25dd191758dccef3"
            ]
        ]
    },
    {
        "id": "3cb7b1aa4470a07b",
        "type": "inject",
        "z": "9e77b9fe40116d31",
        "name": "get 7d price",
        "props": [
            {
                "p": "query",
                "v": "select symbol, polygon_symbol from watchlist",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 880,
        "wires": [
            [
                "fcd1b6ef12e43938"
            ]
        ]
    },
    {
        "id": "1a1916fa163c7bc2",
        "type": "inject",
        "z": "9e77b9fe40116d31",
        "name": "GO",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 600,
        "wires": [
            [
                "fead8650eab1130a"
            ]
        ]
    },
    {
        "id": "240c5815830deb43",
        "type": "inject",
        "z": "9e77b9fe40116d31",
        "name": "GO ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "2ae12c3e1a858f3b"
            ]
        ]
    },
    {
        "id": "5db6ac18d27be49f",
        "type": "inject",
        "z": "9e77b9fe40116d31",
        "name": "Truncate Watchlist",
        "props": [
            {
                "p": "query",
                "v": "truncate table watchlist",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 320,
        "wires": [
            [
                "80786727c9e73511"
            ]
        ]
    },
    {
        "id": "80786727c9e73511",
        "type": "postgresql",
        "z": "9e77b9fe40116d31",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 360,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "0132bdc0f366bb4c",
        "type": "comment",
        "z": "9e77b9fe40116d31",
        "name": "Add new tickers",
        "info": "",
        "x": 160,
        "y": 400,
        "wires": []
    },
    {
        "id": "9c9547257e8fdefc",
        "type": "inject",
        "z": "9e77b9fe40116d31",
        "name": "Add new tickers to Markets ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 440,
        "wires": [
            [
                "f6992ebaf7bfefdd"
            ]
        ]
    },
    {
        "id": "321992a540c80752",
        "type": "split",
        "z": "9e77b9fe40116d31",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 590,
        "y": 440,
        "wires": [
            [
                "ab32b493be535849"
            ]
        ]
    },
    {
        "id": "ab32b493be535849",
        "type": "function",
        "z": "9e77b9fe40116d31",
        "name": "insert markets query",
        "func": "let symbol = msg.payload\nmsg.query = \"insert into markets (symbol) values ('\" +symbol+ \"');\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 440,
        "wires": [
            [
                "f87d09bbe919be1b"
            ]
        ]
    },
    {
        "id": "f6992ebaf7bfefdd",
        "type": "function",
        "z": "9e77b9fe40116d31",
        "name": "market tickers",
        "func": "// comma separated list of tickers. No spaces.\nmsg.payload = \"SPY,QQQ,TSLA,VXX,BAC,GOOG\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "321992a540c80752"
            ]
        ]
    },
    {
        "id": "f87d09bbe919be1b",
        "type": "postgresql",
        "z": "9e77b9fe40116d31",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 940,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "390a78559bf734a5",
        "type": "inject",
        "z": "9e77b9fe40116d31",
        "name": "Add new tickers to Watchlist",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 480,
        "wires": [
            [
                "466dee6ce5fdd8f3"
            ]
        ]
    },
    {
        "id": "a0111efe786f22dc",
        "type": "split",
        "z": "9e77b9fe40116d31",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 590,
        "y": 480,
        "wires": [
            [
                "65f56b3022a6c502"
            ]
        ]
    },
    {
        "id": "65f56b3022a6c502",
        "type": "function",
        "z": "9e77b9fe40116d31",
        "name": "insert watchlist query",
        "func": "let symbol = msg.payload\nmsg.query = \"insert into watchlist (symbol) values ('\" +symbol+ \"');\"\nnode.warn(msg.query)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 480,
        "wires": [
            [
                "5d9fb44f068a979b"
            ]
        ]
    },
    {
        "id": "466dee6ce5fdd8f3",
        "type": "function",
        "z": "9e77b9fe40116d31",
        "name": "watchlist tickers",
        "func": "// comma separated list of tickers. No spaces.\nmsg.payload = \"AAPL,JPM,BAC,GLD\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 480,
        "wires": [
            [
                "a0111efe786f22dc"
            ]
        ]
    },
    {
        "id": "5d9fb44f068a979b",
        "type": "postgresql",
        "z": "9e77b9fe40116d31",
        "name": "postgres",
        "query": "",
        "postgreSQLConfig": "7455395cf269fb2b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 940,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "2ae12c3e1a858f3b",
        "type": "function",
        "z": "9e77b9fe40116d31",
        "name": "update watchlist names from alpaca_assets",
        "func": "msg.query = \"update markets set name = alpaca_assets.name FROM alpaca_assets where alpaca_assets.symbol = markets.symbol\"\nnode.warn(msg.query)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 640,
        "wires": [
            [
                "4c4ff33f4bc87e8d"
            ]
        ]
    },
    {
        "id": "7455395cf269fb2b",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "docker",
        "userFieldType": "str",
        "password": "docker",
        "passwordFieldType": "str"
    },
    {
        "id": "8a426fd8cd37146c",
        "type": "polygon-account",
        "name": "Polygon Key"
    }
]