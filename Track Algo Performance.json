[
    {
        "id": "6be79688bb19cc3d",
        "type": "tab",
        "label": "Track Algo Performance",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b9f5d755312691c0",
        "type": "comment",
        "z": "6be79688bb19cc3d",
        "name": "Update Gains/Losses Daily - Portfolio id: 1",
        "info": "",
        "x": 220,
        "y": 320,
        "wires": []
    },
    {
        "id": "7807af04fc4782f4",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "53728b47003f9caf",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 990,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "43a98264cb986a32",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "update algo table",
        "func": "let id = msg.portfolioid\n\nlet d = Date.now()\nlet gain = msg.gain\nlet gaintoday = msg.gaintoday\n\nlet p = flow.get(\"portfolio\")\nlet name = flow.get(\"name\")\nlet trades = flow.get(\"trades\")\nlet status = flow.get(\"status\")\n\n\n\n\nlet sql = \"update algo set gainloss = \" +gain+ \", gain_today = \"+gaintoday+ \" where id = \" +id+ \";\"\nnode.warn(sql)\nmsg.topic = sql\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1140,
        "wires": [
            [
                "7807af04fc4782f4",
                "959b0c1a60f26866"
            ]
        ]
    },
    {
        "id": "93bb4efeed1c66aa",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Calculate Gains for Portfolio 1",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "portfolioid",
                "v": "1",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "05 06 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select sum(gain_today) as a, sum(gain) as b from sub_portfolio where id = 1",
        "x": 230,
        "y": 1140,
        "wires": [
            [
                "7a547d528af1ef13"
            ]
        ]
    },
    {
        "id": "7a547d528af1ef13",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 460,
        "y": 1140,
        "wires": [
            [
                "11e43ba2345c8a2e"
            ]
        ]
    },
    {
        "id": "11e43ba2345c8a2e",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "output sums",
        "func": "let gaintoday = 0\nlet gain = 0\nlet portfolio_id = msg.portfolioid\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    gaintoday = msg.payload[i][\"a\"]\n    gain = msg.payload[i][\"b\"]\n    msg.gain = gain\n    msg.gaintoday = gaintoday\n\n}\n\nnode.warn(\"Portfolio id: \" + portfolio_id + \" Gain: \" + msg.gain + \" Gain Today: \" + msg.gaintoday)\n\nlet sql = \"select sum(position) as a from sub_portfolio where id = \" +portfolio_id\nmsg.topic = sql\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1140,
        "wires": [
            [
                "43a98264cb986a32"
            ]
        ]
    },
    {
        "id": "e5b3201a756a6511",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Display Tickers for id = 2",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select *  from  sub_portfolio where id = 1",
        "x": 230,
        "y": 1500,
        "wires": [
            [
                "97c17e17df73e625"
            ]
        ]
    },
    {
        "id": "97c17e17df73e625",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 440,
        "y": 1500,
        "wires": [
            [
                "58b66ad4f757b672"
            ]
        ]
    },
    {
        "id": "58b66ad4f757b672",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "output",
        "func": "let temp = ''\n\nfor (let i = 0; i < msg.payload.length; i++) {\n\n    let ticker = msg.payload[i][\"ticker\"]\n //   node.warn(ticker)\n    temp += ticker+ \"\\n\" \n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1500,
        "wires": [
            [
                "7ba0337d988972e5"
            ]
        ]
    },
    {
        "id": "7ba0337d988972e5",
        "type": "split",
        "z": "6be79688bb19cc3d",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 1500,
        "wires": [
            [
                "fb8e544695760890"
            ]
        ]
    },
    {
        "id": "fb8e544695760890",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "disply payload",
        "func": "node.warn(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "738a89dd9c424406",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "53728b47003f9caf",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 1490,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "8e72a046513f6a43",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "calculate change pct",
        "func": "let sql = \"update algo set gainlosspct = ((gainloss / portfolio)) * 100 where portfolio > 0\"\nnode.warn(sql)\nmsg.topic = sql\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 1140,
        "wires": [
            [
                "738a89dd9c424406"
            ]
        ]
    },
    {
        "id": "959b0c1a60f26866",
        "type": "delay",
        "z": "6be79688bb19cc3d",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1140,
        "y": 1140,
        "wires": [
            [
                "8e72a046513f6a43"
            ]
        ]
    },
    {
        "id": "5d0d1d73508f90f0",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Display Algos",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from algo",
        "x": 190,
        "y": 1560,
        "wires": [
            [
                "10d1cab409d74d95"
            ]
        ]
    },
    {
        "id": "a54d6b5947055b98",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "disply payload",
        "func": "node.warn(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "10d1cab409d74d95",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "53728b47003f9caf",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 350,
        "y": 1560,
        "wires": [
            [
                "a54d6b5947055b98"
            ]
        ]
    },
    {
        "id": "03aeb107efb321cf",
        "type": "comment",
        "z": "6be79688bb19cc3d",
        "name": "Update the Algo Performance Tables",
        "info": "",
        "x": 200,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e46c629e2986ea71",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Display Tickers for id = 1",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select *  from  sub_portfolio where id = 1",
        "x": 230,
        "y": 1620,
        "wires": [
            [
                "3687696d7573f05b"
            ]
        ]
    },
    {
        "id": "3687696d7573f05b",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 440,
        "y": 1620,
        "wires": [
            [
                "0ad774ce1815c7aa"
            ]
        ]
    },
    {
        "id": "0ad774ce1815c7aa",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "output",
        "func": "let temp = ''\n\nfor (let i = 0; i < msg.payload.length; i++) {\n\n    let ticker = msg.payload[i][\"ticker\"]\n //   node.warn(ticker)\n    temp += ticker+ \"\\n\" \n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1620,
        "wires": [
            [
                "073be2ba6c0883b5"
            ]
        ]
    },
    {
        "id": "073be2ba6c0883b5",
        "type": "split",
        "z": "6be79688bb19cc3d",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 1620,
        "wires": [
            [
                "1aec6e5a44ab633b"
            ]
        ]
    },
    {
        "id": "1aec6e5a44ab633b",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "disply payload",
        "func": "node.warn(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "ee24ef7990398a39",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Display ALGO table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from algo ",
        "x": 210,
        "y": 1680,
        "wires": [
            [
                "ea61648a421d09f1"
            ]
        ]
    },
    {
        "id": "ea61648a421d09f1",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "53728b47003f9caf",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 370,
        "y": 1680,
        "wires": [
            [
                "4948c4d6889c8961"
            ]
        ]
    },
    {
        "id": "4948c4d6889c8961",
        "type": "debug",
        "z": "6be79688bb19cc3d",
        "name": "debug 67",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1680,
        "wires": []
    },
    {
        "id": "ce599e923660e3f5",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Display Sub Portfolio table where id = 1",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from  sub_portfolio where id = 1",
        "x": 250,
        "y": 80,
        "wires": [
            [
                "512ec4af50be9b84"
            ]
        ]
    },
    {
        "id": "512ec4af50be9b84",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 480,
        "y": 80,
        "wires": [
            [
                "66b084619b2ea769"
            ]
        ]
    },
    {
        "id": "8330867c57046b5a",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Display Sub Portfolio table where id = 2",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from  sub_portfolio where id = 2",
        "x": 250,
        "y": 120,
        "wires": [
            [
                "09e77630cd744142"
            ]
        ]
    },
    {
        "id": "09e77630cd744142",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 480,
        "y": 120,
        "wires": [
            [
                "03299337cc779d2f"
            ]
        ]
    },
    {
        "id": "814cf16f17759640",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Display Sub Portfolio table where id = 3",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from  sub_portfolio where id = 3",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "2e8da2b6ff312b2c"
            ]
        ]
    },
    {
        "id": "2e8da2b6ff312b2c",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 480,
        "y": 160,
        "wires": [
            [
                "edcbac4d64e84c3a"
            ]
        ]
    },
    {
        "id": "b2921ed6d2df065c",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Display Sub Portfolio table where id = 4",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from  sub_portfolio where id = 4",
        "x": 250,
        "y": 200,
        "wires": [
            [
                "c6292413b9507e59"
            ]
        ]
    },
    {
        "id": "c6292413b9507e59",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 480,
        "y": 200,
        "wires": [
            [
                "da81ec30f4dfaa91"
            ]
        ]
    },
    {
        "id": "d2686e4b7d8f210b",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Update Portfolio at 6 am",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "portfolioid",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 190,
        "y": 380,
        "wires": [
            [
                "5dfac3d758aea0fb"
            ]
        ]
    },
    {
        "id": "3e88c16f525d32ab",
        "type": "loop",
        "z": "6be79688bb19cc3d",
        "name": "",
        "kind": "fcnt",
        "count": "91",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-index",
        "finalPayload": "final-count",
        "x": 450,
        "y": 440,
        "wires": [
            [],
            [
                "21a416fde5037457"
            ]
        ]
    },
    {
        "id": "21a416fde5037457",
        "type": "delay",
        "z": "6be79688bb19cc3d",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 620,
        "y": 440,
        "wires": [
            [
                "5dfac3d758aea0fb"
            ]
        ]
    },
    {
        "id": "66b084619b2ea769",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "Disply Portfolio ID 1",
        "func": "let cnt = msg.payload.length\nnode.warn(\"Count: \" +cnt)\nlet ticker = ''\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    ticker = msg.payload[i][\"ticker\"]\n    //node.warn(ticker)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "03299337cc779d2f",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "Disply Portfolio ID 2",
        "func": "let cnt = msg.payload.length\nnode.warn(\"Count: \" +cnt)\nlet ticker = ''\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    ticker = msg.payload[i][\"ticker\"]\n    node.warn(ticker)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "edcbac4d64e84c3a",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "Disply Portfolio ID 3",
        "func": "let cnt = msg.payload.length\nnode.warn(\"Count: \" +cnt)\nlet ticker = ''\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    ticker = msg.payload[i][\"ticker\"]\n    node.warn(ticker)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "da81ec30f4dfaa91",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "Disply Portfolio ID 4",
        "func": "let cnt = msg.payload.length\nnode.warn(\"Count: \" +cnt)\nlet ticker = ''\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    ticker = msg.payload[i][\"ticker\"]\n    node.warn(ticker)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "3821ddc25b282dbb",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Display Sub Portfolio table where id = 2",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "delete from sub_portfolio where id = 2 and ticker <> 'SPY'",
        "x": 250,
        "y": 260,
        "wires": [
            [
                "f879e2c93b6458bc"
            ]
        ]
    },
    {
        "id": "f879e2c93b6458bc",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 480,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "6536d86f4d4114ce",
        "type": "alpaca-position-query",
        "z": "6be79688bb19cc3d",
        "conf": "0c86a5f06a42b505",
        "x": 1090,
        "y": 380,
        "wires": [
            [
                "c46e45eb6c2ff745"
            ]
        ]
    },
    {
        "id": "c46e45eb6c2ff745",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "update positions",
        "func": "let sql = ''\nlet portfolio_id = msg.portfolioid \n\nlet ticker = msg.ticker\nlet symbol = ''\nlet qty = ''\nlet temp = ''\nlet position = 0\n\nfor (var i=0;i<msg.payload.length;i++) \n\n{\n\n    let asset_id = msg.payload[i][\"asset_id\"]\n    let symbol = msg.payload[i][\"symbol\"]\n    let exchange = msg.payload[i][\"exchange\"]\n    let asset_class = msg.payload[i][\"asset_class\"]\n    let asset_marginable = msg.payload[i][\"asset_marginable\"]\n    let qty = msg.payload[i][\"qty\"]\n    let avg_entry_price = msg.payload[i][\"avg_entry_price\"]\n    let side = msg.payload[i][\"side\"]\n    let market_value = msg.payload[i][\"market_value\"]\n    let cost_basis = msg.payload[i][\"cost_basis\"]\n    let unrealized_pl = msg.payload[i][\"unrealized_pl\"]\n    let unrealized_plpc = msg.payload[i][\"unrealized_plpc\"]\n    let unrealized_intraday_pl = msg.payload[i][\"unrealized_intraday_pl\"]\n    let unrealized_intraday_plpc = msg.payload[i][\"unrealized_intraday_plpc\"]\n    let current_price = msg.payload[i][\"current_price\"]\n    let lastday_price = msg.payload[i][\"lastday_price\"]\n    let change_today = msg.payload[i][\"change_today\"]\n    let qty_available = msg.payload[i][\"qty_available\"]\n\n    if (symbol === ticker){\n    position = (qty * current_price)\n    sql = \"update sub_portfolio set position = \" +position+ \",qty = \" +qty+ \", gain_today = \" +unrealized_intraday_pl+ \", pctgain_today = \" +unrealized_intraday_plpc +\", gain = \" +unrealized_pl+ \", pctgain = \" +unrealized_plpc+ \" where ticker = '\" +symbol+ \"' and id = \" +portfolio_id+ \";\\n\" \n    }\n}\n\nmsg.topic = sql\nnode.warn(sql)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 380,
        "wires": [
            [
                "9bdf43280787ef89"
            ]
        ]
    },
    {
        "id": "5dfac3d758aea0fb",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "get tickers 1 at a time",
        "func": "let cnt = msg.payload\ncnt = cnt + 1\nlet id = msg.portfolioid \n\nlet sql = \"select * from  sub_portfolio where id = \" +id+ \" limit \" +cnt+ \",1\"\nmsg.topic = sql\n//node.warn(msg.topic)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 380,
        "wires": [
            [
                "3e88c16f525d32ab",
                "5d206e9738f9c937"
            ]
        ]
    },
    {
        "id": "5d206e9738f9c937",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 640,
        "y": 380,
        "wires": [
            [
                "cf1beb56b1e46b60"
            ]
        ]
    },
    {
        "id": "cf1beb56b1e46b60",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "Get tickers for Portfolio ID 1",
        "func": "let ticker = ''\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    ticker = msg.payload[i][\"ticker\"]\n    //node.warn(ticker)\n}\n\nmsg.ticker = ticker\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 380,
        "wires": [
            [
                "6536d86f4d4114ce"
            ]
        ]
    },
    {
        "id": "9bdf43280787ef89",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 1480,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "24a0b1f1d74219b9",
        "type": "comment",
        "z": "6be79688bb19cc3d",
        "name": "set fixed count loop below = count",
        "info": "",
        "x": 940,
        "y": 80,
        "wires": []
    },
    {
        "id": "9dfc8acee8a0b0c0",
        "type": "comment",
        "z": "6be79688bb19cc3d",
        "name": "Update Gains/Losses Daily - Portfolio id: 2",
        "info": "",
        "x": 220,
        "y": 500,
        "wires": []
    },
    {
        "id": "8797be2f18df643a",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Update Portfolio at 6 am",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "portfolioid",
                "v": "2",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "2369bb91cadcb114"
            ]
        ]
    },
    {
        "id": "4fb3426646566353",
        "type": "loop",
        "z": "6be79688bb19cc3d",
        "name": "",
        "kind": "fcnt",
        "count": "1",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-index",
        "finalPayload": "final-count",
        "x": 450,
        "y": 620,
        "wires": [
            [],
            [
                "4d28530cc219d041"
            ]
        ]
    },
    {
        "id": "4d28530cc219d041",
        "type": "delay",
        "z": "6be79688bb19cc3d",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 620,
        "y": 620,
        "wires": [
            [
                "2369bb91cadcb114"
            ]
        ]
    },
    {
        "id": "31a5c60b589978fb",
        "type": "alpaca-position-query",
        "z": "6be79688bb19cc3d",
        "conf": "0c86a5f06a42b505",
        "x": 1090,
        "y": 560,
        "wires": [
            [
                "e027a2d42d0a1daa"
            ]
        ]
    },
    {
        "id": "e027a2d42d0a1daa",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "update positions",
        "func": "let sql = ''\nlet portfolio_id = msg.portfolioid \n// set the portfolio id\nlet ticker = msg.ticker\nlet symbol = ''\nlet qty = ''\nlet temp = ''\nlet position = 0\n\nfor (var i=0;i<msg.payload.length;i++) \n\n{\n\n    let asset_id = msg.payload[i][\"asset_id\"]\n    let symbol = msg.payload[i][\"symbol\"]\n    let exchange = msg.payload[i][\"exchange\"]\n    let asset_class = msg.payload[i][\"asset_class\"]\n    let asset_marginable = msg.payload[i][\"asset_marginable\"]\n    let qty = msg.payload[i][\"qty\"]\n    let avg_entry_price = msg.payload[i][\"avg_entry_price\"]\n    let side = msg.payload[i][\"side\"]\n    let market_value = msg.payload[i][\"market_value\"]\n    let cost_basis = msg.payload[i][\"cost_basis\"]\n    let unrealized_pl = msg.payload[i][\"unrealized_pl\"]\n    let unrealized_plpc = msg.payload[i][\"unrealized_plpc\"]\n    let unrealized_intraday_pl = msg.payload[i][\"unrealized_intraday_pl\"]\n    let unrealized_intraday_plpc = msg.payload[i][\"unrealized_intraday_plpc\"]\n    let current_price = msg.payload[i][\"current_price\"]\n    let lastday_price = msg.payload[i][\"lastday_price\"]\n    let change_today = msg.payload[i][\"change_today\"]\n    let qty_available = msg.payload[i][\"qty_available\"]\n\n    if (symbol === ticker){\n    position = (qty * current_price)\n    sql = \"update sub_portfolio set position = \" +position+ \",qty = \" +qty+ \", gain_today = \" +unrealized_intraday_pl+ \", pctgain_today = \" +unrealized_intraday_plpc +\", gain = \" +unrealized_pl+ \", pctgain = \" +unrealized_plpc+ \" where ticker = '\" +symbol+ \"' and id = \" +portfolio_id+ \";\\n\" \n    }\n}\n\nmsg.topic = sql\nnode.warn(sql)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 560,
        "wires": [
            [
                "71e4646f854c9b47"
            ]
        ]
    },
    {
        "id": "2369bb91cadcb114",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "get tickers 1 at a time",
        "func": "let cnt = msg.payload\ncnt = cnt + 1\nlet id = msg.portfolioid \n\nlet sql = \"select * from  sub_portfolio where id = \" +id+ \" limit \" +cnt+ \",1\"\nmsg.topic = sql\n//node.warn(msg.topic)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 560,
        "wires": [
            [
                "4fb3426646566353",
                "aecc2aee5017fcd5"
            ]
        ]
    },
    {
        "id": "aecc2aee5017fcd5",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 640,
        "y": 560,
        "wires": [
            [
                "a42b6218db8ccbaa"
            ]
        ]
    },
    {
        "id": "a42b6218db8ccbaa",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "Get tickers for Portfolio ID 2",
        "func": "let ticker = ''\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    ticker = msg.payload[i][\"ticker\"]\n    //node.warn(ticker)\n}\n\nmsg.ticker = ticker\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 560,
        "wires": [
            [
                "31a5c60b589978fb"
            ]
        ]
    },
    {
        "id": "71e4646f854c9b47",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 1480,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "2deed295dab9dc89",
        "type": "comment",
        "z": "6be79688bb19cc3d",
        "name": "Update Gains/Losses Daily - Portfolio id: 3",
        "info": "",
        "x": 220,
        "y": 700,
        "wires": []
    },
    {
        "id": "3301e852ce6b61b8",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Update Portfolio at 6 am",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "portfolioid",
                "v": "3",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 190,
        "y": 760,
        "wires": [
            [
                "53dfa842d7d8d318"
            ]
        ]
    },
    {
        "id": "3572de55ad61db8e",
        "type": "loop",
        "z": "6be79688bb19cc3d",
        "name": "",
        "kind": "fcnt",
        "count": "1",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-index",
        "finalPayload": "final-count",
        "x": 450,
        "y": 820,
        "wires": [
            [],
            [
                "50b14d82ffb23150"
            ]
        ]
    },
    {
        "id": "50b14d82ffb23150",
        "type": "delay",
        "z": "6be79688bb19cc3d",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 620,
        "y": 820,
        "wires": [
            [
                "53dfa842d7d8d318"
            ]
        ]
    },
    {
        "id": "97fe99d46ad4386a",
        "type": "alpaca-position-query",
        "z": "6be79688bb19cc3d",
        "conf": "0c86a5f06a42b505",
        "x": 1110,
        "y": 760,
        "wires": [
            [
                "a7640443c25acf19"
            ]
        ]
    },
    {
        "id": "a7640443c25acf19",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "update positions",
        "func": "let sql = ''\nlet portfolio_id = msg.portfolioid \n\nlet ticker = msg.ticker\nlet symbol = ''\nlet qty = ''\nlet temp = ''\nlet position = 0\n\nfor (var i=0;i<msg.payload.length;i++) \n\n{\n\n    let asset_id = msg.payload[i][\"asset_id\"]\n    let symbol = msg.payload[i][\"symbol\"]\n    let exchange = msg.payload[i][\"exchange\"]\n    let asset_class = msg.payload[i][\"asset_class\"]\n    let asset_marginable = msg.payload[i][\"asset_marginable\"]\n    let qty = msg.payload[i][\"qty\"]\n    let avg_entry_price = msg.payload[i][\"avg_entry_price\"]\n    let side = msg.payload[i][\"side\"]\n    let market_value = msg.payload[i][\"market_value\"]\n    let cost_basis = msg.payload[i][\"cost_basis\"]\n    let unrealized_pl = msg.payload[i][\"unrealized_pl\"]\n    let unrealized_plpc = msg.payload[i][\"unrealized_plpc\"]\n    let unrealized_intraday_pl = msg.payload[i][\"unrealized_intraday_pl\"]\n    let unrealized_intraday_plpc = msg.payload[i][\"unrealized_intraday_plpc\"]\n    let current_price = msg.payload[i][\"current_price\"]\n    let lastday_price = msg.payload[i][\"lastday_price\"]\n    let change_today = msg.payload[i][\"change_today\"]\n    let qty_available = msg.payload[i][\"qty_available\"]\n\n    if (symbol === ticker){\n    position = (qty * current_price)\n    sql = \"update sub_portfolio set position = \" +position+ \",qty = \" +qty+ \", gain_today = \" +unrealized_intraday_pl+ \", pctgain_today = \" +unrealized_intraday_plpc +\", gain = \" +unrealized_pl+ \", pctgain = \" +unrealized_plpc+ \" where ticker = '\" +symbol+ \"' and id = \" +portfolio_id+ \";\\n\" \n    }\n}\n\nmsg.topic = sql\nnode.warn(sql)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 760,
        "wires": [
            [
                "b1604ecf77cc10b3"
            ]
        ]
    },
    {
        "id": "53dfa842d7d8d318",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "get tickers 1 at a time",
        "func": "let cnt = msg.payload\ncnt = cnt + 1\nlet id = msg.portfolioid \nlet sql = \"select * from  sub_portfolio where id = \" +id+ \" limit \" +cnt+ \",1\"\nmsg.topic = sql\n//node.warn(msg.topic)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 760,
        "wires": [
            [
                "3572de55ad61db8e",
                "d5f7e34357b5a770"
            ]
        ]
    },
    {
        "id": "d5f7e34357b5a770",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 640,
        "y": 760,
        "wires": [
            [
                "a1475ead8edb20c4"
            ]
        ]
    },
    {
        "id": "a1475ead8edb20c4",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "Get ticker for  Portfolio ID 3",
        "func": "let ticker = ''\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    ticker = msg.payload[i][\"ticker\"]\n    //node.warn(ticker)\n}\n\nmsg.ticker = ticker\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 760,
        "wires": [
            [
                "97fe99d46ad4386a"
            ]
        ]
    },
    {
        "id": "b1604ecf77cc10b3",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 1500,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "fcd009d045403db1",
        "type": "comment",
        "z": "6be79688bb19cc3d",
        "name": "Update Gains/Losses Daily - Portfolio id: 4",
        "info": "",
        "x": 220,
        "y": 880,
        "wires": []
    },
    {
        "id": "3469979828e55504",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Update Portfolio at 6 am",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "portfolioid",
                "v": "4",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 190,
        "y": 940,
        "wires": [
            [
                "75d4c8a0400a46c9"
            ]
        ]
    },
    {
        "id": "a80a3bf6fa95eb5e",
        "type": "loop",
        "z": "6be79688bb19cc3d",
        "name": "",
        "kind": "fcnt",
        "count": "1",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "enum",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-index",
        "finalPayload": "final-count",
        "x": 450,
        "y": 1000,
        "wires": [
            [],
            [
                "decb671b9c442a2f"
            ]
        ]
    },
    {
        "id": "decb671b9c442a2f",
        "type": "delay",
        "z": "6be79688bb19cc3d",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 620,
        "y": 1000,
        "wires": [
            [
                "75d4c8a0400a46c9"
            ]
        ]
    },
    {
        "id": "1859a23e616062a5",
        "type": "alpaca-position-query",
        "z": "6be79688bb19cc3d",
        "conf": "0c86a5f06a42b505",
        "x": 1130,
        "y": 940,
        "wires": [
            [
                "5e20abd801afa18e"
            ]
        ]
    },
    {
        "id": "5e20abd801afa18e",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "update positions",
        "func": "let sql = ''\nlet portfolio_id = msg.portfolioid\n\nlet ticker = msg.ticker\nlet symbol = ''\nlet qty = ''\nlet temp = ''\nlet position = 0\n\nfor (var i=0;i<msg.payload.length;i++) \n\n{\n\n    let asset_id = msg.payload[i][\"asset_id\"]\n    let symbol = msg.payload[i][\"symbol\"]\n    let exchange = msg.payload[i][\"exchange\"]\n    let asset_class = msg.payload[i][\"asset_class\"]\n    let asset_marginable = msg.payload[i][\"asset_marginable\"]\n    let qty = msg.payload[i][\"qty\"]\n    let avg_entry_price = msg.payload[i][\"avg_entry_price\"]\n    let side = msg.payload[i][\"side\"]\n    let market_value = msg.payload[i][\"market_value\"]\n    let cost_basis = msg.payload[i][\"cost_basis\"]\n    let unrealized_pl = msg.payload[i][\"unrealized_pl\"]\n    let unrealized_plpc = msg.payload[i][\"unrealized_plpc\"]\n    let unrealized_intraday_pl = msg.payload[i][\"unrealized_intraday_pl\"]\n    let unrealized_intraday_plpc = msg.payload[i][\"unrealized_intraday_plpc\"]\n    let current_price = msg.payload[i][\"current_price\"]\n    let lastday_price = msg.payload[i][\"lastday_price\"]\n    let change_today = msg.payload[i][\"change_today\"]\n    let qty_available = msg.payload[i][\"qty_available\"]\n\n    if (symbol === ticker){\n    position = (qty * current_price)\n    sql = \"update sub_portfolio set position = \" +position+ \",qty = \" +qty+ \", gain_today = \" +unrealized_intraday_pl+ \", pctgain_today = \" +unrealized_intraday_plpc +\", gain = \" +unrealized_pl+ \", pctgain = \" +unrealized_plpc+ \" where ticker = '\" +symbol+ \"' and id = \" +portfolio_id+ \";\\n\" \n    }\n}\n\nmsg.topic = sql\nnode.warn(sql)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 940,
        "wires": [
            [
                "4eedba1e7c5d7cb9"
            ]
        ]
    },
    {
        "id": "75d4c8a0400a46c9",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "get tickers 1 at a time",
        "func": "let cnt = msg.payload\ncnt = cnt + 100\nlet id = msg.portfolioid\n\nlet sql = \"select * from  sub_portfolio where id = \" +id+ \" limit \" +cnt+ \",1\"\nmsg.topic = sql\n//node.warn(msg.topic)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 940,
        "wires": [
            [
                "a80a3bf6fa95eb5e",
                "335f0367be55ca27"
            ]
        ]
    },
    {
        "id": "335f0367be55ca27",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 640,
        "y": 940,
        "wires": [
            [
                "5b59bf0f36b21370"
            ]
        ]
    },
    {
        "id": "5b59bf0f36b21370",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "Get ticker for potfolio ID 4",
        "func": "let ticker = ''\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    ticker = msg.payload[i][\"ticker\"]\n    //node.warn(ticker)\n}\n\nmsg.ticker = ticker\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 940,
        "wires": [
            [
                "1859a23e616062a5"
            ]
        ]
    },
    {
        "id": "4eedba1e7c5d7cb9",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 1520,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "e078ee5a400fdd05",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Calculate Gains for Portfolio 2",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "portfolioid",
                "v": "2",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "05 06 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select sum(gain_today) as a, sum(gain) as b from sub_portfolio where id = 2",
        "x": 230,
        "y": 1200,
        "wires": [
            [
                "066b03ed1579dc53"
            ]
        ]
    },
    {
        "id": "024aa75b7d9d3a31",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Calculate Gains for Portfolio 3",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "portfolioid",
                "v": "3",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "05 06 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select sum(gain_today) as a, sum(gain) as b from sub_portfolio where id = 3",
        "x": 230,
        "y": 1260,
        "wires": [
            [
                "eb01cfdf35364e80"
            ]
        ]
    },
    {
        "id": "adde067f4655e9a3",
        "type": "inject",
        "z": "6be79688bb19cc3d",
        "name": "Calculate Gains for Portfolio 4",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "portfolioid",
                "v": "4",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "05 06 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select sum(gain_today) as a, sum(gain) as b from sub_portfolio where id = 4",
        "x": 230,
        "y": 1320,
        "wires": [
            [
                "3af2e6b61bca7595"
            ]
        ]
    },
    {
        "id": "248b071ddb130424",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "53728b47003f9caf",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 990,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "034da89061ee08f1",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "update algo table",
        "func": "let id = msg.portfolioid\n\nlet d = Date.now()\nlet gain = msg.gain\nlet gaintoday = msg.gaintoday\n\nlet p = flow.get(\"portfolio\")\nlet name = flow.get(\"name\")\nlet trades = flow.get(\"trades\")\nlet status = flow.get(\"status\")\n\n\n\n\nlet sql = \"update algo set gainloss = \" +gain+ \", gain_today = \"+gaintoday+ \" where id = \" +id+ \";\"\nnode.warn(sql)\nmsg.topic = sql\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1200,
        "wires": [
            [
                "248b071ddb130424",
                "cf80cdfa7cbf5604"
            ]
        ]
    },
    {
        "id": "066b03ed1579dc53",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 460,
        "y": 1200,
        "wires": [
            [
                "c2e16d092db2c95e"
            ]
        ]
    },
    {
        "id": "c2e16d092db2c95e",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "output sums",
        "func": "let gaintoday = 0\nlet gain = 0\nlet portfolio_id = msg.portfolioid\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    gaintoday = msg.payload[i][\"a\"]\n    gain = msg.payload[i][\"b\"]\n    msg.gain = gain\n    msg.gaintoday = gaintoday\n\n}\n\nnode.warn(\"Portfolio id: \" + portfolio_id + \" Gain: \" + msg.gain + \" Gain Today: \" + msg.gaintoday)\n\nlet sql = \"select sum(position) as a from sub_portfolio where id = \" +portfolio_id\nmsg.topic = sql\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1200,
        "wires": [
            [
                "034da89061ee08f1"
            ]
        ]
    },
    {
        "id": "ccdc415442802e84",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "53728b47003f9caf",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 1490,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "ccba92b9aad2fdb7",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "calculate change pct",
        "func": "let sql = \"update algo set gainlosspct = ((gainloss / portfolio)) * 100 where portfolio > 0\"\nnode.warn(sql)\nmsg.topic = sql\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 1200,
        "wires": [
            [
                "ccdc415442802e84"
            ]
        ]
    },
    {
        "id": "cf80cdfa7cbf5604",
        "type": "delay",
        "z": "6be79688bb19cc3d",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1140,
        "y": 1200,
        "wires": [
            [
                "ccba92b9aad2fdb7"
            ]
        ]
    },
    {
        "id": "5aae13a2b3ea492c",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "53728b47003f9caf",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 990,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "6240b35a55e2fb27",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "update algo table",
        "func": "let id = msg.portfolioid\n\nlet d = Date.now()\nlet gain = msg.gain\nlet gaintoday = msg.gaintoday\n\nlet p = flow.get(\"portfolio\")\nlet name = flow.get(\"name\")\nlet trades = flow.get(\"trades\")\nlet status = flow.get(\"status\")\n\n\n\n\nlet sql = \"update algo set gainloss = \" +gain+ \", gain_today = \"+gaintoday+ \" where id = \" +id+ \";\"\nnode.warn(sql)\nmsg.topic = sql\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1260,
        "wires": [
            [
                "5aae13a2b3ea492c",
                "3ddbe893c5862a1d"
            ]
        ]
    },
    {
        "id": "eb01cfdf35364e80",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 460,
        "y": 1260,
        "wires": [
            [
                "413827318d576250"
            ]
        ]
    },
    {
        "id": "413827318d576250",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "output sums",
        "func": "let gaintoday = 0\nlet gain = 0\nlet portfolio_id = msg.portfolioid\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    gaintoday = msg.payload[i][\"a\"]\n    gain = msg.payload[i][\"b\"]\n    msg.gain = gain\n    msg.gaintoday = gaintoday\n\n}\n\nnode.warn(\"Portfolio id: \" + portfolio_id + \" Gain: \" + msg.gain + \" Gain Today: \" + msg.gaintoday)\n\nlet sql = \"select sum(position) as a from sub_portfolio where id = \" +portfolio_id\nmsg.topic = sql\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1260,
        "wires": [
            [
                "6240b35a55e2fb27"
            ]
        ]
    },
    {
        "id": "8d1582a3d788a382",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "53728b47003f9caf",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 1490,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "96c17764255a5839",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "calculate change pct",
        "func": "let sql = \"update algo set gainlosspct = ((gainloss / portfolio)) * 100 where portfolio > 0\"\nnode.warn(sql)\nmsg.topic = sql\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 1260,
        "wires": [
            [
                "8d1582a3d788a382"
            ]
        ]
    },
    {
        "id": "3ddbe893c5862a1d",
        "type": "delay",
        "z": "6be79688bb19cc3d",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1140,
        "y": 1260,
        "wires": [
            [
                "96c17764255a5839"
            ]
        ]
    },
    {
        "id": "e4fac47233e0a6a6",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "53728b47003f9caf",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 990,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "2ccea1fa702c46bc",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "update algo table",
        "func": "let id = msg.portfolioid\n\nlet d = Date.now()\nlet gain = msg.gain\nlet gaintoday = msg.gaintoday\n\nlet p = flow.get(\"portfolio\")\nlet name = flow.get(\"name\")\nlet trades = flow.get(\"trades\")\nlet status = flow.get(\"status\")\n\n\n\n\nlet sql = \"update algo set gainloss = \" +gain+ \", gain_today = \"+gaintoday+ \" where id = \" +id+ \";\"\nnode.warn(sql)\nmsg.topic = sql\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1320,
        "wires": [
            [
                "e4fac47233e0a6a6",
                "d64ba7f914352332"
            ]
        ]
    },
    {
        "id": "3af2e6b61bca7595",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "d6e22e31a8a67436",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 460,
        "y": 1320,
        "wires": [
            [
                "5c74f0b1b1672e55"
            ]
        ]
    },
    {
        "id": "5c74f0b1b1672e55",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "output sums",
        "func": "let gaintoday = 0\nlet gain = 0\nlet portfolio_id = msg.portfolioid\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    gaintoday = msg.payload[i][\"a\"]\n    gain = msg.payload[i][\"b\"]\n    msg.gain = gain\n    msg.gaintoday = gaintoday\n\n}\n\nnode.warn(\"Portfolio id: \" + portfolio_id + \" Gain: \" + msg.gain + \" Gain Today: \" + msg.gaintoday)\n\nlet sql = \"select sum(position) as a from sub_portfolio where id = \" +portfolio_id\nmsg.topic = sql\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1320,
        "wires": [
            [
                "2ccea1fa702c46bc"
            ]
        ]
    },
    {
        "id": "b1338737989c26e2",
        "type": "sqlite",
        "z": "6be79688bb19cc3d",
        "mydb": "53728b47003f9caf",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 1490,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "cd2738310df1a653",
        "type": "function",
        "z": "6be79688bb19cc3d",
        "name": "calculate change pct",
        "func": "let sql = \"update algo set gainlosspct = ((gainloss / portfolio)) * 100 where portfolio > 0\"\nnode.warn(sql)\nmsg.topic = sql\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 1320,
        "wires": [
            [
                "b1338737989c26e2"
            ]
        ]
    },
    {
        "id": "d64ba7f914352332",
        "type": "delay",
        "z": "6be79688bb19cc3d",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1140,
        "y": 1320,
        "wires": [
            [
                "cd2738310df1a653"
            ]
        ]
    },
    {
        "id": "07b8fe706a0b26b9",
        "type": "comment",
        "z": "6be79688bb19cc3d",
        "name": "Utilities",
        "info": "",
        "x": 130,
        "y": 1420,
        "wires": []
    },
    {
        "id": "53728b47003f9caf",
        "type": "sqlitedb",
        "db": "/data/store/algo",
        "mode": "RWC"
    },
    {
        "id": "d6e22e31a8a67436",
        "type": "sqlitedb",
        "db": "/data/store/portfolios",
        "mode": "RWC"
    },
    {
        "id": "0c86a5f06a42b505",
        "type": "alpaca-account",
        "name": "live",
        "keyId": "PK5NTIWS5NJ8S2MFN6QT",
        "paper": true
    }
]