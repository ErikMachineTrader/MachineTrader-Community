[
    {
        "id": "9e2882682ff3fb98",
        "type": "tab",
        "label": "Algo Performance",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1e02d8078e27e83d",
        "type": "comment",
        "z": "9e2882682ff3fb98",
        "name": "Update portfolio each minute with current positions",
        "info": "",
        "x": 250,
        "y": 500,
        "wires": []
    },
    {
        "id": "b3970b7362171b2b",
        "type": "inject",
        "z": "9e2882682ff3fb98",
        "name": "Run every minute during trading day",
        "props": [],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "4727d0d1e82b4088",
                "a9f6749b8424d9e8"
            ]
        ]
    },
    {
        "id": "4727d0d1e82b4088",
        "type": "function-npm",
        "z": "9e2882682ff3fb98",
        "name": "Get benchmark",
        "func": "let symbol = 'SPY'\n\nlet cnt = 1\n\n/* Setup polygon request arguments */\nmsg.payload = {\n    symbol: symbol,\n    cnt: cnt,\n}\n\n\n//node.warn(symbol)\n//node.warn(msg.payload)\nmsg.symbol = symbol\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 540,
        "wires": [
            [
                "996e5b51a70d1443"
            ]
        ]
    },
    {
        "id": "5edcbf1af1c4e4c6",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "update current_benchmark in portfolio",
        "func": "let item = 0\nlet price = 0\n\nfor (item of msg.payload.results) {\n    price = item.price;\n    \n}\n\n//node.warn(price)\n\nlet sql = \"update portfolio set benchmark = \" +price\n//node.warn(sql)\nmsg.topic = sql\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 540,
        "wires": [
            [
                "b1c4041af7ebe609"
            ]
        ]
    },
    {
        "id": "996e5b51a70d1443",
        "type": "polygon-last-trade-v3",
        "z": "9e2882682ff3fb98",
        "conf": "651f0aab10dc1632",
        "symbol": "",
        "x": 700,
        "y": 540,
        "wires": [
            [
                "5edcbf1af1c4e4c6"
            ]
        ]
    },
    {
        "id": "750e8704692fe17b",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "get price cryptos",
        "func": "let sql = \"select ticker from portfolio where trade_profit is null and ticker like '%/%'\" // where order has not completed and ticker is cryptos \n//let sql = \"select ticker from portfolio where trade_profit is null and ticker not like '%/%'\" // where order has not completed and ticker is NOT cryptos \nmsg.topic = sql\n//node.warn(msg.topic)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 640,
        "wires": [
            [
                "5c9d01e3d802af14"
            ]
        ]
    },
    {
        "id": "5c9d01e3d802af14",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "240e192c65f9b3ce",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 580,
        "y": 640,
        "wires": [
            [
                "8958b5efea8cfbcd"
            ]
        ]
    },
    {
        "id": "8958b5efea8cfbcd",
        "type": "split",
        "z": "9e2882682ff3fb98",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 640,
        "wires": [
            [
                "8482050ada830c13"
            ]
        ]
    },
    {
        "id": "8482050ada830c13",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "pass ticker",
        "func": "msg.ticker = msg.payload[\"ticker\"]\n//node.warn(msg.ticker)\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 640,
        "wires": [
            [
                "72f05197614edd2a"
            ]
        ]
    },
    {
        "id": "72f05197614edd2a",
        "type": "function-npm",
        "z": "9e2882682ff3fb98",
        "name": "Get last trade crypto",
        "func": "let symbol = msg.ticker\n\n// if crypto\nsymbol = \"X:\" +symbol\nsymbol = symbol.replace(\"/\",\"\")\n\nlet cnt = 1\n\n/* Setup polygon request arguments */\nmsg.payload = {\n    symbol: symbol,\n    cnt: cnt,\n}\n\n\n//node.warn(msg.payload)\nmsg.symbol = symbol\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 680,
        "wires": [
            [
                "a351b1eb8f0c488d"
            ]
        ]
    },
    {
        "id": "d259747f662a1598",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "update portfolio crypto",
        "func": "let price = 0\nlet item = 0\n\nfor (item of msg.payload.results) {\n    price = item.price;\n    \n}\n\nlet ticker = msg.ticker \n//node.warn(\"Ticker: \" +ticker+ \" Price: \" +price)\nlet sql = \"update portfolio set current_price = \" +price+ \" where ticker = '\" +ticker+ \"';\"\nmsg.topic = sql\n//node.warn(msg.topic)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 680,
        "wires": [
            [
                "84d91ef226b78dbf"
            ]
        ]
    },
    {
        "id": "a351b1eb8f0c488d",
        "type": "polygon-last-trade-v3",
        "z": "9e2882682ff3fb98",
        "conf": "651f0aab10dc1632",
        "symbol": "",
        "x": 660,
        "y": 680,
        "wires": [
            [
                "d259747f662a1598"
            ]
        ]
    },
    {
        "id": "84d91ef226b78dbf",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "240e192c65f9b3ce",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 1060,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "d95fb4dd296ab091",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "get stock tickers from portfolio",
        "func": "let sql = \"select ticker from portfolio where trade_profit is null and ticker not like '%/%'\" // where order has not completed and ticker is NOT cryptos \nmsg.topic = sql\n//node.warn(msg.topic)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 740,
        "wires": [
            [
                "bdf4c83a88db9634"
            ]
        ]
    },
    {
        "id": "bdf4c83a88db9634",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "240e192c65f9b3ce",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 660,
        "y": 740,
        "wires": [
            [
                "c6fcdb6af17b78f2"
            ]
        ]
    },
    {
        "id": "c6fcdb6af17b78f2",
        "type": "split",
        "z": "9e2882682ff3fb98",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 790,
        "y": 740,
        "wires": [
            [
                "279ddbee0d700601"
            ]
        ]
    },
    {
        "id": "279ddbee0d700601",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "pass ticker",
        "func": "msg.ticker = msg.payload[\"ticker\"]\n//node.warn(msg.ticker)\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 740,
        "wires": [
            [
                "5e04b8ec149395b8"
            ]
        ]
    },
    {
        "id": "5e04b8ec149395b8",
        "type": "function-npm",
        "z": "9e2882682ff3fb98",
        "name": "Get last trade stocks",
        "func": "let symbol = msg.ticker\n\n\nlet cnt = 1\n\n/* Setup polygon request arguments */\nmsg.payload = {\n    symbol: symbol,\n    cnt: cnt,\n}\n\n\n//node.warn(msg.payload)\nmsg.symbol = symbol\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 780,
        "wires": [
            [
                "fea4964d98481a3b"
            ]
        ]
    },
    {
        "id": "ad8067dfc15b1c90",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "update portfolio stocks",
        "func": "let price = 0\nlet item = 0\n\nfor (item of msg.payload.results) {\n    price = item.price;\n    \n}\n\nlet ticker = msg.ticker \n//node.warn(\"Ticker: \" +ticker+ \" Price: \" +price)\nlet sql = \"update portfolio set current_price = \" +price+ \" where ticker = '\" +ticker+ \"';\"\nmsg.topic = sql\n//node.warn(msg.topic)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 780,
        "wires": [
            [
                "b65b87e09a03f832"
            ]
        ]
    },
    {
        "id": "fea4964d98481a3b",
        "type": "polygon-last-trade-v3",
        "z": "9e2882682ff3fb98",
        "conf": "651f0aab10dc1632",
        "symbol": "",
        "x": 660,
        "y": 780,
        "wires": [
            [
                "ad8067dfc15b1c90"
            ]
        ]
    },
    {
        "id": "b65b87e09a03f832",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "240e192c65f9b3ce",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 1080,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "b4e3e4f85e5d2f87",
        "type": "delay",
        "z": "9e2882682ff3fb98",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 180,
        "y": 740,
        "wires": [
            [
                "d95fb4dd296ab091",
                "74a8595e4d779d3b"
            ]
        ]
    },
    {
        "id": "209a4e5c08f6ac52",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "update current_value",
        "func": "let sql = \"update portfolio set current_value = current_position * current_price\"\n\nmsg.topic = sql\n//node.warn(sql)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 840,
        "wires": [
            [
                "a5689cc64bb9d276",
                "db7da98e759414a1"
            ]
        ]
    },
    {
        "id": "74a8595e4d779d3b",
        "type": "delay",
        "z": "9e2882682ff3fb98",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 180,
        "y": 840,
        "wires": [
            [
                "209a4e5c08f6ac52"
            ]
        ]
    },
    {
        "id": "a5689cc64bb9d276",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "240e192c65f9b3ce",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 620,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "36fa7186e9e07fc1",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "update current_profit",
        "func": "let sql = \"update portfolio set current_profit = current_value - position, benchmark_profit = benchmark_end - benchmark_start\"\n\nmsg.topic = sql\n//node.warn(sql)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 840,
        "wires": [
            [
                "7fded1c518b37e71"
            ]
        ]
    },
    {
        "id": "7fded1c518b37e71",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "240e192c65f9b3ce",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 1160,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "ee560e29ca040675",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "update current_profit",
        "func": "let sql = \"update portfolio set current_position = filled_qty where newfilled_qty is null\"\n\nmsg.topic = sql\nnode.warn(sql)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 600,
        "wires": [
            [
                "659781815d671302"
            ]
        ]
    },
    {
        "id": "659781815d671302",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "240e192c65f9b3ce",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 580,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "a9f6749b8424d9e8",
        "type": "delay",
        "z": "9e2882682ff3fb98",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 180,
        "y": 600,
        "wires": [
            [
                "ee560e29ca040675",
                "c1f54262772dcbd9"
            ]
        ]
    },
    {
        "id": "c1f54262772dcbd9",
        "type": "delay",
        "z": "9e2882682ff3fb98",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 180,
        "y": 640,
        "wires": [
            [
                "750e8704692fe17b",
                "b4e3e4f85e5d2f87"
            ]
        ]
    },
    {
        "id": "db7da98e759414a1",
        "type": "delay",
        "z": "9e2882682ff3fb98",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 780,
        "y": 840,
        "wires": [
            [
                "36fa7186e9e07fc1",
                "e180d28d89260a2b"
            ]
        ]
    },
    {
        "id": "b1c4041af7ebe609",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "240e192c65f9b3ce",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 1220,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "fe8feb1c57d41e58",
        "type": "comment",
        "z": "9e2882682ff3fb98",
        "name": "Update algo table with current values - Run through the day",
        "info": "",
        "x": 260,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b8fc1bbd31f478e3",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "update algo from portfolio table",
        "func": "let id = msg.payload[\"id\"]\nlet name = msg.payload[\"name\"]\nlet shortdate = new Date().toJSON().slice(0, 10);\n//node.warn(\"Date: \" +date)\nshortdate = '2022-11-11'\n//node.warn(\"ID: \" +id+ \" Name: \" +name)\n// newfilled_at is null means that the position has not been close and therefore we have an unrealized profit\nlet sql = \"select sum(current_profit) as a, sum(position) as b, sum(benchmark_profit) as c from portfolio where newfilled_at is null and portfolioid = \" +id+ \";\"\n//node.warn(sql)\nmsg.topic = sql\nmsg.id = id\nmsg.name = name\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1340,
        "wires": [
            [
                "5bae6fedb60ef45d"
            ]
        ]
    },
    {
        "id": "4460e4db31959404",
        "type": "inject",
        "z": "9e2882682ff3fb98",
        "name": "Select ids algo ",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select id,name from algo ",
        "x": 180,
        "y": 1340,
        "wires": [
            [
                "d8d44517b42eadce"
            ]
        ]
    },
    {
        "id": "d8d44517b42eadce",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 330,
        "y": 1340,
        "wires": [
            [
                "0d0534994e1a9955"
            ]
        ]
    },
    {
        "id": "0d0534994e1a9955",
        "type": "split",
        "z": "9e2882682ff3fb98",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 450,
        "y": 1340,
        "wires": [
            [
                "b8fc1bbd31f478e3"
            ]
        ]
    },
    {
        "id": "bc5529c52c692942",
        "type": "split",
        "z": "9e2882682ff3fb98",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 470,
        "y": 1380,
        "wires": [
            [
                "2f68323deab853c7"
            ]
        ]
    },
    {
        "id": "2f68323deab853c7",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "update algo table",
        "func": "let name = msg.name\nlet id = msg.id\nlet unrealized_today = msg.payload[\"a\"]\nlet position = msg.payload[\"b\"]\nlet benchmark_profit = msg.payload[\"c\"]\nlet pctgain_today = 0\nlet totalpct = 0\n\n\nif ( unrealized_today === null){\n    unrealized_today = 0\n}\n\nif (benchmark_profit === null) {\n    benchmark_profit = 0\n}\n\nif ( position > 0){\npctgain_today = (unrealized_today / position) }\n\nlet sql = \"update algo set gain_today_unrealized = \" + unrealized_today + \", pctgain_today = \" + pctgain_today + \", totalgainloss = \" + unrealized_today + \", totalpct = \" +pctgain_today+ \", benchmarkgain_today = \" +benchmark_profit+ \" where id = \" +id\n//node.warn(sql)\nmsg.topic = sql\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1380,
        "wires": [
            [
                "a4b88f1cf8db7029",
                "90e595debe0597a1"
            ]
        ]
    },
    {
        "id": "5bae6fedb60ef45d",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "240e192c65f9b3ce",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 340,
        "y": 1380,
        "wires": [
            [
                "bc5529c52c692942"
            ]
        ]
    },
    {
        "id": "35c723822454acbc",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "update algo from portfolio table",
        "func": "let id = msg.payload[\"id\"]\nlet name = msg.payload[\"name\"]\nlet shortdate = new Date().toJSON().slice(0, 10);\n//node.warn(\"Date: \" +date)\nshortdate = '2022-11-11'\n//node.warn(\"ID: \" +id+ \" Name: \" +name)\nlet sql = \"select sum(current_profit) as a, sum(trade_profit) as b, sum(benchmark_profit) as c from portfolio where portfolioid = \" +id+ \" and filled_at like '\" +shortdate+ \"%';\"\n//node.warn(sql)\nmsg.topic = sql\nmsg.id = id\nmsg.name = name\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1540,
        "wires": [
            [
                "4fa30a84238b69c0"
            ]
        ]
    },
    {
        "id": "7384463075bec936",
        "type": "inject",
        "z": "9e2882682ff3fb98",
        "name": "RUN at 3 AM ",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 03 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select id,name from algo ",
        "x": 180,
        "y": 1540,
        "wires": [
            [
                "61ba9dea6d2c59ad"
            ]
        ]
    },
    {
        "id": "61ba9dea6d2c59ad",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 370,
        "y": 1540,
        "wires": [
            [
                "832f3f4d3e56a1da"
            ]
        ]
    },
    {
        "id": "832f3f4d3e56a1da",
        "type": "split",
        "z": "9e2882682ff3fb98",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 490,
        "y": 1540,
        "wires": [
            [
                "35c723822454acbc"
            ]
        ]
    },
    {
        "id": "86a4cfc6b88bc7c9",
        "type": "split",
        "z": "9e2882682ff3fb98",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 1580,
        "wires": [
            [
                "3ffad7f0618cd649"
            ]
        ]
    },
    {
        "id": "3ffad7f0618cd649",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "update algo table",
        "func": "let name = msg.name\nlet id = msg.id\nlet unrealized_today = msg.payload[\"a\"]\nlet realized_today = msg.payload[\"b\"]\nlet benchmark_profit = msg.payload[\"c\"]\nlet gain_today_unrealized = 0\nlet gain_today_realized = 0\nlet benchmarkgain_today = 0\nlet gainloss_realized = 0\n\n\nif (realized_today === null) {\n    realized_today = 0\n}\n\nif (unrealized_today === null) {\n    unrealized_today = 0\n}\n\nif (benchmark_profit === null) {\n    benchmark_profit = 0\n}\n\nlet sql = \"update algo set gain_today_unrealized = \" + unrealized_today + \", gain_today_realized = \" +realized_today+ \", benchmarkgain_today = \" +benchmark_profit+ \", gainloss_realized = (gain_today_realized + gainloss_realized) where id = \" +id\nnode.warn(sql)\nmsg.topic = sql\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "4fa30a84238b69c0",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "240e192c65f9b3ce",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 380,
        "y": 1580,
        "wires": [
            [
                "86a4cfc6b88bc7c9"
            ]
        ]
    },
    {
        "id": "e6880eb05e9f91b7",
        "type": "comment",
        "z": "9e2882682ff3fb98",
        "name": "Update algo table with realized profits as end of day",
        "info": "",
        "x": 230,
        "y": 1480,
        "wires": []
    },
    {
        "id": "a4b88f1cf8db7029",
        "type": "delay",
        "z": "9e2882682ff3fb98",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 600,
        "y": 1440,
        "wires": [
            [
                "e3ef783c20d4d5a2"
            ]
        ]
    },
    {
        "id": "90e595debe0597a1",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 850,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "e3ef783c20d4d5a2",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "update benchmark_pct",
        "func": "let sql = \"update algo set benchmarkpct_today = benchmarkgain_today / benchmark_start_today\"\n//node.warn(sql)\nmsg.topic = sql\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1440,
        "wires": [
            [
                "fa4172572ec67f89"
            ]
        ]
    },
    {
        "id": "fa4172572ec67f89",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 970,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "40bc0c323bb46c2d",
        "type": "comment",
        "z": "9e2882682ff3fb98",
        "name": "Update benchmark at 4 AM daily",
        "info": "",
        "x": 190,
        "y": 980,
        "wires": []
    },
    {
        "id": "b6d13c4f488c252d",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "update algo from portfolio table",
        "func": "let id = msg.payload[\"id\"]\nlet name = msg.payload[\"name\"]\nlet shortdate = new Date().toJSON().slice(0, 10);\n//node.warn(\"Date: \" +date)\nshortdate = '2022-11-11'\n//node.warn(\"ID: \" +id+ \" Name: \" +name)\nlet sql = \"select sum(current_profit) as a, sum(position) as b from portfolio where portfolioid = \" +id+ \";\"\n//node.warn(sql)\nmsg.topic = sql\nmsg.id = id\nmsg.name = name\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1160,
        "wires": [
            [
                "5546594221d28f43"
            ]
        ]
    },
    {
        "id": "b67b9ad301640caf",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 330,
        "y": 1160,
        "wires": [
            [
                "78d818eb6575bbfb"
            ]
        ]
    },
    {
        "id": "78d818eb6575bbfb",
        "type": "split",
        "z": "9e2882682ff3fb98",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 450,
        "y": 1160,
        "wires": [
            [
                "b6d13c4f488c252d"
            ]
        ]
    },
    {
        "id": "dddf80bdc5ed3224",
        "type": "split",
        "z": "9e2882682ff3fb98",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 470,
        "y": 1220,
        "wires": [
            [
                "cff54c7f6c5650d1"
            ]
        ]
    },
    {
        "id": "cff54c7f6c5650d1",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "update algo table",
        "func": "let name = msg.name\nlet id = msg.id\nlet unrealized_today = msg.payload[\"a\"]\nlet position = msg.payload[\"b\"]\n\nif ( unrealized_today === null){\n    unrealized_today = 0\n}\n\nlet sql = \"update algo set portfolio = \" + position + \", starting_balance = \" +unrealized_today+ \" where id = \" +id\nnode.warn(sql)\nmsg.topic = sql\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1220,
        "wires": [
            [
                "c4bc928ac6d496a2"
            ]
        ]
    },
    {
        "id": "5546594221d28f43",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "240e192c65f9b3ce",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 340,
        "y": 1220,
        "wires": [
            [
                "dddf80bdc5ed3224"
            ]
        ]
    },
    {
        "id": "c4bc928ac6d496a2",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 810,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "ab286e86bd7657db",
        "type": "function-npm",
        "z": "9e2882682ff3fb98",
        "name": "Get benchmark",
        "func": "let symbol = 'SPY'\n\nlet cnt = 1\n\n/* Setup polygon request arguments */\nmsg.payload = {\n    symbol: symbol,\n    cnt: cnt,\n}\n\n\n//node.warn(symbol)\n//node.warn(msg.payload)\nmsg.symbol = symbol\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 1020,
        "wires": [
            [
                "4cc499b5c00d24ca"
            ]
        ]
    },
    {
        "id": "c3971ec669e980e9",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "update current_benchmark in portfolio",
        "func": "let item = 0\nlet price = 0\n\nfor (item of msg.payload.results) {\n    price = item.price;\n    \n}\n\n//node.warn(price)\n\nlet sql = \"update algo set benchmark_start_today = \" +price\n//node.warn(sql)\nmsg.topic = sql\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1020,
        "wires": [
            [
                "09b84cec4c841828"
            ]
        ]
    },
    {
        "id": "4cc499b5c00d24ca",
        "type": "polygon-last-trade-v3",
        "z": "9e2882682ff3fb98",
        "conf": "651f0aab10dc1632",
        "symbol": "",
        "x": 540,
        "y": 1020,
        "wires": [
            [
                "c3971ec669e980e9"
            ]
        ]
    },
    {
        "id": "477e2e9e37947de0",
        "type": "inject",
        "z": "9e2882682ff3fb98",
        "name": "Daily 4 AM",
        "props": [],
        "repeat": "",
        "crontab": "00 04 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "ab286e86bd7657db"
            ]
        ]
    },
    {
        "id": "09b84cec4c841828",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 1030,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "a3ea7b67942362d8",
        "type": "comment",
        "z": "9e2882682ff3fb98",
        "name": "Update starting current_values at 4 AM daily",
        "info": "",
        "x": 230,
        "y": 1100,
        "wires": []
    },
    {
        "id": "e5a6ed685eb9a4f6",
        "type": "inject",
        "z": "9e2882682ff3fb98",
        "name": "Daily 4 AM",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 04 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select id,name from algo ",
        "x": 170,
        "y": 1160,
        "wires": [
            [
                "b67b9ad301640caf"
            ]
        ]
    },
    {
        "id": "973db4d97471524e",
        "type": "inject",
        "z": "9e2882682ff3fb98",
        "name": "Create Algo table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "create table IF NOT EXISTS algo (id INTEGER,name TEXT, tickers TEXT, algotype  TEXT,status TEXT, trade_freq TEXT,num_trades INTEGER,sharpe REAL,unixtime INTEGER, portfolio REAL, starting_balance REAL,balance_today REAL,ending_balance_today REAL,balance_end REAL,benchmark_start REAL,benchmark_start_today REAL,benchmark_current REAL,benchmark_end_today REAL,benchmark_end,gain_today_realized REAL, gain_today_unrealized REAL, pctgain_today REAL,gainloss_realized REAL,gainloss_unrealized REAL,gainlosspct REAL, totalgainloss REAL, totalpct REAL,benchmarkgain_today REAL, benchmarkgain REAL,benchmarkpct_today REAL,benchmarkpct REAL)",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "d05e0862b3d08d3b"
            ]
        ]
    },
    {
        "id": "d05e0862b3d08d3b",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 330,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c2719385a3793ec7",
        "type": "comment",
        "z": "9e2882682ff3fb98",
        "name": "Algo Table",
        "info": "",
        "x": 120,
        "y": 40,
        "wires": []
    },
    {
        "id": "fddd57f05fc40577",
        "type": "inject",
        "z": "9e2882682ff3fb98",
        "name": "Drop ALGO table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "drop table algo ",
        "x": 960,
        "y": 100,
        "wires": [
            [
                "f45bebefe0f0dcc6"
            ]
        ]
    },
    {
        "id": "f45bebefe0f0dcc6",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 1110,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "945238a1c16755e2",
        "type": "inject",
        "z": "9e2882682ff3fb98",
        "name": "Create unique index on algo",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE UNIQUE INDEX id ON algo  (id);",
        "x": 560,
        "y": 100,
        "wires": [
            [
                "4fafa93ae142b225"
            ]
        ]
    },
    {
        "id": "4fafa93ae142b225",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 750,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "2ebebba985edc05b",
        "type": "inject",
        "z": "9e2882682ff3fb98",
        "name": "Display ALGO table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from algo ",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "6e3f9d4fa0aa6277"
            ]
        ]
    },
    {
        "id": "6e3f9d4fa0aa6277",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 350,
        "y": 160,
        "wires": [
            [
                "cf7d19de434d30de"
            ]
        ]
    },
    {
        "id": "cf7d19de434d30de",
        "type": "debug",
        "z": "9e2882682ff3fb98",
        "name": "debug 176",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 160,
        "wires": []
    },
    {
        "id": "4d9321951c19d7d6",
        "type": "inject",
        "z": "9e2882682ff3fb98",
        "name": "delete from algo table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "delete from algo where id <> 1668441576060 and name = 'Buy Dividend Portfolio'",
        "x": 200,
        "y": 220,
        "wires": [
            [
                "be94a3192dd8a784"
            ]
        ]
    },
    {
        "id": "be94a3192dd8a784",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 370,
        "y": 220,
        "wires": [
            [
                "26b4758187ce4ce4"
            ]
        ]
    },
    {
        "id": "26b4758187ce4ce4",
        "type": "debug",
        "z": "9e2882682ff3fb98",
        "name": "debug 177",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 220,
        "wires": []
    },
    {
        "id": "8f70d8e6dccdb671",
        "type": "inject",
        "z": "9e2882682ff3fb98",
        "name": "Update ALGO table",
        "props": [
            {
                "p": "topic1",
                "v": "update algo set algotype = \"intraday\"",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "update algo set gainlosspct = pctgain_today * 100",
        "x": 750,
        "y": 220,
        "wires": [
            [
                "ca1b9eeccc9c9a15"
            ]
        ]
    },
    {
        "id": "ca1b9eeccc9c9a15",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 910,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "6fec984372cc3922",
        "type": "http in",
        "z": "9e2882682ff3fb98",
        "name": "/api/download_algo",
        "url": "/api/download_algo",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "1022d0bf45b143f2"
            ]
        ]
    },
    {
        "id": "f08b868feb64eb16",
        "type": "http response",
        "z": "9e2882682ff3fb98",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json",
            "Content-Disposition": "attachment; filename=\"outfile.json\""
        },
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "a2682c40550af765",
        "type": "csv",
        "z": "9e2882682ff3fb98",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "id,name, tickers, algotype ,status, trade_freq,num_trades,sharpe,unixtime, portfolio, starting_balance,balance_today,ending_balance_today,balance_end,benchmark_start,benchmark_start_today,benchmark_current,benchmark_end_today,benchmark_end,gain_today_realized, gain_today_unrealized, pctgain_today,gainloss_realized,gainloss_unrealized,gainlosspct, benchmarkgain_today, benchmarkgain,benchmarkpct_today,benchmarkpct",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 690,
        "y": 380,
        "wires": [
            [
                "0e31ca28954f5d8d"
            ]
        ]
    },
    {
        "id": "1022d0bf45b143f2",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "export query",
        "func": "msg.topic= \"select * from algo\"\nnode.warn(msg.topic)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 380,
        "wires": [
            [
                "106607af20fb4e1a"
            ]
        ]
    },
    {
        "id": "0e31ca28954f5d8d",
        "type": "file",
        "z": "9e2882682ff3fb98",
        "name": "write report",
        "filename": "/data/store/algo.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 830,
        "y": 380,
        "wires": [
            [
                "f08b868feb64eb16"
            ]
        ]
    },
    {
        "id": "a2fa7d4488c0309a",
        "type": "comment",
        "z": "9e2882682ff3fb98",
        "name": "This flow downloads the algo table ",
        "info": "",
        "x": 220,
        "y": 340,
        "wires": []
    },
    {
        "id": "106607af20fb4e1a",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 550,
        "y": 380,
        "wires": [
            [
                "a2682c40550af765"
            ]
        ]
    },
    {
        "id": "54071e0ffc8966f5",
        "type": "inject",
        "z": "9e2882682ff3fb98",
        "name": "Alter Algo table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "alter table algo add column gainlosspct REAL",
        "x": 740,
        "y": 160,
        "wires": [
            [
                "df238cdd76c50faf"
            ]
        ]
    },
    {
        "id": "df238cdd76c50faf",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 910,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ee3d57c4960c5039",
        "type": "comment",
        "z": "9e2882682ff3fb98",
        "name": "good idea to keep drop table flows disconnected until needed",
        "info": "",
        "x": 1060,
        "y": 60,
        "wires": []
    },
    {
        "id": "ebe72c57040bbaad",
        "type": "inject",
        "z": "9e2882682ff3fb98",
        "name": "Display ALGO names",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select id,name from algo ",
        "x": 200,
        "y": 280,
        "wires": [
            [
                "47e02037973f0ba0"
            ]
        ]
    },
    {
        "id": "47e02037973f0ba0",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 370,
        "y": 280,
        "wires": [
            [
                "7ac0cb284a2b84e7"
            ]
        ]
    },
    {
        "id": "7ac0cb284a2b84e7",
        "type": "split",
        "z": "9e2882682ff3fb98",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 490,
        "y": 280,
        "wires": [
            [
                "92f8d53a0781a640"
            ]
        ]
    },
    {
        "id": "92f8d53a0781a640",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "get ids",
        "func": "let id = msg.payload[\"id\"]\nlet name = msg.payload[\"name\"]\n\nnode.warn(\"ID: \" +id+ \" Name: \" +name)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "f6615edcc0121615",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "show algos",
        "func": "let id = ''\nlet name = ''\nlet tickers = ''\nlet algotype = ''\nlet status = ''\nlet trade_freq = ''\nlet num_trades = ''\nlet sharpe = ''\nlet unixtime = ''\nlet portfolio = ''\nlet starting_balance = ''\nlet balance_today = ''\nlet ending_balance_today = ''\nlet balance_end = ''\nlet benchmark_start = ''\nlet benchmark_start_today = ''\nlet benchmark_current = ''\nlet benchmark_end_today = ''\nlet benchmark_end = ''\nlet gain_today_realized = ''\nlet gain_today_unrealized = ''\nlet pctgain_today = ''\nlet gainloss_realized = ''\nlet gainloss_unrealized = ''\nlet gainlosspct = ''\nlet totalgainloss = 0\nlet totalpct = 0\nlet benchmarkgain_today = ''\nlet benchmarkgain = ''\nlet benchmarkpct_today = ''\nlet benchmarkpct = ''\n\n\nfor (let i=0;i<msg.payload.length;i++) \n{\n\n    id = msg.payload[i][\"id\"]\n    name = msg.payload[i][\"name\"]\n    tickers = msg.payload[i][\"tickers\"]\n    algotype = msg.payload[i][\"algotype\"]\n    status = msg.payload[i][\"status\"]\n    trade_freq = msg.payload[i][\"trade_freq\"]\n    num_trades = msg.payload[i][\"num_trades\"]\n    sharpe = msg.payload[i][\"sharpe\"]\n    unixtime = msg.payload[i][\"unixtime\"]\n    portfolio = msg.payload[i][\"portfolio\"]\n    starting_balance = msg.payload[i][\"starting_balance\"]\n    balance_today = msg.payload[i][\"balance_today\"]\n    ending_balance_today = msg.payload[i][\"ending_balance_today\"]\n    balance_end = msg.payload[i][\"balance_end\"]\n    benchmark_start = msg.payload[i][\"benchmark_start\"]\n    benchmark_start_today = msg.payload[i][\"benchmark_start_today\"]\n    benchmark_current = msg.payload[i][\"benchmark_current\"]\n    benchmark_end_today = msg.payload[i][\"benchmark_end_today\"]\n    benchmark_end = msg.payload[i][\"benchmark_end\"]\n    gain_today_realized = msg.payload[i][\"gain_today_realized\"]\n    gain_today_unrealized = msg.payload[i][\"gain_today_unrealized\"]\n    pctgain_today = (msg.payload[i][\"pctgain_today\"]) * 100\n    gainloss_realized = msg.payload[i][\"gainloss_realized\"]\n    gainloss_unrealized = msg.payload[i][\"gainloss_unrealized\"]\n    gainlosspct = (msg.payload[i][\"gainlosspct\"]) * 100\n    totalgainloss = msg.payload[i][\"totalgainloss\"]\n    totalpct = msg.payload[i][\"totalpct\"]\n    benchmarkgain_today = msg.payload[i][\"benchmarkgain_today\"]\n    benchmarkgain = msg.payload[i][\"benchmarkgain\"]\n    benchmarkpct_today = msg.payload[i][\"benchmarkpct_today\"]\n    benchmarkpct = msg.payload[i][\"benchmarkpct\"]\n\n    gain_today_unrealized = parseFloat(gain_today_unrealized).toFixed(2);\n    pctgain_today = parseFloat(pctgain_today).toFixed(2);\n\n    \n    totalgainloss = parseFloat(totalgainloss).toFixed(2);\n    totalpct = parseFloat(totalpct).toFixed(2);\n\n    node.warn(\"Name| \" + name + \" |Status|\" + status + \" |Trade freq| \" + trade_freq + \" |Number of Trades| \" + num_trades + \" |Gainloss today| \" + gain_today_unrealized + \" |Gainloss pct today| \" + pctgain_today + \" |Gainloss Alltime| \" + totalgainloss + \" |Gainloss Pct Alltime \" + totalpct)\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "555003103c3cbee6",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "312de5ece428d452",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "algos",
        "x": 350,
        "y": 1700,
        "wires": [
            [
                "f6615edcc0121615"
            ]
        ]
    },
    {
        "id": "7bf84205bc11710e",
        "type": "comment",
        "z": "9e2882682ff3fb98",
        "name": "Display Algo Table",
        "info": "",
        "x": 150,
        "y": 1640,
        "wires": []
    },
    {
        "id": "effdd46cd901f51c",
        "type": "inject",
        "z": "9e2882682ff3fb98",
        "name": "Display algo table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from algo",
        "x": 170,
        "y": 1700,
        "wires": [
            [
                "555003103c3cbee6"
            ]
        ]
    },
    {
        "id": "7dd4f041a4f8ba63",
        "type": "function",
        "z": "9e2882682ff3fb98",
        "name": "update current_profit",
        "func": "let sql = \"update portfolio set current_profitpct = current_profit / position\"\n\nmsg.topic = sql\nnode.warn(sql)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 900,
        "wires": [
            [
                "289af86b593558e7"
            ]
        ]
    },
    {
        "id": "289af86b593558e7",
        "type": "sqlite",
        "z": "9e2882682ff3fb98",
        "mydb": "240e192c65f9b3ce",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "portfolios",
        "x": 1120,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "e180d28d89260a2b",
        "type": "delay",
        "z": "9e2882682ff3fb98",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 760,
        "y": 900,
        "wires": [
            [
                "7dd4f041a4f8ba63"
            ]
        ]
    },
    {
        "id": "651f0aab10dc1632",
        "type": "polygon-account",
        "name": "Polygon Key"
    },
    {
        "id": "240e192c65f9b3ce",
        "type": "sqlitedb",
        "db": "/data/store/portfolios",
        "mode": "RWC"
    },
    {
        "id": "312de5ece428d452",
        "type": "sqlitedb",
        "db": "/data/store/algo",
        "mode": "RWC"
    }
]